const fill_threshold=1;function get_brush_canvas_size(t,e){return 2*Math.ceil(t*("circle"===e?2.1:1)/2)}function render_brush(t,e,a){e.match(/diagonal/)&&(a-=.4);const o=Math.round(t.canvas.width/2),n=Math.round(o-a/2),r=Math.round(o+a/2),i=Math.round(t.canvas.height/2),s=Math.round(i-a/2),l=Math.round(i+a/2);"circle"===e?draw_ellipse(t,n,s,a,a,!1,!0):"square"===e?t.fillRect(n,s,~~a,~~a):"diagonal"===e?draw_line_without_pattern_support(t,n,s,r,l):"reverse_diagonal"===e?draw_line_without_pattern_support(t,n,l,r,s):"horizontal"===e?draw_line_without_pattern_support(t,n,i,a,i):"vertical"===e&&draw_line_without_pattern_support(t,o,s,o,a)}function draw_ellipse(t,e,a,o,n,r,i){const s=e+o/2,l=a+n/2;if(aliasing){const e=[],a=.05;for(let t=0;t<TAU;t+=a)e.push({x:s+Math.cos(t)*o/2,y:l+Math.sin(t)*n/2});draw_polygon(t,e,r,i)}else t.beginPath(),t.ellipse(s,l,Math.abs(o/2),Math.abs(n/2),0,TAU,!1),t.stroke(),t.fill()}function draw_rounded_rectangle(t,e,a,o,n,r,i,s,l){if(aliasing){const c=[],h=(t,e)=>{c.push({x:t,y:e})},_=(t,e,a,o,n,r)=>{for(let i=n;i<r;i+=.05)c.push({x:t+Math.cos(i)*a,y:e+Math.sin(i)*o});c.push({x:t+Math.cos(r)*a,y:e+Math.sin(r)*o})},d=e+o,g=a+n;_(d-r,a+i,r,i,3*TAU/4,TAU,!1),h(d,g-i),_(d-r,g-i,r,i,0,1*TAU/4,!1),h(e+r,g),_(e+r,g-i,r,i,1*TAU/4,1*TAU/2,!1),h(e,a+i),_(e+r,a+i,r,i,TAU/2,3*TAU/4,!1),draw_polygon(t,c,s,l)}else t.beginPath(),t.moveTo(e+r,a),t.lineTo(e+o-r,a),t.quadraticCurveTo(e+o,a,e+o,a+i),t.lineTo(e+o,a+n-i),t.quadraticCurveTo(e+o,a+n,e+o-r,a+n),t.lineTo(e+r,a+n),t.quadraticCurveTo(e,a+n,e,a+n-i),t.lineTo(e,a+i),t.quadraticCurveTo(e,a,e+r,a),t.closePath(),s&&t.stroke(),l&&t.fill()}const get_brush_canvas=memoize_synchronous_function(((t,e)=>{const a=get_brush_canvas_size(e,t),o=make_canvas(a,a);return render_brush(o.ctx,t,e),o}),20);$G.on("invalidate-brush-canvases",(()=>{get_brush_canvas.clear_memo_cache()}));const stamp_brush_canvas=(t,e,a,o,n)=>{const r=get_brush_canvas(o,n),i=-Math.ceil(r.width/2),s=-Math.ceil(r.height/2);t.drawImage(r,e+i,a+s)},get_circumference_points_for_brush=memoize_synchronous_function(((t,e)=>{const a=get_brush_canvas(t,e),o=a.ctx.getImageData(0,0,a.width,a.height),n=(t,e)=>t>=0&&e>=0&&t<o.width&&e<o.height&&o.data[4*(e*o.width+t)+3]>127,r=-Math.ceil(a.width/2),i=-Math.ceil(a.height/2),s=[];for(let t=0;t<o.width;t+=1)for(let e=0;e<o.height;e+=1)!n(t,e)||n(t,e-1)&&n(t,e+1)&&n(t-1,e)&&n(t+1,e)||s.push({x:t+r,y:e+i});return s}));let line_brush_canvas,grid_pattern;function update_brush_for_drawing_lines(t){aliasing&&t>1&&(line_brush_canvas=get_brush_canvas("circle",t))}function draw_line_without_pattern_support(t,e,a,o,n,r=1){aliasing?bresenham_line(e,a,o,n,r>1?(e,a)=>{t.drawImage(line_brush_canvas,~~(e-line_brush_canvas.width/2),~~(a-line_brush_canvas.height/2))}:(e,a)=>{t.fillRect(e,a,1,1)}):(t.beginPath(),t.moveTo(e,a),t.lineTo(o,n),t.lineWidth=r,t.lineCap="round",t.stroke(),t.lineCap="butt")}function bresenham_line(t,e,a,o,n){t=~~t,a=~~a,e=~~e,o=~~o;const r=Math.abs(a-t),i=Math.abs(o-e),s=t<a?1:-1,l=e<o?1:-1;let c=r-i;for(;n(t,e),t!==a||e!==o;){const a=2*c;a>-i&&(c-=i,t+=s),a<r&&(c+=r,e+=l)}}function bresenham_dense_line(t,e,a,o,n){t=~~t,a=~~a,e=~~e,o=~~o;const r=Math.abs(a-t),i=Math.abs(o-e),s=t<a?1:-1,l=e<o?1:-1;let c=r-i;for(;n(t,e),t!==a||e!==o;){const a=2*c;a>-i&&(c-=i,t+=s),n(t,e),a<r&&(c+=r,e+=l)}}function draw_fill_without_pattern_support(t,e,a,o,n,r,i){const s=main_canvas.width,l=main_canvas.height,c=[[e=Math.max(0,Math.min(Math.floor(e),s)),a=Math.max(0,Math.min(Math.floor(a),l))]],h=t.getImageData(0,0,s,l);let _=4*(a*s+e);const d=h.data[_+0],g=h.data[_+1],u=h.data[_+2],f=h.data[_+3];if(!(Math.abs(o-d)<=fill_threshold&&Math.abs(n-g)<=fill_threshold&&Math.abs(r-u)<=fill_threshold&&Math.abs(i-f)<=fill_threshold)){for(;c.length;){let t,e,a,o,n;for(t=c.pop(),e=t[0],a=t[1],_=4*(a*s+e);w(_);)a--,_=4*(a*s+e);for(o=!1,n=!1;a++,_=4*(a*s+e),a<l&&w(_);)m(_),e>0&&(w(_-4)?o||(c.push([e-1,a]),o=!0):o&&(o=!1)),e<s-1&&(w(_+4)?n||(c.push([e+1,a]),n=!0):n&&(n=!1)),_+=4*s}t.putImageData(h,0,0)}function w(t){return Math.abs(h.data[t+0]-d)<=fill_threshold&&Math.abs(h.data[t+1]-g)<=fill_threshold&&Math.abs(h.data[t+2]-u)<=fill_threshold&&Math.abs(h.data[t+3]-f)<=fill_threshold}function m(t){h.data[t+0]=o,h.data[t+1]=n,h.data[t+2]=r,h.data[t+3]=i}}function draw_fill(t,e,a,o){if("string"==typeof o){const n=get_rgba_from_color(o);draw_fill_without_pattern_support(t,e,a,n[0],n[1],n[2],n[3])}else{const n=t.canvas,r=make_canvas(n.width,n.height);draw_fill_separately(n.ctx,r.ctx,e,a,255,255,255,255),replace_colors_with_swatch(r.ctx,o,0,0),t.drawImage(r,0,0)}}function draw_fill_separately(t,e,a,o,n,r,i,s){if(0===s)throw new Error("Filling with alpha of zero is not supported. Zero alpha is used for detecting whether a pixel has been visited.");const l=main_canvas.width,c=main_canvas.height,h=[[a=Math.max(0,Math.min(Math.floor(a),l)),o=Math.max(0,Math.min(Math.floor(o),c))]],_=t.getImageData(0,0,l,c),d=e.getImageData(0,0,l,c);let g=4*(o*l+a);const u=_.data[g+0],f=_.data[g+1],w=_.data[g+2],m=_.data[g+3];for(;h.length;){let t,e,a,o,n;for(t=h.pop(),e=t[0],a=t[1],g=4*(a*l+e);p(g);)a--,g=4*(a*l+e);for(o=!1,n=!1;a++,g=4*(a*l+e),a<c&&p(g);)b(g),e>0&&(p(g-4)?o||(h.push([e-1,a]),o=!0):o&&(o=!1)),e<l-1&&(p(g+4)?n||(h.push([e+1,a]),n=!0):n&&(n=!1)),g+=4*l}function p(t){return 0===d.data[t+3]&&Math.abs(_.data[t+0]-u)<=fill_threshold&&Math.abs(_.data[t+1]-f)<=fill_threshold&&Math.abs(_.data[t+2]-w)<=fill_threshold&&Math.abs(_.data[t+3]-m)<=fill_threshold}function b(t){d.data[t+0]=n,d.data[t+1]=r,d.data[t+2]=i,d.data[t+3]=s}e.putImageData(d,0,0)}function replace_color_globally(t,e,a,o,n,r,i,s,l){if(e===r&&a===i&&o===s&&n===l)return;const{data:c}=t;for(let t=0;t<c.length;t+=4)Math.abs(c[t+0]-e)<=fill_threshold&&Math.abs(c[t+1]-a)<=fill_threshold&&Math.abs(c[t+2]-o)<=fill_threshold&&Math.abs(c[t+3]-n)<=fill_threshold&&(c[t+0]=r,c[t+1]=i,c[t+2]=s,c[t+3]=l)}function find_color_globally(t,e,a,o,n,r){const i=t.data,s=e.data;for(let t=0;t<i.length;t+=4)Math.abs(i[t+0]-a)<=fill_threshold&&Math.abs(i[t+1]-o)<=fill_threshold&&Math.abs(i[t+2]-n)<=fill_threshold&&Math.abs(i[t+3]-r)<=fill_threshold&&(s[t+0]=255,s[t+1]=255,s[t+2]=255,s[t+3]=255)}function draw_noncontiguous_fill_without_pattern_support(t,e,a,o,n,r,i){e=Math.max(0,Math.min(Math.floor(e),t.canvas.width)),a=Math.max(0,Math.min(Math.floor(a),t.canvas.height));const s=t.getImageData(0,0,t.canvas.width,t.canvas.height),l=4*(a*s.width+e);replace_color_globally(s,s.data[l+0],s.data[l+1],s.data[l+2],s.data[l+3],o,n,r,i),t.putImageData(s,0,0)}function draw_noncontiguous_fill(t,e,a,o){if("string"==typeof o){const n=get_rgba_from_color(o);draw_noncontiguous_fill_without_pattern_support(t,e,a,n[0],n[1],n[2],n[3])}else{const n=t.canvas,r=make_canvas(n.width,n.height);draw_noncontiguous_fill_separately(n.ctx,r.ctx,e,a),replace_colors_with_swatch(r.ctx,o,0,0),t.drawImage(r,0,0)}}function draw_noncontiguous_fill_separately(t,e,a,o){a=Math.max(0,Math.min(Math.floor(a),t.canvas.width)),o=Math.max(0,Math.min(Math.floor(o),t.canvas.height));const n=t.getImageData(0,0,t.canvas.width,t.canvas.height),r=e.getImageData(0,0,e.canvas.width,e.canvas.height),i=4*(o*n.width+a);find_color_globally(n,r,n.data[i+0],n.data[i+1],n.data[i+2],n.data[i+3]),e.putImageData(r,0,0)}function apply_image_transformation(t,e){const a=selection?selection.source_canvas:main_canvas,o=make_canvas(a.width,a.height),n=a.getContext("2d"),r=o.getContext("2d");e(a,n,o,r),selection?undoable({name:`${t.name} (${localize("Selection")})`,icon:t.icon,soft:!0},(()=>{selection.replace_source_canvas(o)})):(deselect(),cancel(),undoable({name:t.name,icon:t.icon},(()=>{saved=!1,update_title(),main_ctx.copy(o),$canvas.trigger("update")})))}function flip_horizontal(){apply_image_transformation({name:localize("Flip horizontal"),icon:get_help_folder_icon("p_fliph.png")},((t,e,a,o)=>{o.translate(a.width,0),o.scale(-1,1),o.drawImage(t,0,0)}))}function flip_vertical(){apply_image_transformation({name:localize("Flip vertical"),icon:get_help_folder_icon("p_flipv.png")},((t,e,a,o)=>{o.translate(0,a.height),o.scale(1,-1),o.drawImage(t,0,0)}))}function rotate(t){apply_image_transformation({name:`${localize("Rotate by angle")} ${t/TAU*360} ${localize("Degrees")}`,icon:get_help_folder_icon(`p_rotate_${t>=0?"cw":"ccw"}.png`)},((e,a,o,n)=>{switch(n.save(),t){case TAU/4:case-3*TAU/4:o.width=e.height,o.height=e.width,n.disable_image_smoothing(),n.translate(o.width,0),n.rotate(TAU/4);break;case TAU/2:case TAU/-2:n.translate(o.width,o.height),n.rotate(TAU/2);break;case 3*TAU/4:case TAU/-4:o.width=e.height,o.height=e.width,n.disable_image_smoothing(),n.translate(0,o.height),n.rotate(TAU/-4);break;default:{const a=e.width,r=e.height;let i=1/0,s=-1/0,l=1/0,c=-1/0;const h=(e,o)=>{const n=Math.sin(-t)*r*e+Math.cos(+t)*a*o,h=Math.sin(+t)*a*o+Math.cos(-t)*r*e;i=Math.min(i,n),s=Math.max(s,n),l=Math.min(l,h),c=Math.max(c,h)};h(0,0),h(0,1),h(1,0),h(1,1);const _=i,d=l,g=s-i,u=c-l;o.width=g,o.height=u,n.disable_image_smoothing(),transparency||(n.fillStyle=selected_colors.background,n.fillRect(0,0,o.width,o.height)),n.translate(-_,-d),n.rotate(t),n.drawImage(e,0,0,a,r);break}}n.drawImage(e,0,0),n.restore()}))}function stretch_and_skew(t,e,a,o){apply_image_transformation({name:0!==a||0!==o?1!==t||1!==e?localize("Stretch and Skew"):localize("Skew"):localize("Stretch"),icon:get_help_folder_icon(0!==a?"p_skew_h.png":0!==o?"p_skew_v.png":1!==e?1!==t?"p_stretch_both.png":"p_stretch_v.png":"p_stretch_h.png")},((n,r,i,s)=>{const l=n.width*t,c=n.height*e;let h=1/0,_=-1/0,d=1/0,g=-1/0;const u=(t,e)=>{const n=Math.tan(a)*c*t+l*e,r=Math.tan(o)*l*e+c*t;h=Math.min(h,n),_=Math.max(_,n),d=Math.min(d,r),g=Math.max(g,r)};u(0,0),u(0,1),u(1,0),u(1,1);const f=h,w=d,m=_-h,p=g-d;i.width=Math.max(1,m),i.height=Math.max(1,p),s.disable_image_smoothing(),transparency||(s.fillStyle=selected_colors.background,s.fillRect(0,0,i.width,i.height)),s.save(),s.transform(1,Math.tan(o),Math.tan(a),1,-f,-w),s.drawImage(n,0,0,l,c),s.restore()}))}function invert_rgb(t,e=t){const a=t.getImageData(0,0,t.canvas.width,t.canvas.height);for(let t=0;t<a.data.length;t+=4)a.data[t+0]=255-a.data[t+0],a.data[t+1]=255-a.data[t+1],a.data[t+2]=255-a.data[t+2];e.putImageData(a,0,0)}function invert_monochrome(t,e=t,a=detect_monochrome(t)){const o=t.getImageData(0,0,t.canvas.width,t.canvas.height),n=new Uint32Array(o.data.buffer);if(0===a.presentNonTransparentUint32s.length)return;if(1===a.presentNonTransparentUint32s.length){const n=palette[0],r=palette[14]||palette[1],i=get_rgba_from_color(n),s=a.presentNonTransparentRGBAs[0];return s[0]===i[0]&&s[1]===i[1]&&s[2]===i[2]&&s[3]===i[3]?e.fillStyle=r:e.fillStyle=n,a.monochromeWithTransparency&&(e.putImageData(o,0,0),e.globalCompositeOperation="source-in"),void e.fillRect(0,0,t.canvas.width,t.canvas.height)}const[r,i]=a.presentNonTransparentUint32s;for(let t=0,e=n.length;t<e;t+=1)n[t]===r?n[t]=i:n[t]===i&&(n[t]=r);e.putImageData(o,0,0)}function threshold_black_and_white(t,e){const a=t.getImageData(0,0,t.canvas.width,t.canvas.height);for(let t=0;t<a.data.length;t+=4){const o=(a.data[t+0]+a.data[t+1]+a.data[t+2])/3/255>e;a.data[t+0]=255*o,a.data[t+1]=255*o,a.data[t+2]=255*o,a.data[t+3]=255}t.putImageData(a,0,0)}function replace_colors_with_swatch(t,e,a=0,o=0){t.globalCompositeOperation="source-in",t.fillStyle=e,t.beginPath(),t.rect(0,0,t.canvas.width,t.canvas.height),t.save(),t.translate(-a,-o),t.fill(),t.restore()}function compute_bezier(t,e,a,o,n,r,i,s,l){const c=1-t,h=c*c,_=t*t;let d,g,u,f=0;return d=h*c,g=h*t*3,u=c*_*3,f=t*_,{x:d*e+g*o+u*r+f*s,y:d*a+g*n+u*i+f*l}}function draw_bezier_curve_without_pattern_support(t,e,a,o,n,r,i,s,l,c){let h={x:e,y:a};for(let _=0;_<1;_+=.01){const d=compute_bezier(_,e,a,o,n,r,i,s,l);draw_line_without_pattern_support(t,h.x,h.y,d.x,d.y,c),h=d}}function draw_quadratic_curve(t,e,a,o,n,r,i,s){draw_bezier_curve(t,e,a,o,n,o,n,r,i,s)}function draw_bezier_curve(t,e,a,o,n,r,i,s,l,c){const h=Math.min(e,o,r,s),_=Math.min(a,n,i,l),d=Math.max(e,o,r,s),g=Math.max(a,n,i,l);draw_with_swatch(t,h,_,d,g,stroke_color,(t=>{draw_bezier_curve_without_pattern_support(t,e,a,o,n,r,i,s,l,c)}))}function draw_line(t,e,a,o,n,r){const i=Math.min(e,o),s=Math.min(a,n),l=Math.max(e,o),c=Math.max(a,n);draw_with_swatch(t,i,s,l,c,stroke_color,(t=>{draw_line_without_pattern_support(t,e,a,o,n,r)}))}function draw_grid(t,e){const a=Math.floor(e);if(!grid_pattern||grid_pattern.width!==a||grid_pattern.height!==a){const e=make_canvas(a,a),o="#808080",n="#c0c0c0";e.ctx.fillStyle=o,e.ctx.fillRect(0,0,1,a),e.ctx.fillStyle=o,e.ctx.fillRect(0,0,a,1),e.ctx.fillStyle=n;for(let t=1;t<a;t+=2)e.ctx.fillRect(t,0,1,1),e.ctx.fillRect(0,t,1,1);grid_pattern=t.createPattern(e,"repeat")}t.save(),t.rect(0,0,t.canvas.width,t.canvas.height),e!==a&&t.translate(-.5,-.75),t.scale(e/a,e/a),t.enable_image_smoothing(),t.fillStyle=grid_pattern,t.fill(),t.restore()}$G.on("invalidate-brush-canvases",(()=>{get_circumference_points_for_brush.clear_memo_cache()})),(()=>{const t=document.createElementNS("http://www.w3.org/2000/svg","svg"),e=make_canvas(8,4),a=make_canvas(4,8);let o,n;function r(r,i,s,l,c,h,_,d){n||(e.ctx.fillStyle="white",e.ctx.fillRect(4,0,4,4),a.ctx.fillStyle="white",a.ctx.fillRect(0,4,4,4),o=r.createPattern(e,"repeat"),n=r.createPattern(a,"repeat"));const g=1/h;if(r.save(),r.scale(h,h),r.translate(_,d),r.translate(i,s),r.globalCompositeOperation="difference",l>0){const e=t.createSVGMatrix();o.setTransform&&o.setTransform(e.translate(-i,-s).translate(g,0).scale(1/h)),r.fillStyle=o,r.fillRect(0,0,l,1)}else if(c>0){const e=t.createSVGMatrix();n.setTransform&&n.setTransform(e.translate(-i,-s).translate(0,g).scale(1/h)),r.fillStyle=n,r.fillRect(0,0,1,c)}r.restore()}window.draw_selection_box=(t,e,a,o,n,i,s,l)=>{r(t,e,a,o-1,0,i,s,l),1===n?r(t,e,a,0,1,i,s,l):r(t,e,a+1,0,n-2,i,s,l),r(t,e+o-1,a,0,n,i,s,l),r(t,e,a+n-1,o-1,0,i,s,l),r(t,e,a+1,0,1,i,s,l)}})(),(()=>{const t=function(){const t=new libtess.GluTesselator;return t.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA,(function(t,e){e[e.length]=t[0],e[e.length]=t[1]})),t.gluTessCallback(libtess.gluEnum.GLU_TESS_BEGIN,(function(t){t!==libtess.primitiveType.GL_TRIANGLES&&window.console&&console.log(`Expected TRIANGLES but got type: ${t}`)})),t.gluTessCallback(libtess.gluEnum.GLU_TESS_ERROR,(function(t){window.console&&console.log("error callback"),window.console&&console.log(`error number: ${t}`)})),t.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE,(function(t){return[t[0],t[1],t[2]]})),t.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG,(function(){})),t}();let e,a;function o(t){try{e=t.getContext("webgl",{antialias:!1})}catch(t){return void show_error_message("Failed to get WebGL context. You may need to refresh the web page, or restart your computer.",t)}if(!e)return void show_error_message("Failed to get WebGL context. You may need to refresh the web page, or restart your computer.");window.WEBGL_lose_context=e.getExtension("WEBGL_lose_context");const o=function(){const t=["attribute vec4 position;","void main() {","\t/* already in normalized coordinates, so just pass through */","\tgl_Position = position;","}"].join(""),a=e.createShader(e.VERTEX_SHADER);e.shaderSource(a,t),e.compileShader(a),e.getShaderParameter(a,e.COMPILE_STATUS)||window.console&&console.log(`Vertex shader failed to compile. Log: ${e.getShaderInfoLog(a)}`);const o=["precision mediump float;","void main() {","\tgl_FragColor = vec4(0, 0, 0, 1);","}"].join(""),n=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(n,o),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS)||window.console&&console.log(`Fragment shader failed to compile. Log: ${e.getShaderInfoLog(n)}`);const r=e.createProgram();return e.attachShader(r,a),e.attachShader(r,n),e.linkProgram(r),e.useProgram(r),r}();a=e.getAttribLocation(o,"position"),e.enableVertexAttribArray(a)}function n(t){const o=new Float32Array(t),n=e.createBuffer();return e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,o,e.STATIC_DRAW),e.vertexAttribPointer(a,2,e.FLOAT,!1,0,0),t.length/2}const r=document.createElement("canvas"),i=document.createElement("canvas"),s=i.getContext("2d");let l;function c(){const t=100;brush_size>t&&(brush_size=t,show_error_message("Brush size clamped to 100")),pencil_size>t&&(pencil_size=t,show_error_message("Pencil size clamped to 100")),stroke_size>t&&(stroke_size=t,show_error_message("Stroke size clamped to 100"))}function h(a,o,l,c,h){if(!e)return void show_error_message("Failed to get WebGL context. You may need to refresh the web page, or restart your computer.");l&&stroke_size>1&&update_brush_for_drawing_lines(stroke_size);const _=a.strokeStyle,d=a.fillStyle,g=o.length,u=2*g;if(0===g)return;let f=1/0,w=-1/0,m=1/0,p=-1/0;for(const{x:t,y:e}of o)f=Math.min(t,f),w=Math.max(t,w),m=Math.min(e,m),p=Math.max(e,p);w+=1,p+=1,f-=1,m-=1,r.width=w-f,r.height=p-m,e.viewport(0,0,r.width,r.height);const b=new Float32Array(u);for(let t=0;t<g;t++)b[2*t+0]=(o[t].x-f)/r.width*2-1,b[2*t+1]=1-(o[t].y-m)/r.height*2;if(c){const o=function(e){t.gluTessNormal(0,0,1);const a=[];t.gluTessBeginPolygon(a);for(let a=0;a<e.length;a++){t.gluTessBeginContour();const o=e[a];for(let e=0;e<o.length;e+=2){const a=[o[e],o[e+1],0];t.gluTessVertex(a,a)}t.gluTessEndContour()}return t.gluTessEndPolygon(),a}([b]);let l=n(o);e.clear(e.COLOR_BUFFER_BIT),e.drawArrays(e.TRIANGLES,0,l),i.width=r.width,i.height=r.height,s.drawImage(r,0,0),replace_colors_with_swatch(s,d,f,m),a.drawImage(i,f,m)}if(l)if(stroke_size>1){const t=~~(1.1*stroke_size),e=f-t,n=m-t;i.width=w-f+2*t,i.height=p-m+2*t;for(let t=0;t<g-(h?0:1);t++){const a=o[t],r=o[(t+1)%g];draw_line_without_pattern_support(s,a.x-e,a.y-n,r.x-e,r.y-n,stroke_size)}replace_colors_with_swatch(s,_,e,n),a.drawImage(i,e,n)}else{let t=n(b);e.clear(e.COLOR_BUFFER_BIT),e.drawArrays(h?e.LINE_LOOP:e.LINE_STRIP,0,t),i.width=r.width,i.height=r.height,s.drawImage(r,0,0),replace_colors_with_swatch(s,_,f,m),a.drawImage(i,f,m)}}o(r),r.addEventListener("webglcontextlost",(t=>{t.preventDefault(),window.console&&console.warn("WebGL context lost"),c(),l=setTimeout((()=>{show_error_message("The WebGL context was lost. You may need to refresh the web page, or restart your computer.")}),3e3)}),!1),r.addEventListener("webglcontextrestored",(()=>{o(r),window.console&&console.warn("WebGL context restored"),clearTimeout(l),c(),$G.triggerHandler("invalidate-brush-canvases"),$G.triggerHandler("redraw-tool-options-because-webglcontextrestored")}),!1),window.draw_line_strip=(t,e)=>{h(t,e,!0,!1,!1)},window.draw_polygon=(t,e,a,o)=>{h(t,e,a,o,!0)},window.copy_contents_within_polygon=(t,e,a,o,n,r)=>{const i=(n=Math.max(n,a+1))-a,s=(r=Math.max(r,o+1))-o,l=make_canvas(t);l.ctx.save(),l.ctx.globalCompositeOperation="destination-in",draw_polygon(l.ctx,e,!1,!0),l.ctx.restore();const c=make_canvas(i,s);return c.ctx.drawImage(l,a,o,i,s,0,0,i,s),c},window.draw_with_swatch=(t,e,a,o,n,r,l)=>{const c=~~(1.1*stroke_size);o=Math.max(o,e+1),n=Math.max(n,a+1),i.width=o-e+2*c,i.height=n-a+2*c;const h=e-c,_=a-c;s.save(),s.translate(-h,-_),l(s),s.restore(),replace_colors_with_swatch(s,r,h,_),t.drawImage(i,h,_)}})();