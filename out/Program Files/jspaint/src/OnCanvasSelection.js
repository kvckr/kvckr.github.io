class OnCanvasSelection extends OnCanvasObject{constructor(t,a,e,s,i){super(t,a,e,s,!0),this.$el.addClass("selection");let h=tool_transparent_mode,o=selected_colors.background;this._on_option_changed=()=>{this.source_canvas&&(h===tool_transparent_mode&&o===selected_colors.background||(h=tool_transparent_mode,o=selected_colors.background,this.update_tool_transparent_mode()))},$G.on("option-changed",this._on_option_changed),this.instantiate(i)}position(){super.position(!0),update_helper_layer()}instantiate(t){this.$el.css({cursor:make_css_cursor("move",[8,8],"move"),touchAction:"none"}),this.position();(()=>{let a,e;t?(this.source_canvas=make_canvas(t),this.source_canvas.width!==this.width&&(this.source_canvas.width=this.width),this.source_canvas.height!==this.height&&(this.source_canvas.height=this.height),this.canvas=make_canvas(this.source_canvas)):(this.source_canvas=make_canvas(this.width,this.height),this.source_canvas.ctx.drawImage(main_canvas,this.x,this.y,this.width,this.height,0,0,this.width,this.height),this.canvas=make_canvas(this.source_canvas),this.cut_out_background()),this.$el.append(this.canvas),this.handles=new Handles({$handles_container:this.$el,$object_container:$canvas_area,outset:2,get_rect:()=>({x:this.x,y:this.y,width:this.width,height:this.height}),set_rect:({x:t,y:a,width:e,height:s})=>{undoable({name:"Resize Selection",icon:get_icon_for_tool(get_tool_by_id(TOOL_SELECT)),soft:!0},(()=>{this.x=t,this.y=a,this.width=e,this.height=s,this.position(),this.resize()}))},get_ghost_offset_left:()=>parseFloat($canvas_area.css("padding-left"))+1,get_ghost_offset_top:()=>parseFloat($canvas_area.css("padding-top"))+1});const s=t=>{make_or_update_undoable({match:a=>t.shiftKey&&a.name.match(/^(Smear|Stamp|Move) Selection$/)||!t.shiftKey&&a.name.match(/^Move Selection$/),name:t.shiftKey?"Smear Selection":"Move Selection",update_name:!0,icon:get_icon_for_tool(get_tool_by_id(TOOL_SELECT)),soft:!0},(()=>{const s=to_canvas_coords(t);this.x=Math.max(Math.min(s.x-a,main_canvas.width),-this.width),this.y=Math.max(Math.min(s.y-e,main_canvas.height),-this.height),this.position(),t.shiftKey&&this.draw()}))};this.canvas_pointerdown=t=>{t.preventDefault();const i=this.canvas.getBoundingClientRect(),h=t.clientX-i.left,o=t.clientY-i.top;a=~~(h/i.width*this.canvas.width),e=~~(o/i.height*this.canvas.height),$G.on("pointermove",s),this.dragging=!0,update_helper_layer(),$G.one("pointerup",(()=>{$G.off("pointermove",s),this.dragging=!1,update_helper_layer()})),(t.shiftKey||t.ctrlKey)&&undoable({name:"Stamp Selection",icon:get_icon_for_tool(get_tool_by_id(TOOL_SELECT)),soft:!0},(()=>{this.draw()}))},$(this.canvas).on("pointerdown",this.canvas_pointerdown),$canvas_area.trigger("resize"),$status_position.text(""),$status_size.text("")})()}cut_out_background(){const t=this.canvas,a=main_ctx.getImageData(this.x,this.y,this.width,this.height),e=t.ctx.getImageData(0,0,this.width,this.height),s=make_canvas(t);replace_colors_with_swatch(s.ctx,selected_colors.background,this.x,this.y);for(let t=0;t<e.data.length;t+=4){e.data[t+3]>0?(e.data[t+0]=a.data[t+0],e.data[t+1]=a.data[t+1],e.data[t+2]=a.data[t+2],e.data[t+3]=a.data[t+3],a.data[t+0]=0,a.data[t+1]=0,a.data[t+2]=0,a.data[t+3]=0):(e.data[t+0]=0,e.data[t+1]=0,e.data[t+2]=0,e.data[t+3]=0)}main_ctx.putImageData(a,this.x,this.y),t.ctx.putImageData(e,0,0),this.update_tool_transparent_mode(),transparency&&!tool_transparent_mode||main_ctx.drawImage(s,this.x,this.y),$G.triggerHandler("session-update"),update_helper_layer()}update_tool_transparent_mode(){const t=this.source_canvas.ctx.getImageData(0,0,this.width,this.height),a=this.canvas.ctx.createImageData(this.width,this.height),e=get_rgba_from_color(selected_colors.background);for(let s=0;s<a.data.length;s+=4){let i=t.data[s+3]>1;tool_transparent_mode&&Math.abs(t.data[s+0]-e[0])<=1&&Math.abs(t.data[s+1]-e[1])<=1&&Math.abs(t.data[s+2]-e[2])<=1&&Math.abs(t.data[s+3]-e[3])<=1&&(i=!1),i&&(a.data[s+0]=t.data[s+0],a.data[s+1]=t.data[s+1],a.data[s+2]=t.data[s+2],a.data[s+3]=t.data[s+3])}this.canvas.ctx.putImageData(a,0,0),update_helper_layer()}replace_source_canvas(t){this.source_canvas=t;const a=make_canvas(t);$(this.canvas).replaceWith(a),this.canvas=a;const e=this.x+this.width/2,s=this.y+this.height/2,i=a.width,h=a.height;this.x=~~(e-i/2),this.y=~~(s-h/2),this.width=i,this.height=h,this.position(),$(this.canvas).on("pointerdown",this.canvas_pointerdown),this.$el.triggerHandler("resize"),this.update_tool_transparent_mode()}resize(){const t=make_canvas(this.width,this.height);t.ctx.drawImage(this.source_canvas,0,0,this.width,this.height),this.replace_source_canvas(t)}scale(t){const a=Math.max(1,this.width*t),e=Math.max(1,this.height*t),s=make_canvas(a,e);s.ctx.drawImage(this.source_canvas,0,0,s.width,s.height),this.replace_source_canvas(s)}draw(){try{main_ctx.drawImage(this.canvas,this.x,this.y)}catch(t){}}destroy(){super.destroy(),$G.off("option-changed",this._on_option_changed),update_helper_layer()}}