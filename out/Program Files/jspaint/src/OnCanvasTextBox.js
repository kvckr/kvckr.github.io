class OnCanvasTextBox extends OnCanvasObject{constructor(t,e,i,s,o){super(t,e,i,s,!0),this.$el.addClass("textbox"),this.$editor=$(E("textarea")).addClass("textbox-editor");var n=document.createElementNS("http://www.w3.org/2000/svg","svg");n.setAttribute("version",1.1);var h=document.createElementNS("http://www.w3.org/2000/svg","foreignObject");h.setAttribute("x",0),h.setAttribute("y",0),n.append(h),this.$editor.css({position:"absolute",left:"0",top:"0",right:"0",bottom:"0",padding:"0",margin:"0",border:"0",resize:"none",overflow:"hidden",minWidth:"3em"});var a=this.$editor[0],r=a.cloneNode(!1);h.append(r),a.value=o||"",this.canvas=make_canvas(i,s),this.canvas.style.pointerEvents="none",this.$el.append(this.canvas);const l=()=>{this.position(),this.$el.triggerHandler("update"),this.$editor.add(r).css({width:this.width,height:this.height})},d=()=>{a.style.height="",a.style.minHeight="0px",a.style.bottom="",a.setAttribute("rows",1),this.height=Math.max(a.scrollHeight,this.height),a.removeAttribute("rows"),this.width=a.scrollWidth,a.style.bottom="0",l()},c=()=>{requestAnimationFrame((()=>{a.scrollTop=0}));const t=text_tool_font,e=t=>`rgba(${get_rgba_from_color(t).join(", ")}`;for(t.color=e(selected_colors.foreground),t.background=tool_transparent_mode?"transparent":e(selected_colors.background),this.$editor.add(this.canvas).css({transform:`scale(${magnification})`,transformOrigin:"left top"}),this.$editor.add(r).css({width:this.width,height:this.height,fontFamily:t.family,fontSize:`${t.size}pt`,fontWeight:t.bold?"bold":"normal",fontStyle:t.italic?"italic":"normal",textDecoration:t.underline?"underline":"none",writingMode:t.vertical?"vertical-lr":"",MsWritingMode:t.vertical?"vertical-lr":"",WebkitWritingMode:t.vertical?"vertical-lr":"",lineHeight:t.size*t.line_scale+"px",color:t.color,background:t.background}),d();r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(a.value)),n.setAttribute("width",this.width),n.setAttribute("height",this.height),h.setAttribute("width",this.width),h.setAttribute("height",this.height);var i=(new XMLSerializer).serializeToString(n),s=`data:image/svg+xml;charset=utf-8,${encodeURIComponent(i)}`,o=new Image;o.onload=()=>{this.canvas.width=this.width,this.canvas.height=this.height,this.canvas.ctx.drawImage(o,0,0),update_helper_layer()},o.onerror=t=>{window.console&&console.log("Failed to load image",t)},o.src=s};let g,p;$G.on("option-changed",this._on_option_changed=c),this.$editor.on("input",this._on_input=c),this.$editor.on("scroll",this._on_scroll=()=>{requestAnimationFrame((()=>{a.scrollTop=0}))}),this.$el.css({cursor:make_css_cursor("move",[8,8],"move"),touchAction:"none"}),this.position(),this.$el.append(this.$editor),this.$editor[0].focus(),this.handles=new Handles({$handles_container:this.$el,$object_container:$canvas_area,outset:2,thick:!0,get_rect:()=>({x:this.x,y:this.y,width:this.width,height:this.height}),set_rect:({x:t,y:e,width:i,height:s})=>{this.x=t,this.y=e,this.width=i,this.height=s,this.position(),c(),this.canvas.width=i,this.canvas.height=s},constrain_rect:({x:t,y:e,width:i,height:s},o,n)=>{const h=this.x,a=this.y,r=this.width,c=this.height;return this.x=t,this.y=e,this.width=i,this.height=s,l(),d(),-1===o&&(t=Math.min(this.x,h+r-this.width)),-1===n&&(e=Math.min(this.y,a+c-this.height)),i=this.width,s=this.height,this.x=h,this.y=a,this.width=r,this.height=c,l(),{x:t,y:e,width:i,height:s}},get_ghost_offset_left:()=>parseFloat($canvas_area.css("padding-left"))+1,get_ghost_offset_top:()=>parseFloat($canvas_area.css("padding-top"))+1});const _=t=>{const e=to_canvas_coords(t);this.x=Math.max(Math.min(e.x-g,main_canvas.width),-this.width),this.y=Math.max(Math.min(e.y-p,main_canvas.height),-this.height),this.position(),t.shiftKey};this.$el.on("pointerdown",(t=>{if(t.target instanceof HTMLInputElement||t.target instanceof HTMLTextAreaElement||t.target.classList.contains("handle")||t.target.classList.contains("grab-region"))return;t.preventDefault();const e=this.$el[0].getBoundingClientRect(),i=t.clientX-e.left,s=t.clientY-e.top;g=~~(i/e.width*this.canvas.width),p=~~(s/e.height*this.canvas.height),this.dragging=!0,update_helper_layer(),$G.on("pointermove",_),$G.one("pointerup",(()=>{$G.off("pointermove",_),this.dragging=!1,update_helper_layer()}))})),$status_position.text(""),$status_size.text(""),$canvas_area.trigger("resize"),OnCanvasTextBox.$fontbox&&OnCanvasTextBox.$fontbox.closed&&(OnCanvasTextBox.$fontbox=null);const x=OnCanvasTextBox.$fontbox=OnCanvasTextBox.$fontbox||new $FontBox,u=()=>{const t=x[0].getBoundingClientRect(),e=this.$el[0].getBoundingClientRect();t.left<=e.right&&e.left<=t.right&&t.top<=e.bottom&&e.top<=t.bottom&&x.css({top:this.$el.position().top-x.height()}),x.applyBounds()};c(),u(),$(window).on("resize",this._on_window_resize=()=>{this.$editor[0].scrollIntoView({block:"nearest",inline:"nearest"}),u()})}position(){super.position(!0),update_helper_layer()}destroy(){super.destroy(),OnCanvasTextBox.$fontbox&&!OnCanvasTextBox.$fontbox.closed&&OnCanvasTextBox.$fontbox.close(),OnCanvasTextBox.$fontbox=null,$G.off("option-changed",this._on_option_changed),this.$editor.off("input",this._on_input),this.$editor.off("scroll",this._on_scroll),$(window).off("resize",this._on_window_resize),update_helper_layer()}}