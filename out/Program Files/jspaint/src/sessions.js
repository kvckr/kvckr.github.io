(()=>{const e=(...e)=>{window.console&&console.log(...e)};let t=!1;try{localStorage._available=!0,t=localStorage._available,delete localStorage._available}catch(e){}const a=()=>main_canvas.ctx.getImageData(0,0,main_canvas.width,main_canvas.height).data.some((e=>e>1));let s;function o(e){s&&s.close();const t=s=$DialogWindow();t.on("close",(()=>{s=null})),t.title("Recover Document");let a=!1;try{window.localStorage}catch(e){a=!0}t.$main.append($(`\n\t\t\t<h1>Woah!</h1>\n\t\t\t<p>Your browser may have cleared the canvas due to memory usage.</p>\n\t\t\t<p>Undo to recover the document, and remember to save with <b>File > Save</b>!</p>\n\t\t\t${a?"<p><b>Note:</b> No automatic backup is possible unless you enable Cookies in your browser.</p>":e?"<p>\n\t\t\t\t\t\t\t<b>Note:</b> normally a backup is saved automatically,<br>\n\t\t\t\t\t\t\tbut autosave is paused while this dialog is open<br>\n\t\t\t\t\t\t\tto avoid overwriting the (singular) backup.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t(See <b>File &gt; Manage Storage</b> to view backups.)\n\t\t\t\t\t\t</p>":""}\n\t\t`));const o=t.$Button("Undo",(()=>{undo()})),i=t.$Button("Redo",(()=>{redo()})),n=()=>{o.attr("disabled",undos.length<1),i.attr("disabled",redos.length<1)};$G.on("session-update.session-hook",n),n(),t.$Button(localize("Close"),(()=>{t.close()})),t.center(),t.find("button:enabled").focus()}let i,n=undos.length;function r(){const e=s&&!s.closed;let t=!1;return a()?e&&(undos.length>n&&o(!0),t=!0):(e||o(),t=!0),n=undos.length,t}class l{constructor(a){this.id=a;const s=`image#${a}`;e(`Local storage ID: ${s}`),this.save_image_to_storage_immediately=()=>{r()||(e(`Saving image to storage: ${s}`),storage.set(s,main_canvas.toDataURL("image/png"),(e=>{e&&e.quotaExceeded&&storage_quota_exceeded()})))},this.save_image_to_storage_soon=debounce(this.save_image_to_storage_immediately,100),storage.get(s,((e,a)=>{e?t?show_error_message("Failed to retrieve image from local storage.",e):showMessageBox({message:"Please enable local storage in your browser's settings for local backup. It may be called Cookies, Storage, or Site Data."}):a?load_image_from_uri(a).then((e=>{open_from_image_info(e,null,null,!0,!0)}),(e=>{show_error_message("Failed to open image from local storage.",e)})):this.save_image_to_storage_soon()})),$G.on("session-update.session-hook",this.save_image_to_storage_soon)}end(){this.save_image_to_storage_soon.cancel(),this.save_image_to_storage_immediately(),$G.off(".session-hook")}}const c={cursor:{x:0,y:0,away:!0},tool:localize("Pencil"),hue:~~(360*Math.random()),saturation:50+~~(50*Math.random()),lightness:50+~~(40*Math.random())};c.color=`hsla(${c.hue}, ${c.saturation}%, ${c.lightness}%, 1)`,c.color_transparent=`hsla(${c.hue}, ${c.saturation}%, ${c.lightness}%, 0.5)`,c.color_desaturated=`hsla(${c.hue}, ${~~(.4*c.saturation)}%, ${c.lightness}%, 0.8)`;const d=new Image;d.src="images/cursors/default.png";class h{constructor(e){this.id=e,this._fb_listeners=[],file_name=`[Loading ${this.id}]`,update_title();const t=()=>{file_name=`[${this.id}]`,update_title(),this.start()};if(h.fb_root)t();else{var a=document.createElement("script");a.addEventListener("load",(()=>{firebase.initializeApp({apiKey:"AIzaSyBgau8Vu9ZE8u_j0rp-Lc044gYTX5O3X9k",authDomain:"jspaint.firebaseapp.com",databaseURL:"https://jspaint.firebaseio.com",projectId:"firebase-jspaint",storageBucket:"",messagingSenderId:"63395010995"}),h.fb_root=firebase.database().ref("/"),t()})),a.addEventListener("error",(()=>{show_error_message("Failed to load Firebase; the document will not load, and changes will not be saved."),file_name=`[Failed to load ${this.id}]`,update_title()})),a.src="lib/firebase.js",document.head.appendChild(a)}}start(){showMessageBox({messageHTML:"\n\t\t\t\t\t<p>The document may not load. Changes may not save.</p>\n\t\t\t\t\t<p>Multiuser sessions are public. There is no security.</p>\n\t\t\t\t"});const t=(e,t,a,s)=>{this._fb_listeners.push({fb:e,event_type:t,callback:a,error_callback:s}),e.on(t,a,s)};let a;this.fb=h.fb_root.child(this.id),this.fb_data=this.fb.child("data"),this.fb_users=this.fb.child("users"),i?this.fb_user=this.fb_users.child(i):(this.fb_user=this.fb_users.push(),i=this.fb_user.key),this.fb_user.onDisconnect().remove(),this.fb_user.set(c),t(this.fb_users,"child_added",(e=>{if(e.key===i)return;const a=e.ref;let s=e.val();const o=make_canvas(32,32),n=$(o).addClass("user-cursor").appendTo($app);n.css({display:"none",position:"absolute",left:0,top:0,opacity:0,zIndex:5,pointerEvents:"none",transition:"opacity 0.5s"}),t(a,"value",(e=>{if(s=e.val(),null==s)n.remove();else{const e=()=>{o.width=d.width,o.height=d.height;const e=o.ctx;e.fillStyle=s.color,e.fillRect(0,0,o.width,o.height),e.globalCompositeOperation="multiply",e.drawImage(d,0,0),e.globalCompositeOperation="destination-atop",e.drawImage(d,0,0)};d.complete?e():$(d).one("load",e);const t=canvas_bounding_client_rect;n.css({display:"block",position:"absolute",left:t.left+magnification*s.cursor.x,top:t.top+magnification*s.cursor.y,opacity:1-s.cursor.away})}}))})),this.write_canvas_to_database_immediately=()=>{if(r())return;const t=main_canvas.toDataURL();a!==t?(e("Write canvas data to Firebase"),this.fb_data.set(t),a=t):e("(Don't write canvas data to Firebase; it hasn't changed)")},this.write_canvas_to_database_soon=debounce(this.write_canvas_to_database_immediately,100);let s=!1;$G.on("session-update.session-hook",(()=>{s?e("(Ignore session-update from Sync Session undoable)"):this.write_canvas_to_database_soon()})),t(this.fb_data,"value",(t=>{e("Firebase data update");const o=t.val();if(null==o)this.write_canvas_to_database_soon();else{a=o;const e=new Image;e.onload=()=>{const t=make_canvas(e),a=t.ctx.getImageData(0,0,t.width,t.height),o=main_ctx.getImageData(0,0,main_canvas.width,main_canvas.height);image_data_match(a,o,5)||(s=!0,undoable({name:"Sync Session",icon:get_help_folder_icon("p_database.png")},(()=>{main_ctx.copy(e),$canvas_area.trigger("resize")})),s=!1)},e.src=o}}),(e=>{show_error_message("Failed to retrieve data from Firebase. The document will not load, and changes will not be saved.",e),file_name=`[Failed to load ${this.id}]`,update_title()})),$G.on("pointermove.session-hook",(e=>{const t=to_canvas_coords(e);this.fb_user.child("cursor").update({x:t.x,y:t.y,away:!1})})),$G.on("blur.session-hook",(()=>{this.fb_user.child("cursor").update({away:!0})}))}end(){this.write_canvas_to_database_soon.cancel(),this.write_canvas_to_database_immediately(),$G.off(".session-hook"),this._fb_listeners.forEach((({fb:t,event_type:a,callback:s})=>{e(`Remove listener for ${t.path.toString()} .on ${a}`),t.off(a,s)})),this._fb_listeners.length=0,this.fb_user.remove(),$app.find(".user-cursor").remove(),reset_file()}}let u;const _=()=>{u&&(e("Ending current session"),u.end(),u=null)},m=()=>(Math.random()*2**32).toString(16).replace(".",""),g=()=>{const t=location.hash.match(/^#?(?:.*,)?(session|local):(.*)$/i),a=location.hash.match(/^#?(?:.*,)?(load):(.*)$/i);if(t){const a="local"===t[1].toLowerCase(),s=t[2];""===s?(e("Invalid session ID; session ID cannot be empty"),_()):!a&&s.match(/[./[\]#$]/)?(e("Session ID is not a valid Firebase location; it cannot contain any of ./[]#$"),_()):s.match(/[-0-9A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02af\u1d00-\u1d25\u1d62-\u1d65\u1d6b-\u1d77\u1d79-\u1d9a\u1e00-\u1eff\u2090-\u2094\u2184-\u2184\u2488-\u2490\u271d-\u271d\u2c60-\u2c7c\u2c7e-\u2c7f\ua722-\ua76f\ua771-\ua787\ua78b-\ua78c\ua7fb-\ua7ff\ufb00-\ufb06]+/)?u&&u.id===s&&a===u instanceof l?e("Hash changed but the session ID and session type are the same"):(_(),a?(e(`Starting a new LocalSession, ID: ${s}`),u=new l(s)):(e(`Starting a new MultiUserSession, ID: ${s}`),u=new h(s))):(e("Invalid session ID; it must consist of 'alphanumeric-esque' characters"),_())}else if(a){const t=decodeURIComponent(a[2]);if(0===get_uris(t).length)return void show_error_message("Invalid URL to load (after #load: in the address bar). It must include a protocol (https:// or http://)");e("Switching to new session from #load: URL (to #local: URL with session ID)"),_(),change_url_param("local",m()),load_image_from_uri(t).then((e=>{open_from_image_info(e,null,null,!0,!0)}),show_resource_load_error_message)}else{e("No session ID in hash");const t=location.hash;_(),change_url_param("local",m(),{replace_history_state:!0}),e("After replaceState:",location.hash),t===location.hash?show_error_message("Autosave is disabled. Failed to update URL to start session."):g()}};$G.on("hashchange popstate change-url-params",(t=>{e(t.type,location.hash),g()})),e("Initializing with location hash:",location.hash),g(),window.new_local_session=()=>{_(),e("Changing URL to start new session..."),change_url_param("local",m())}})();