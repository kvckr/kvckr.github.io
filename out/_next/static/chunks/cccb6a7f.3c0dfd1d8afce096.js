(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9986],{6607:function(e){var n;self,n=function(){return(()=>{"use strict";var e={"./base.js":(e,n,a)=>{a.r(n),a.d(n,{default:()=>r});var t={};t["_Aderrasi - Wanderer in Curved Space - mash0000 - faclempt kibitzing meshuggana schmaltz (Geiss color mix)"]=a("./presets/converted/_Aderrasi - Wanderer in Curved Space - mash0000 - faclempt kibitzing meshuggana schmaltz (Geiss color mix).json"),t["_Geiss - Artifact 01"]=a("./presets/converted/_Geiss - Artifact 01.json"),t["_Geiss - Desert Rose 2"]=a("./presets/converted/_Geiss - Desert Rose 2.json"),t["_Geiss - untitled"]=a("./presets/converted/_Geiss - untitled.json"),t._Mig_049=a("./presets/converted/_Mig_049.json"),t._Mig_085=a("./presets/converted/_Mig_085.json"),t["_Rovastar + Geiss - Hurricane Nightmare (Posterize Mix)"]=a("./presets/converted/_Rovastar + Geiss - Hurricane Nightmare (Posterize Mix).json"),t["$$$ Royal - Mashup (197)"]=a("./presets/converted/$$$ Royal - Mashup (197).json"),t["$$$ Royal - Mashup (220)"]=a("./presets/converted/$$$ Royal - Mashup (220).json"),t["$$$ Royal - Mashup (431)"]=a("./presets/converted/$$$ Royal - Mashup (431).json"),t["AdamFx 2 Geiss, Zylot and Flexi - Reaction Diffusion 3 (Overload Mix 2) EATIT4 hypno"]=a("./presets/converted/AdamFx 2 Geiss, Zylot and Flexi - Reaction Diffusion 3 (Overload Mix 2) EATIT4 hypno.json"),t["Aderrasi - Potion of Spirits"]=a("./presets/converted/Aderrasi - Potion of Spirits.json"),t["Aderrasi - Storm of the Eye (Thunder) - mash0000 - quasi pseudo meta concentrics"]=a("./presets/converted/Aderrasi - Storm of the Eye (Thunder) - mash0000 - quasi pseudo meta concentrics.json"),t["Aderrasi + Geiss - Airhandler (Kali Mix) - Canvas Mix"]=a("./presets/converted/Aderrasi + Geiss - Airhandler (Kali Mix) - Canvas Mix.json"),t["An AdamFX n Martin Infusion 2 flexi - Why The Sky Looks Diffrent Today - AdamFx n Martin Infusion - Tack Tile Disfunction B"]=a("./presets/converted/An AdamFX n Martin Infusion 2 flexi - Why The Sky Looks Diffrent Today - AdamFx n Martin Infusion - Tack Tile Disfunction B.json"),t["Cope - The Neverending Explosion of Red Liquid Fire"]=a("./presets/converted/Cope - The Neverending Explosion of Red Liquid Fire.json"),t["cope + flexi - colorful marble (ghost mix)"]=a("./presets/converted/cope + flexi - colorful marble (ghost mix).json"),t["cope + martin - mother-of-pearl"]=a("./presets/converted/cope + martin - mother-of-pearl.json"),t["Eo.S. - glowsticks v2 05 and proton lights (+Krash′s beat code) _Phat_remix02b"]=a("./presets/converted/Eo.S. - glowsticks v2 05 and proton lights (+Krash′s beat code) _Phat_remix02b.json"),t["Eo.S. + Zylot - skylight (Stained Glass Majesty mix)"]=a("./presets/converted/Eo.S. + Zylot - skylight (Stained Glass Majesty mix).json"),t["fiShbRaiN + Flexi - witchcraft 2.0"]=a("./presets/converted/fiShbRaiN + Flexi - witchcraft 2.0.json"),t["Flexi - alien fish pond"]=a("./presets/converted/Flexi - alien fish pond.json"),t["Flexi - area 51"]=a("./presets/converted/Flexi - area 51.json"),t["flexi - bouncing balls [double mindblob neon mix]"]=a("./presets/converted/flexi - bouncing balls [double mindblob neon mix].json"),t["Flexi - infused with the spiral"]=a("./presets/converted/Flexi - infused with the spiral.json"),t["Flexi - mindblob [shiny mix]"]=a("./presets/converted/Flexi - mindblob [shiny mix].json"),t["Flexi - mindblob mix"]=a("./presets/converted/Flexi - mindblob mix.json"),t["flexi - mom, why the sky looks different today"]=a("./presets/converted/flexi - mom, why the sky looks different today.json"),t["flexi - patternton, district of media, capitol of the united abstractions of fractopia"]=a("./presets/converted/flexi - patternton, district of media, capitol of the united abstractions of fractopia.json"),t["Flexi - predator-prey-spirals"]=a("./presets/converted/Flexi - predator-prey-spirals.json"),t["Flexi - smashing fractals [acid etching mix]"]=a("./presets/converted/Flexi - smashing fractals [acid etching mix].json"),t["flexi - swing out on the spiral"]=a("./presets/converted/flexi - swing out on the spiral.json"),t["Flexi - truly soft piece of software - this is generic texturing (Jelly) "]=a("./presets/converted/Flexi - truly soft piece of software - this is generic texturing (Jelly) .json"),t["flexi - what is the matrix"]=a("./presets/converted/flexi - what is the matrix.json"),t["flexi + amandio c - organic [random mashup]"]=a("./presets/converted/flexi + amandio c - organic [random mashup].json"),t["flexi + amandio c - organic12-3d-2.milk"]=a("./presets/converted/flexi + amandio c - organic12-3d-2.json"),t["Flexi + amandio c - piercing 05 - Kopie (2) - Kopie"]=a("./presets/converted/Flexi + amandio c - piercing 05 - Kopie (2) - Kopie.json"),t["flexi + fishbrain - neon mindblob grafitti"]=a("./presets/converted/flexi + fishbrain - neon mindblob grafitti.json"),t["flexi + geiss - pogo cubes vs. tokamak vs. game of life [stahls jelly 4.5 finish]"]=a("./presets/converted/flexi + geiss - pogo cubes vs. tokamak vs. game of life [stahls jelly 4.5 finish].json"),t["Flexi + Martin - astral projection"]=a("./presets/converted/Flexi + Martin - astral projection.json"),t["Flexi + Martin - cascading decay swing"]=a("./presets/converted/Flexi + Martin - cascading decay swing.json"),t["Flexi + stahlregen - jelly showoff parade"]=a("./presets/converted/Flexi + stahlregen - jelly showoff parade.json"),t["Flexi, fishbrain, Geiss + Martin - tokamak witchery"]=a("./presets/converted/Flexi, fishbrain, Geiss + Martin - tokamak witchery.json"),t["Flexi, martin + geiss - dedicated to the sherwin maxawow"]=a("./presets/converted/Flexi, martin + geiss - dedicated to the sherwin maxawow.json"),t["Fumbling_Foo + En D & Martin - Mandelverse"]=a("./presets/converted/Fumbling_Foo + En D & Martin - Mandelverse.json"),t["Geiss - Cauldron - painterly 2 (saturation remix)"]=a("./presets/converted/Geiss - Cauldron - painterly 2 (saturation remix).json"),t["Geiss - Reaction Diffusion 2"]=a("./presets/converted/Geiss - Reaction Diffusion 2.json"),t["Geiss - Spiral Artifact"]=a("./presets/converted/Geiss - Spiral Artifact.json"),t["Geiss - Thumb Drum"]=a("./presets/converted/Geiss - Thumb Drum.json"),t["Geiss + Flexi + Martin - disconnected"]=a("./presets/converted/Geiss + Flexi + Martin - disconnected.json"),t["Geiss, Flexi + Stahlregen - Thumbdrum Tokamak [crossfiring aftermath jelly mashup]"]=a("./presets/converted/Geiss, Flexi + Stahlregen - Thumbdrum Tokamak [crossfiring aftermath jelly mashup].json"),t["Goody - The Wild Vort"]=a("./presets/converted/Goody - The Wild Vort.json"),t["gunthry is out back bloodying up the pine trees - adm atomising (v) the disintigrate (n)"]=a("./presets/converted/gunthry is out back bloodying up the pine trees - adm atomising (v) the disintigrate (n).json"),t["Halfbreak - Funny Madness"]=a("./presets/converted/Halfbreak - Funny Madness.json"),t["Halfbreak - Light of Breakers"]=a("./presets/converted/Halfbreak - Light of Breakers.json"),t["Hexcollie, Pieturp, Orb, Flexi, Geiss n Demon Lord - Premeditative Urination Clause"]=a("./presets/converted/Hexcollie, Pieturp, Orb, Flexi, Geiss n Demon Lord - Premeditative Urination Clause.json"),t["high-altitude basket unraveling - singh grooves nitrogen argon nz+"]=a("./presets/converted/high-altitude basket unraveling - singh grooves nitrogen argon nz+.json"),t["LuxXx - Play v3 (the war within all of us)"]=a("./presets/converted/LuxXx - Play v3 (the war within all of us).json"),t["Martin - acid wiring"]=a("./presets/converted/Martin - acid wiring.json"),t["martin - angel flight"]=a("./presets/converted/martin - angel flight.json"),t["martin - another kind of groove"]=a("./presets/converted/martin - another kind of groove.json"),t["martin - bombyx mori"]=a("./presets/converted/martin - bombyx mori.json"),t["martin - castle in the air"]=a("./presets/converted/martin - castle in the air.json"),t["martin - chain breaker"]=a("./presets/converted/martin - chain breaker.json"),t["Martin - charisma"]=a("./presets/converted/Martin - charisma.json"),t["martin - disco mix 4"]=a("./presets/converted/martin - disco mix 4.json"),t["martin - extreme heat"]=a("./presets/converted/martin - extreme heat.json"),t["martin - frosty caves 2"]=a("./presets/converted/martin - frosty caves 2.json"),t["martin - fruit machine"]=a("./presets/converted/martin - fruit machine.json"),t["martin - glass corridor"]=a("./presets/converted/martin - glass corridor.json"),t["Martin - liquid arrows"]=a("./presets/converted/Martin - liquid arrows.json"),t["martin - mandelbox explorer - high speed demo version"]=a("./presets/converted/martin - mandelbox explorer - high speed demo version.json"),t["martin - mucus cervix"]=a("./presets/converted/martin - mucus cervix.json"),t["martin - reflections on black tiles"]=a("./presets/converted/martin - reflections on black tiles.json"),t["martin - stormy sea (2010 update)"]=a("./presets/converted/martin - stormy sea (2010 update).json"),t["martin - The Bridge of Khazad-Dum"]=a("./presets/converted/martin - The Bridge of Khazad-Dum.json"),t["martin - witchcraft reloaded"]=a("./presets/converted/martin - witchcraft reloaded.json"),t["martin [shadow harlequins shape code] - fata morgana"]=a("./presets/converted/martin [shadow harlequins shape code] - fata morgana.json"),t["martin + flexi - diamond cutter [prismaticvortex.com] - camille - i wish i wish i wish i was constrained"]=a("./presets/converted/martin + flexi - diamond cutter [prismaticvortex.com] - camille - i wish i wish i wish i was constrained.json"),t["martin, flexi, fishbrain + sto - enterstate [random mashup]"]=a("./presets/converted/martin, flexi, fishbrain + sto - enterstate [random mashup].json"),t["Milk Artist At our Best - FED - SlowFast Ft AdamFX n Martin - HD CosmoFX"]=a("./presets/converted/Milk Artist At our Best - FED - SlowFast Ft AdamFX n Martin - HD CosmoFX.json"),t["MilkDrop2077.R002"]=a("./presets/converted/MilkDrop2077.R002.json"),t["MilkDrop2077.R033"]=a("./presets/converted/MilkDrop2077.R033.json"),t["ORB - Waaa"]=a("./presets/converted/ORB - Waaa.json"),t["Phat+fiShbRaiN+Eo.S_Mandala_Chasers_remix"]=a("./presets/converted/Phat+fiShbRaiN+Eo.S_Mandala_Chasers_remix.json"),t["Rovastar - Oozing Resistance"]=a("./presets/converted/Rovastar - Oozing Resistance.json"),t["Rovastar + Loadus + Geiss - FractalDrop (Triple Mix)"]=a("./presets/converted/Rovastar + Loadus + Geiss - FractalDrop (Triple Mix).json"),t["sawtooth grin roam"]=a("./presets/converted/sawtooth grin roam.json"),t["ShadowHarlequin - LovelyShinySquares [ liquid starburst rmx ] - unchained + rovaster - luckless - martin - starfield sector"]=a("./presets/converted/ShadowHarlequin - LovelyShinySquares [ liquid starburst rmx ] - unchained + rovaster - luckless - martin - starfield sector.json"),t["shifter - dark tides bdrv mix 2"]=a("./presets/converted/shifter - dark tides bdrv mix 2.json"),t["shifter - escape (sigur ros)"]=a("./presets/converted/shifter - escape (sigur ros).json"),t["shifter - liquid circuitry - conjugoth"]=a("./presets/converted/shifter - liquid circuitry - conjugoth.json"),t["suksma - ed geining hateops - squeakers"]=a("./presets/converted/suksma - ed geining hateops - squeakers.json"),t["suksma - heretical crosscut playpen"]=a("./presets/converted/suksma - heretical crosscut playpen.json"),t["suksma - Hexcollie - Julian Carnival - shimmy dumb grid"]=a("./presets/converted/suksma - Hexcollie - Julian Carnival - shimmy dumb grid.json"),t["suksma - Rovastar - Sunflower Passion (Enlightment Mix)_Phat_edit + flexi und martin shaders - circumflex in character classes in regular expression"]=a("./presets/converted/suksma - Rovastar - Sunflower Passion (Enlightment Mix)_Phat_edit + flexi und martin shaders - circumflex in character classes in regular expression.json"),t["suksma - uninitialized variabowl (hydroponic chronic)"]=a("./presets/converted/suksma - uninitialized variabowl (hydroponic chronic).json"),t["suksma - vector exp 1 - couldn′t not"]=a("./presets/converted/suksma - vector exp 1 - couldn′t not.json"),t["TonyMilkdrop - Leonardo Da Vinci's Balloon [Flexi - merry-go-round + techstyle]"]=a("./presets/converted/TonyMilkdrop - Leonardo Da Vinci's Balloon [Flexi - merry-go-round + techstyle].json"),t["TonyMilkdrop - Magellan's Nebula [Flexi - you enter first + multiverse]"]=a("./presets/converted/TonyMilkdrop - Magellan's Nebula [Flexi - you enter first + multiverse].json"),t["Unchained - Rewop"]=a("./presets/converted/Unchained - Rewop.json"),t["Unchained - Unified Drag 2"]=a("./presets/converted/Unchained - Unified Drag 2.json"),t["yin - 191 - Temporal singularities"]=a("./presets/converted/yin - 191 - Temporal singularities.json"),t["yin - 393 - Artificial Inspiration (music driven - outward)"]=a("./presets/converted/yin - 393 - Artificial Inspiration (music driven - outward).json"),t["Zylot - Paint Spill (Music Reactive Paint Mix)"]=a("./presets/converted/Zylot - Paint Spill (Music Reactive Paint Mix).json"),t["Zylot - Star Ornament"]=a("./presets/converted/Zylot - Star Ornament.json"),t["Zylot - True Visionary (Final Mix)"]=a("./presets/converted/Zylot - True Visionary (Final Mix).json");const r=t},"./presets/converted/$$$ Royal - Mashup (197).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wrap":0,"darken_center":1,"solarize":1,"wave_a":0.001,"zoom":0.97,"rot":-6.27999,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_r":0.8,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"x":0.75,"y":0.75,"rad":0.7417,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"a2":0.1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n\\ntex_capture = above(q3,1);\\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"textured":1,"x":0.25,"y":0.75,"rad":4.44708,"tex_zoom":0.22746,"r":0,"a":0.1,"g2":0,"a2":0.2,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = above(q3,1);\\ntex_zoom = 0.6;"},{"baseVals":{"textured":1,"rad":6.621,"tex_zoom":0.22746,"g":1,"b":1,"a":0.2,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = above(q3,2);\\ntex_zoom = 0.6;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v*10));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.12)*cos(time*0.1 + xs);\\n\\nx = x*0.8 + 0.1;\\ny = y*0.8 + 0.1;\\n\\nr = 0.5 + 0.5*sin(time*1.22) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.307 + 2*y);\\nb = 0.4 + 0.4*sin(time*1.959 + x*2);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v*10));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.14)*cos(time*0.1 + xs);\\n\\nx = x*0.8 + 0.1;\\ny = y*0.8 + 0.1;\\nx = x*0.6 + 0.2;\\ny = y*0.6 + 0.2;\\n\\nr = 0.5 + 0.5*sin(time*1.322) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.5407 + 2*y);\\nb = 0.4 + 0.4*sin(time*1.759 + x*2);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v*10));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.14)*cos(time*0.1 + xs);\\n\\nx = x*0.8 + 0.1;\\ny = y*0.8 + 0.1;\\nx = x*0.25 + 0.375;\\ny = y*0.25 + 0.375;\\n\\nr = 0.5 + 0.5*sin(time*1.622) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.2407 + 2*y);\\nb = 0.4 + 0.4*sin(time*1.359 + x*2);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\\nys = ys + (equal(0,q1))*sin(v*1)*speed;\\n\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = -x*0.6 + 1;\\ny = y*0.9 + 0.05 + bass*0.08;\\ny = y*0.8;\\n\\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.478);\\nb = 0.4 + 0.4*sin(time*1.125);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass*0.03;\\nq1 = basstime*4;\\n\\n//start in most active range\\nbasstime = if(below(basstime,1000),1000,basstime);\\n//basstime = if(above(basstime,495),450,basstime);\\n\\nbasstime = basstime + bass_att*0.03;\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\nmonitor = abs(cos(time))*3.14;\\n\\n\\nmv_a = above(diff,10);","pixel_eqs_eel":"zoom = 1 + 0.05*q3*rad;\\n\\ndecay_r = 0.2*rad*sin(q2*0.35) + 0.85 + 0.1*sin(q2);\\ndecay_g = 0.2*rad*sin(q2*0.5) + 0.85 + 0.1*sin(0.7*q2);\\ndecay_b = 0.2*rad*sin(q2*0.4) + 0.85 + 0.1*sin(0.8*q2);\\n\\nrot = 0;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (vec2(1.0, 0.0) * texsize.z);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(0.0, 1.0) * texsize.z);\\n  ret_1 = (((\\n    (texture (sampler_main, (uv + tmpvar_2)).xyz + texture (sampler_main, (uv + tmpvar_2)).xyz)\\n   * 0.5) + (\\n    (texture (sampler_main, (uv + tmpvar_3)).xyz + texture (sampler_main, (uv + tmpvar_3)).xyz)\\n   * 0.5)) - texture (sampler_main, ((\\n    (uv - 0.5)\\n   * 0.9) + 0.5)).xyz);\\n  ret_1 = (ret_1 - 0.4);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((0.5 - uv) + 0.5);\\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, tmpvar_2).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\\n  ret_1 = (((\\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n   * 2.0) + (\\n    ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3)\\n   * 2.0)) + ret_1);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},"./presets/converted/$$$ Royal - Mashup (220).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.07,"decay":0.95,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"darken":1,"invert":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(mid_att,1.8),mid_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*0.672;\\naxang = 0;\\nyang = time*-1.351;\\nayang = 0;\\nzang = time*-0.401;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\nr = 1 + sin(sp);\\nb = 0.5 + 0.5*sin(sample*1.57);\\ng = 0.5 + 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(bass_att,1.8),bass_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*-0.321;\\naxang = 0;\\nyang = time*1.531;\\nayang = 0;\\nzang = time*-0.101;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\ng = 1 + sin(sp);\\nr = 0.5 + 0.5*sin(sample*1.57);\\nb = 0.5 + 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(treb_att,1.8),treb_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*0.221;\\naxang = 0;\\nyang = time*-0.411;\\nayang = 0;\\nzang = time*1.201;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\nb = 1+sin(sp);\\ng = 0.5 + 0.5*sin(sample*1.57);\\nr = 0.5 + 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;","pixel_eqs_eel":"it = 0.3*sin(time*0.2);\\nradm = rad*0.5;\\nrot = 0.02*sin((radm+it)*20);\\nmod = sin(ang*5);\\nmod = mod*mod*mod*mod*mod;\\nzoom = 1 + abs(0.01*mod);\\n\\nzoom *= min(1.05,max(1,max(bass,treb)));","warp":" shader_body { \\n  vec3 xfer_1;\\n  vec3 ret_2;\\n  vec4 tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  tmpvar_3 = texture (sampler_main, (tmpvar_4 + 0.5));\\n  ret_2 = (tmpvar_3.xyz / ((tmpvar_3.x + tmpvar_3.y) + tmpvar_3.z));\\n  ret_2 = texture (sampler_main, ((tmpvar_4 * dot (ret_2, vec3(1.0, 0.975, 0.95))) + 0.5)).xyz;\\n  vec3 tmpvar_5;\\n  tmpvar_5 = clamp (((ret_2 - 0.05) * 99.0), 0.0, 1.0);\\n  xfer_1.x = tmpvar_5.x;\\n  xfer_1.yz = (tmpvar_5.yz * clamp ((\\n    (0.1 - ret_2.xy)\\n   * 99.0), 0.0, 1.0));\\n  ret_2 = (ret_2 + (vec3(-0.014, 0.014, 0.0) * tmpvar_5.xxx));\\n  ret_2 = (ret_2 + (vec3(0.0, -0.08, 0.08) * xfer_1.yyy));\\n  ret_2 = (ret_2 + (vec3(0.0, 0.0, -0.02) * xfer_1.zzz));\\n  ret_2 = (ret_2 + (vec3(5.0, 15.0, 40.0) * (\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }","comp":""}')},"./presets/converted/$$$ Royal - Mashup (431).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.958,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":30.965,"warpscale":2.572,"zoom":1.00901,"warp":0.00054,"wave_r":0,"wave_g":0,"wave_b":0,"mv_x":25.6,"mv_y":9.6,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"x":0.09,"y":0.9,"rad":0.22437,"tex_zoom":1.76002,"r2":1,"g2":0,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":6.19589,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"additive":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.49981,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"thick":1,"additive":1,"scaling":3.91581,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\n//zoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\n//zoom = zoom + max(0,bass_att-1.1)*0.2;\\n//warp = warp + max(0,treb_att-1.1)*1.0;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\nzoom = zoom + q9*0.1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((((\\n      (texture (sampler_blur1, uv).xyz * scale1)\\n     + bias1) * 0.3) + ((\\n      (texture (sampler_blur2, uv).xyz * scale2)\\n     + bias2) * 0.4)) + (((texture (sampler_blur3, uv).xyz * scale3) + bias3) * 0.3))\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * (\\n    (clamp ((treb_att - 1.0), 0.0, 1.0) * 0.4)\\n   + 0.3)));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.y = 0.0;\\n  tmpvar_1.x = texsize.z;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = 0.0;\\n  tmpvar_2.y = texsize.w;\\n  vec2 uv_3;\\n  float inten_4;\\n  float dist_5;\\n  vec2 uv1_6;\\n  vec3 ret_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_9;\\n  tmpvar_9 = (time / 18.0);\\n  dist_5 = (1.0 - fract((0.25 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.51, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (inten_4 * ((2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29))\\n  ) - (2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29))\\n  )));\\n  xlat_mutabledz.y = (inten_4 * ((2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29))\\n  ) - (2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29))\\n  )));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  dist_5 = (1.0 - fract((0.5 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.49, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  dist_5 = (1.0 - fract((0.75 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.51, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  dist_5 = (1.0 - fract((1.0 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.49, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  xlat_mutabledz = (xlat_mutabledz * (0.5 + rand_preset.z));\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (2.0 * (rand_preset.xy - 0.5));\\n  uv1_6 = (4.0 * tmpvar_8);\\n  vec2 tmpvar_11;\\n  tmpvar_11 = sin(((uv1_6 + xlat_mutabledz) + tmpvar_10));\\n  vec2 tmpvar_12;\\n  tmpvar_12 = sin(((uv1_6 + \\n    (xlat_mutabledz * 1.4)\\n  ) + tmpvar_10));\\n  vec2 tmpvar_13;\\n  tmpvar_13 = sin(((uv1_6 + \\n    (xlat_mutabledz * 1.8)\\n  ) + tmpvar_10));\\n  vec3 tmpvar_14;\\n  tmpvar_14.x = inversesqrt(dot (tmpvar_11, tmpvar_11));\\n  tmpvar_14.y = inversesqrt(dot (tmpvar_12, tmpvar_12));\\n  tmpvar_14.z = inversesqrt(dot (tmpvar_13, tmpvar_13));\\n  ret_7 = (((\\n    (tmpvar_14 * ((vec3(0.01, 0.01, 0.01) * (1.0 + \\n      (rand_preset.xyz / 2.0)\\n    )) * (0.5 + rand_preset.y)))\\n   * \\n    ((((rand_preset.x - 0.5) * 4.0) * xlat_mutableret1) + (8.0 * (1.0 + rand_preset)).xyz)\\n  ) - (xlat_mutableret1.x * 0.5)) + ((xlat_mutableret1.y + xlat_mutableret1.z) / 3.0));\\n  ret_7 = (ret_7 - ((slow_roam_sin.wzy * roam_cos.zxy) * 0.4));\\n  ret_7 = (ret_7 * (1.0 + ret_7));\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_7;\\n  ret = tmpvar_15.xyz;\\n }"}')},"./presets/converted/AdamFx 2 Geiss, Zylot and Flexi - Reaction Diffusion 3 (Overload Mix 2) EATIT4 hypno.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.9,"echo_zoom":1.169,"wave_a":0.001,"warpanimspeed":30.965,"warpscale":2.572,"zoomexp":1.94773,"zoom":1.00901,"warp":0.00054,"wave_r":0,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"x":0.75,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n\\ntex_capture = above(q3,2);\\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0444,"tex_zoom":0.22746,"r":0,"g":0.3,"g2":0,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.22167,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"border_r = 0.5 + 0.5*sin(q1*10);"},{"baseVals":{"sides":100,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = above(q3,2);\\na2 = above(q3,2)*0.8;\\n\\nxx = if(above(q3,6),xx,int(rand(100))*0.01);\\nyy = if(above(q3,6),yy,int(rand(100))*0.01);\\nradi = if(above(q3,5),radi,int(rand(100))*0.01);\\n\\nrad = radi;\\n\\nx = xx;\\ny = yy;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.22) + 0.1;\\ng = 0.4 + 0.4*sin(q1*1.307);\\nb = 0.4 + 0.4*sin(q1*1.959);\\n\\n\\nr2 = 0.5 + 0.5*sin(q1*1.622) + 0.1;\\ng2 = 0.4 + 0.4*sin(q1*1.507);\\nb2 = 0.4 + 0.4*sin(q1*1.6559);"}],"waves":[{"baseVals":{"enabled":1,"a":0.5},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\\nzs = if(below(zs,1),9,zs);\\n\\nzs = if(above(zs, 1100),1, zs);\\n\\nspeed = bass*0.002;\\n\\n//sum\\nzs = zs + tan(q1*0.015)*speed;\\n\\nzd = zd + 2;\\n\\n\\n\\n//project\\nx = 0.5 + 0.1*cos(q1*zs);\\ny = 0.5 + 0.1*sin(q1*zs);\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"rot = -0.001;\\n//rot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\n\\nzoom =1.01;// + bass*0.05 - treb*0.015;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  ret_2 = texture (sampler_main, uv_1).xyz;\\n  ret_2.xz = (ret_2.xz + ((\\n    (ret_2.xz - mix (((texture (sampler_blur2, uv_1).xyz * scale2) + bias2), ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), uv_orig.xxx).xz)\\n   * 0.3) - (0.00666 * \\n    (((bass + treb) + mid) - 0.5)\\n  )));\\n  ret_2.xz = (ret_2.xz * 0.95);\\n  ret_2.xz = (ret_2.xz + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  ret_2.x = mix (ret_2.x, dot (ret_2.xxx, vec3(0.32, 0.49, 0.29)), 0.2);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 12.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur2, \\n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale2) + bias2));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.z;\\n  tmpvar_8.y = tmpvar_5.z;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (((uv_orig + \\n    (tmpvar_6 * 0.005)\\n  ) + (tmpvar_7 * 0.005)) - (tmpvar_8 * 0.005));\\n  ret_2.y = (texture (sampler_main, tmpvar_9).y - 0.04);\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - (((texture (sampler_blur1, tmpvar_9).xyz * scale1) + bias1).y * 1.5))\\n   + 0.4) * 0.1));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_2;\\n  ret = tmpvar_10.xyz;\\n }","comp":" shader_body { \\n  float ang2_1;\\n  vec2 uv2_2;\\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\\n  ang2_1 = (fract((ang2_1 * 9.0)) / 9.0);\\n  ang2_1 = (abs((ang2_1 - 0.05555556)) * 6.283185);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = cos(ang2_1);\\n  tmpvar_3.y = sin(ang2_1);\\n  uv2_2 = (0.5 + ((\\n    (0.4 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\\n   * tmpvar_3) * texsize.zw));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (((texture (sampler_main, uv2_2).y * vec3(0.6, 0.2, 1.5)) + (texture (sampler_fw_main, uv2_2).x * vec3(1.0, 0.66, 0.0))) - (texture (sampler_main, uv2_2).z * vec3(-0.6, 1.0, 2.0)));\\n  ret = tmpvar_4.xyz;\\n }"}')},"./presets/converted/Aderrasi + Geiss - Airhandler (Kali Mix) - Canvas Mix.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":2.001,"decay":0.95,"echo_zoom":0.9996,"wave_mode":1,"wrap":0,"wave_a":3.072644,"wave_scale":1.285746,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999513,"warp":0.0101,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);","pixel_eqs_eel":"zoom = zoom + 0.05*(sin(6*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\\nrot = rot + 0.5*sin(0.5-rad)*cos(0.02*(0.5-rad)+time);\\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\\nzoom = zoom - 0.05*(1-rad)*below(rad,0.5);","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\\n   * 0.03))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.03 + (0.94 * uv));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 0.7);\\n  ret_2 = (texture (sampler_main, (uv_1 + (tmpvar_3 * vec2(3.5, 0.0)))).xyz * 3.0);\\n  ret_2 = (ret_2 + (texture (sampler_main, (uv_1 + \\n    (tmpvar_3 * vec2(0.0, 3.5))\\n  )).xyz * 3.0));\\n  ret_2 = (ret_2 + (texture (sampler_main, (uv_1 + \\n    (tmpvar_3 * vec2(0.0, -3.5))\\n  )).xyz * -2.0));\\n  ret_2 = (ret_2 + (texture (sampler_main, (uv_1 + \\n    (tmpvar_3 * vec2(-3.5, 0.0))\\n  )).xyz * -2.0));\\n  ret_2 = (ret_2 / 2.0);\\n  ret_2 = (ret_2 * (1.0 + (0.15 * \\n    ((texture (sampler_noise_lq, (rand_frame.xy + (\\n      (uv_1 * texsize.xy)\\n     * texsize_noise_lq.zw))).xxx * 2.0) - 1.0)\\n  )));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = pow (ret_2, vec3(0.5, 0.8, 1.0));\\n  ret_2 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},"./presets/converted/Aderrasi - Potion of Spirits.json":e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1.42,"decay":1,"echo_zoom":0.999823,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001185,"wave_scale":0.325446,"wave_smoothing":0.9,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":2.630064,"warpscale":3.209168,"zoomexp":1.000158,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":0.5,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":6.4,"mv_y":4.8,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(1.6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 2;\\n\\nob_r = ob_r+wave_b*above(sin(0.1*time),0);\\nob_b = ob_b+wave_g*above(sin(0.1*time),0);\\nob_g = ob_g+wave_r*above(sin(0.1*time),0);\\nob_r = ob_r+wave_g*below(sin(0.1*time),0);\\nob_b = ob_b+wave_r*below(sin(0.1*time),0);\\nob_g = ob_g+wave_b*below(sin(0.1*time),0);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.05*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.056*sin(6*time)+(1-equal(thresh,2))*dy_r;\\ntg1 = abs(sin(time));\\ntg2 = 22*above(tg1,0.75) + 12*below(tg1,0.25) + 18*above(tg1,0.25)*below(tg1,0.5)+\\n12*above(tg1,0.5)*below(tg1,0.75);\\ntg3 = if(equal(thresh,2),tg2,tg3);\\n\\nsix = sin(x);\\n\\ndx = dx + dx_r*sin(abs(tg3*y))*sin(time);\\ndy = dy + dy_r*sin(abs(tg3*x))*cos(time);\\ndx = dx + dx_r*pow(rad,y*2)*sin(time);\\ndy = dy + dy_r*pow(rad,x*2)*sin(time);\\nzoom = zoom - 0.0825*pow(rad,x*6)*cos(ang*6);\\nrot = rot - 0.0525*(0.75*sin(1.25*time)*pow(rad,x)*sin(1.45*time))*sin(time);","warp":"","comp":""}')},"./presets/converted/Aderrasi - Storm of the Eye (Thunder) - mash0000 - quasi pseudo meta concentrics.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.97,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_brighten":0,"wrap":0,"wave_a":100,"wave_scale":0.797,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\n\\nob_r = ob_r + 0.8*sin(1.1*time) + 1.1*cos(2*time);\\nob_b = ob_b + 0.9*sin(1.2*time) + cos(1.5*time);\\nob_g = ob_g + 0.7*sin(time) + sin(0.4*time);\\nwave_r = abs(ob_r+0.2);\\nwave_g = abs(ob_g+0.2);\\nwave_b = abs(ob_b+0.2);\\nib_b = ib_b + 0.44*cos(1.5*time) + 0.7*tan(time);\\nib_g = ib_g + 2*sin(time*bass_att);\\nib_r = ib_r + 0.8*sin(1.2*time) + 1.3*cos(1.8*time);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nzoom = zoom + 0.07*treb*(abs(sin(time*rad)))*(0.3-rad);\\ndy = dy + dy_r*below(rad,0.5 - (0.2*time));\\ndx = dx + dx_r*below(rad,0.5 - (0.2*time));\\nrot = rot + (0.7*bass_att*sin(abs(dx_r*(1-rad)*2*time+cos(rad*12))))*0.2;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, ((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.1))).xyz - 0.5)\\n   / 256.0) * 28.0));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.04, 0.04, 0.04));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":""}')},"./presets/converted/An AdamFX n Martin Infusion 2 flexi - Why The Sky Looks Diffrent Today - AdamFx n Martin Infusion - Tack Tile Disfunction B.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.713,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.44,"wave_g":0.4,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"num_inst":175,"rad":0.20065,"ang":0.75398,"tex_ang":3.14159,"tex_zoom":0.99979,"r":0,"g2":0,"border_r":0.01,"border_g":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"//lorenz-attractor calc\\nxx1 = if(equal(instance,0),q11,xx1);\\nyy1 = if(equal(instance,0),q12,yy1);\\nzz1 = if(equal(instance,0),q13,zz1);\\n\\ndx1 = q14*(yy1-xx1);\\ndy1 = xx1*(q15-zz1)-yy1;\\ndz1 = xx1*yy1-q16*zz1;\\ndd = sqrt(dx1*dx1+dy1*dy1+dz1*dz1);\\nxx1 = xx1 + q17*dx1/dd;\\nyy1 = yy1 + q17*dy1/dd;\\nzz1 = zz1 + q17*dz1/dd;\\n\\n\\n// 3D object model coordinates\\nmy_x = xx1*0.1;\\nmy_y = yy1*0.1;\\nmy_z = zz1*0.1 - 3;\\n\\n\\nd = 4.75; // camera distance\\nzoom = .55+0.25*sin(.5*q32);\\n\\n// solid angles\\nw1 = q3;\\nw2 = q4;\\nw3 = q5;\\n\\n// 3D rotation\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nrad = rad/d;\\nang = ang-instance/num_inst*asin(1)*8;"},{"baseVals":{"sides":12,"additive":1,"num_inst":512,"y":0.55,"rad":0.0986,"tex_zoom":0.7874,"r":0.2,"g":0.03,"b":0.55,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":"rnd1 = if(equal(instance,0),t1,rnd1);\\nrnd2 = if(equal(instance,0),t2,rnd2);\\nrnd3 = if(equal(instance,0),t3,rnd3);\\nrnd4 = if(equal(instance,0),t4,rnd4);\\nrnd1 = 4*rnd1*(1-rnd1);\\nrnd2 = 4*rnd2*(1-rnd2);\\nrnd3 = 4*rnd3*(1-rnd3);\\nrnd4 = 4*rnd4*(1-rnd4);\\nt = .6;\\nt =  (rnd1+time*t) - int(rnd1+time*t);\\nt = t + rnd2*0.1;\\nwh = rnd4*asin(1)*4;\\nwv = 0.25 + rnd3*0.1;\\n\\nd = 6; // makes the perspective impact\\nzoom = 1;\\nl = 1;\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = t *(cos(wh)*sin(wv)*l)*2;\\nmy_z = -(-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l*2;\\nmy_y = t*(sin(wh)*sin(wv)*l)*2;\\n\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\np = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(atan2(x3,y3))*p;\\nmy_y = zoom*cos(atan2(x3,y3))*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;"},{"baseVals":{"sides":12,"additive":1,"num_inst":512,"y":0.55,"rad":0.2667,"tex_zoom":0.7874,"r":0,"g":0.1,"b":0.55,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":"rnd1 = if(equal(instance,0),t1,rnd1);\\nrnd2 = if(equal(instance,0),t2,rnd2);\\nrnd3 = if(equal(instance,0),t3,rnd3);\\nrnd4 = if(equal(instance,0),t4,rnd4);\\nrnd1 = 4*rnd1*(1-rnd1);\\nrnd2 = 4*rnd2*(1-rnd2);\\nrnd3 = 4*rnd3*(1-rnd3);\\nrnd4 = 4*rnd4*(1-rnd4);\\nt = .6;\\nt =  (rnd1+time*t) - int(rnd1+time*t);\\nt = t + rnd2*0.1;\\nwh = rnd4*asin(1)*4;\\nwv = 0.25 + rnd3*0.1;\\n\\nd = 6; // makes the perspective impact\\nzoom = 1;\\nl = 1;\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = t *(cos(wh)*sin(wv)*l)*4;\\nmy_z = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l*4;\\nmy_y = t*(sin(wh)*sin(wv)*l)*4;\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\np = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(atan2(x3,y3))*p;\\nmy_y = zoom*cos(atan2(x3,y3))*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;"},{"baseVals":{"sides":12,"additive":1,"num_inst":512,"y":0.55,"rad":0.05012,"tex_zoom":0.7874,"r":0,"g":0.02,"b":0.11,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":"rnd1 = if(equal(instance,0),t1,rnd1);\\nrnd2 = if(equal(instance,0),t2,rnd2);\\nrnd3 = if(equal(instance,0),t3,rnd3);\\nrnd4 = if(equal(instance,0),t4,rnd4);\\nrnd1 = 4*rnd1*(1-rnd1);\\nrnd2 = 4*rnd2*(1-rnd2);\\nrnd3 = 4*rnd3*(1-rnd3);\\nrnd4 = 4*rnd4*(1-rnd4);\\nt = .6;\\nt =  (rnd1+time*t) - int(rnd1+time*t);\\nt = t + rnd2*0.1;\\nwh = rnd4*asin(1)*4;\\nwv = 0.25 + rnd3*0.1;\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 1;\\nl = 1;\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = t *(cos(wh)*sin(wv)*l);\\nmy_y = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l;\\nmy_z = t*(sin(wh)*sin(wv)*l);\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\np = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(atan2(x3,y3))*p;\\nmy_y = zoom*cos(atan2(x3,y3))*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;"}],"waves":[{"baseVals":{"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"a":0.21,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"","point_eqs_eel":"// lorenz-attractor calc\\nxx1 = if(equal(sample,0),q11,xx1);\\nyy1 = if(equal(sample,0),q12,yy1);\\nzz1 = if(equal(sample,0),q13,zz1);\\ndx1 = q14*(yy1-xx1);\\ndy1 = xx1*(q15-zz1)-yy1;\\ndz1 = xx1*yy1-q16*zz1;\\nxx1 = xx1 + q17*dx1;\\nyy1 = yy1 + q17*dy1;\\nzz1 = zz1 + q17*dz1;\\n\\n// 3D model coordinates\\nmy_x = xx1*0.1;\\nmy_y = yy1*0.1;\\nmy_z = zz1*0.1 - 3;\\n\\n\\nd = 5; // distance of the camera (on the z-axis) to the origin\\nzoom = 0.4;\\n\\n// solid angles\\nw1 = q2;\\nw2 = q3;\\nw3 = q4;\\n\\n// rotations\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xx1 = if(equal(sample,0),q11,xx1);\\nyy1 = if(equal(sample,0),q12,yy1);\\nzz1 = if(equal(sample,0),q13,zz1);\\n\\ndx1 = q14*(yy1-xx1);\\ndy1 = xx1*(q15-zz1)-yy1;\\ndz1 = xx1*yy1-q16*zz1;\\nxx1 = xx1 + q17*dx1;\\nyy1 = yy1 + q17*dy1;\\nzz1 = zz1 + q17*dz1;\\n\\nmy_x = xx1*0.02;\\nmy_y = yy1*0.02;\\nmy_z = zz1*0.02;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"step = 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\ndec_fast = pow (0.6, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, 0+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nvol = bass_att + mid_att + treb_att;\\nvol_ = dec_med * vol_ + (1-dec_med)* vol;\\nvol__ = dec_med * vol__ + (1-dec_med)* vol_;\\nq27 = index + 1;\\nq28 = index2 + 1;\\nq23 = q22 -0.1/q22;\\nq23 = max(q23,1);\\n\\nk1 =  is_beat*equal(index%8,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_fast * p2+ (1-dec_fast)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrig = q24 * bnot(index%2);\\nvx = vx*bnot(trig) + trig* (int(rand(100))/100-.5);\\nvy = vy*bnot(trig) + trig* (int(rand(100))/100-.5);\\nq10 = 0.2+vy*vy*2;\\nq11 = sin(time/9)/2+.4;\\nmovz = movz-1/fps*(.3+vx);\\nq9 = movz;\\n\\nq12 = min(q22,6)*2;\\nq13 = min(2,1+abs(8*vy*vx));\\n//dir_ = dec_med*dir_ + (1-dec_med)*(index2%2-.5);\\ndir_ =  bass-1;\\n\\ntrig = bnot(index%4) * q24;\\ndir = bnot(trig)*dir + trig*(int(rand(10))-5);\\n\\ntrel = trel + .1/fps*dir;\\ntrel_ = dec_med*trel_ + (1-dec_med)*trel;\\n\\nq5 = cos(trel_);\\nq6 = sin(trel_+0*q27*(q28%2));\\nq7 = -q6;\\nq8 = q5;\\n\\nzoom = 1.02;\\nrot = .5*sin(bnot(q28%2)*q28) ;\\nrot = .0*sin(time/3);\\ndx = .0;\\n\\nmonitor = q11;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, (uv - (\\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \\n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((mix (tmpvar_2, \\n    (1.0 - tmpvar_2.zyx)\\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\\n    (1.0 - rad)\\n  , 18.0)));\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec3 xlat_mutableneu;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablerss;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 ofs_2;\\n  vec3 ret1_3;\\n  uv_1 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q5;\\n  tmpvar_4.y = q6;\\n  uv_1 = (uv_1 + (tmpvar_4 / 4.0));\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)] = _qb.xy;\\n  tmpvar_5[1u] = _qb.zw;\\n  uv_1 = (uv_1 * tmpvar_5);\\n  float tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (min (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0) / max (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0));\\n  float tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\\n  tmpvar_8 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\\n  tmpvar_8 = (tmpvar_8 + (float(\\n    (abs((uv_1.y / uv_1.x)) > 1.0)\\n  ) * (\\n    (tmpvar_8 * -2.0)\\n   + 1.570796)));\\n  tmpvar_6 = (tmpvar_8 * sign((uv_1.y / uv_1.x)));\\n  if ((abs(uv_1.x) > (1e-08 * abs(uv_1.y)))) {\\n    if ((uv_1.x < 0.0)) {\\n      if ((uv_1.y >= 0.0)) {\\n        tmpvar_6 += 3.141593;\\n      } else {\\n        tmpvar_6 = (tmpvar_6 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_6 = (sign(uv_1.y) * 1.570796);\\n  };\\n  xlat_mutablers0.x = (((tmpvar_6 / 3.1416) * 6.0) * q28);\\n  xlat_mutablers0.y = inversesqrt(dot (uv_1, uv_1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (xlat_mutablers0.x + (q9 * 8.0));\\n  tmpvar_9.y = (xlat_mutablers0.y + ((q9 * q28) * 4.0));\\n  xlat_mutablerss = (tmpvar_9 / 12.0);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q5;\\n  tmpvar_10.y = q6;\\n  ofs_2 = (0.1 * tmpvar_10.yx);\\n  float tmpvar_11;\\n  float tmpvar_12;\\n  tmpvar_12 = -(q9);\\n  tmpvar_11 = fract(tmpvar_12);\\n  mat2 tmpvar_13;\\n  tmpvar_13[uint(0)].x = 1.0;\\n  tmpvar_13[uint(0)].y = -0.0;\\n  tmpvar_13[1u].x = 0.0;\\n  tmpvar_13[1u].y = 1.0;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_11)\\n   * tmpvar_13)) * aspect.yx);\\n  vec2 tmpvar_14;\\n  tmpvar_14 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_14).xyz + ((texture (sampler_blur1, tmpvar_14).xyz * scale1) + bias1));\\n  ret1_3 = max (vec3(0.0, 0.0, 0.0), ((xlat_mutableneu * \\n    (1.0 - (tmpvar_11 * tmpvar_11))\\n  ) * 2.0));\\n  float tmpvar_15;\\n  tmpvar_15 = fract((tmpvar_12 + 0.3333333));\\n  mat2 tmpvar_16;\\n  tmpvar_16[uint(0)].x = -0.4990803;\\n  tmpvar_16[uint(0)].y = -0.8665558;\\n  tmpvar_16[1u].x = 0.8665558;\\n  tmpvar_16[1u].y = -0.4990803;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_15)\\n   * tmpvar_16)) * aspect.yx);\\n  vec2 tmpvar_17;\\n  tmpvar_17 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_17).xyz + ((texture (sampler_blur1, tmpvar_17).xyz * scale1) + bias1));\\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \\n    (1.0 - (tmpvar_15 * tmpvar_15))\\n  ) * 2.0));\\n  float tmpvar_18;\\n  tmpvar_18 = fract((tmpvar_12 + 0.6666667));\\n  mat2 tmpvar_19;\\n  tmpvar_19[uint(0)].x = -0.5018377;\\n  tmpvar_19[uint(0)].y = 0.8649619;\\n  tmpvar_19[1u].x = -0.8649619;\\n  tmpvar_19[1u].y = -0.5018377;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_18)\\n   * tmpvar_19)) * aspect.yx);\\n  vec2 tmpvar_20;\\n  tmpvar_20 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_20).xyz + ((texture (sampler_blur1, tmpvar_20).xyz * scale1) + bias1));\\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \\n    (1.0 - (tmpvar_18 * tmpvar_18))\\n  ) * 2.0));\\n  float tmpvar_21;\\n  tmpvar_21 = fract((tmpvar_12 + 1.0));\\n  mat2 tmpvar_22;\\n  tmpvar_22[uint(0)].x = 0.9999949;\\n  tmpvar_22[uint(0)].y = 0.003185092;\\n  tmpvar_22[1u].x = -0.003185092;\\n  tmpvar_22[1u].y = 0.9999949;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_21)\\n   * tmpvar_22)) * aspect.yx);\\n  vec2 tmpvar_23;\\n  tmpvar_23 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_23).xyz + ((texture (sampler_blur1, tmpvar_23).xyz * scale1) + bias1));\\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \\n    (1.0 - (tmpvar_21 * tmpvar_21))\\n  ) * 2.0));\\n  vec2 tmpvar_24;\\n  tmpvar_24.x = (ret1_3.x + ret1_3.z);\\n  tmpvar_24.y = (ret1_3.x - ret1_3.y);\\n  vec4 tmpvar_25;\\n  tmpvar_25.w = 1.0;\\n  tmpvar_25.xyz = ((ret1_3 + (\\n    ((bass_att * 0.004) / sqrt(dot (uv_1, uv_1)))\\n   * roam_sin).xyz) + ((2.0 * \\n    (bass_att * ((texture (sampler_blur1, fract(\\n      (xlat_mutablerss + (tmpvar_24 / 2.0))\\n    )).xyz * scale1) + bias1).zxy)\\n  ) * clamp (\\n    (1.0 - (ret1_3 * 4.0))\\n  , 0.0, 1.0)));\\n  ret = tmpvar_25.xyz;\\n }"}')},"./presets/converted/Cope - The Neverending Explosion of Red Liquid Fire.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.179,"wave_smoothing":0,"wave_mystery":0.3,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.8195,"zoom":1.0697,"dy":0.006,"warp":0.01,"sx":0.9996,"wave_g":0,"wave_b":0,"ob_a":0.8,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":63,"rad":0.01,"ang":3.4054,"tex_ang":3.1415,"tex_zoom":1.6446,"r":0,"a":0.4,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"rad = rad + 0.1*q3;"},{"baseVals":{"sides":34,"textured":1,"rad":0.18167,"tex_ang":3.1415,"tex_zoom":5.42789,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":54,"x":0,"y":0.6,"rad":0.13478,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\\nr=0;\\nb=0;\\ng=0;\\nr2=r;\\nb2=b;\\ng2=g;"},{"baseVals":{"x":0,"y":0.2,"rad":0.20068,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.3696,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.91+1.3);\\n\\nwave_r = 0.5 + 0.5*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\\nwave_b = 0.5 + 0.5*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\\nwave_g = 0.5 + 0.5*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\\n\\nq8=wave_r;\\nq7=wave_b;\\nq6=wave_g;\\n\\nwr = 0.5+0.4*(0.6*sin(time*0.2) + 0.4*sin(0.8*time));\\nwb = 0.5+0.4*(0.6*sin(time*0.377) + 0.4*sin(0.5*time));\\nwg = 0.5+0.4*(0.6*sin(time*0.7) + 0.4*sin(0.4*time));\\n\\nq10=wr;//*above(bass_thresh, 1.9)*1;\\nq11=wb;//*above(bass_thresh, 1.9)*1;\\nq12=wg;//*above(bass_thresh, 1.9)*1;\\n\\nq10=0.8;\\nq11=0.2;\\nq12=0.1;\\n\\n\\nq18 = 0.01*sin(mtime*0.1);\\nq17 = -0.01*sin(mtime*0.254);\\nq2=bass_thresh;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\nq3=vol;\\nq5=vol*0.5;\\nmtime=mtime+vol*0.01;\\nq2=mtime*0.25;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 noise2_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) + texture (sampler_main, uv).xyz);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (0.5 + ((uv - 0.5) * (1.0 + \\n    (tmpvar_3.y * 0.05)\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (tmpvar_4.x + pow (tmpvar_3.x, q17));\\n  tmpvar_5.y = (tmpvar_4.y + pow (tmpvar_3.x, q18));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_fc_main, fract(tmpvar_5));\\n  vec3 tmpvar_7;\\n  tmpvar_7.x = q10;\\n  tmpvar_7.y = q11;\\n  tmpvar_7.z = q12;\\n  noise2_1 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz + ((tmpvar_7 * vec3(rad)) * vol));\\n  vec3 a_8;\\n  a_8 = (1.0 - tmpvar_6.xyz);\\n  ret_2 = (tmpvar_6.xyz + (0.3 * clamp (\\n    ((a_8.yzx * noise2_1.zxy) - (a_8.zxy * noise2_1.yzx))\\n  , 0.0, 1.0)));\\n  ret_2 = (ret_2 * 0.97);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_2;\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * vec3(0.9, 0.3, 0.5));\\n  ret_1 = (ret_1 * 1.34);\\n  ret_1 = (ret_1 * ret_1);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},"./presets/converted/Eo.S. + Zylot - skylight (Stained Glass Majesty mix).json":e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"decay":0.95,"echo_zoom":1.006596,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.019788,"wave_scale":0.011726,"wave_smoothing":0.9,"warpanimspeed":0.010284,"warpscale":0.01,"fshader":1,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":31.999994,"mv_y":24.000004,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":1,"mv_r":0.49,"mv_g":0.48,"mv_b":0.300001,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":1.670888,"tex_ang":0.942478,"tex_zoom":0.534261,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0.17},"init_eqs_eel":"","frame_eqs_eel":"flux=q5*9;\\nfluxs=max(flux,0);\\nfluxs=min(fluxs,1);\\nadvflux=(q3*fluxs) + (-q3 * (1-fluxs));\\nadv=adv+advflux;\\nadvs=adv/256;\\n\\n\\nang=advs;\\nrad=1.671 + q3/25"},{"baseVals":{"sides":3,"x":0.35,"g":1,"b":1,"g2":0,"b2":0.1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"y=0.1 + q2*0.4;\\nrad=q2/2;\\nang=-q2*2"},{"baseVals":{"enabled":1,"sides":3,"x":0.59,"rad":0.444842,"r":0,"r2":0.1,"g2":0.05,"border_a":0},"init_eqs_eel":"dir = 3;\\nmover = 0;\\nrotator = .255","frame_eqs_eel":"ang = rotator;\\nx = if(equal(dir,1),1 - mover,if(equal(dir,1.5),.15,if(equal(dir,2),0,if(equal(dir,2.5),0, if(equal(dir,3),0+mover,if(equal(dir,3.5),1,if(equal(dir,4),1,1)))))));\\ny = if(equal(dir,1),1,if(equal(dir,1.5),1,if(equal(dir,2),1 - mover,if(equal(dir,2.5),0, if(equal(dir,3),0,if(equal(dir,3.5),0,if(equal(dir,4),0+mover,1)))))));\\nmover = if(equal(dir,1),mover + .005,if(equal(dir,1.5),0,if(equal(dir,2),mover + .005,if(equal(dir,2.5),0, if(equal(dir,3),mover+.005,if(equal(dir,3.5),0,if(equal(dir,4),mover+.005,0)))))));\\ndir = if(equal(dir,1),if(above(mover,.995),1.5,dir),if(equal(dir,1.5),if(below(rotator,-1.29),2,dir), if(equal(dir,2),if(above(mover,.995),2.5,dir),if(equal(dir,2.5),if(below(rotator,-2.85),3,dir), if(equal(dir,3),if(above(mover,.995),3.5,dir),if(equal(dir,3.5),if(below(rotator,-4.44),4,dir), if(equal(dir,4),if(above(mover,.995),4.5,dir),if(equal(dir,4.5),if(below(rotator,-5.94),1,dir),dir))))))));\\nrotator = if(equal(dir,1.5),if(above(rotator,-1.31),rotator - .05,rotator),if(equal(dir,2),-1.3, if(equal(dir,2.5),if(above(rotator,-2.87),rotator-.05,rotator),if(equal(dir,3),-2.86, if(equal(dir,3.5),if(above(rotator,-4.46),rotator-.05,rotator),if(equal(dir,4),-4.45, if(equal(dir,4.5),if(above(rotator,-5.97),rotator-.05,rotator),if(equal(dir,4),-5.96,.26))))))));\\n\\n//Ok, enough with the crazy ifs, we got our tram moving, now for some reaction.\\n\\nb = above(mid,1.5);\\nr2 = above(mid,1.5);\\ng2 = above(mid,1.5);\\nb2 = above(mid,1.5);"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"x":0.84,"r":0.98,"g":1,"b":0.98,"a":0.3,"g2":0.09,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=sin(time/2)*0.4 + 0.5;\\ny=sin(time)*0.4+0.5;\\nrad=(q1*q1)/2;;\\nang=q1*4;\\n\\nr=0.70 + (sin(time/2))*0.50;\\ng=0.70 + (sin(time/2 + 2)) * 0.50;\\nb=0.70 + (sin(time/2 + 4)) * 0.5"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\nq1=0;q2=0;q3=0","frame_eqs_eel":"decay=1;\\nzoom=1.000;\\nspeed=0.80;\\nspeedinv=1-speed;\\nq1=(qa*speed + bass*speedinv);\\nq2=(qb*speed + mid *speedinv);\\nq3=(qc*speed + treb*speedinv);\\nqa=q1;\\nqb=q2;\\nqc=q3;\\nflux=sin(time/2);\\nq4=flux * 0.5 + 0.5;\\nq5=flux","pixel_eqs_eel":"","warp":"","comp":""}')},"./presets/converted/Eo.S. - glowsticks v2 05 and proton lights (+Krash′s beat code) _Phat_remix02b.json":e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1.21,"decay":0.96,"echo_zoom":0.99663,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"brighten":1,"invert":1,"wave_a":0.001,"wave_scale":0.011726,"wave_smoothing":0.9,"warpanimspeed":0.037492,"warpscale":0.014889,"warp":0.033004,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.055,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":43.199997,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":1.06779,"ang":0.753982,"tex_zoom":0.779769,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"rad":0.038091,"g":1,"b":1,"g2":0.6,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm=q1;\\n\\nxp=0;\\nyp=0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n\\n"}],"waves":[{"baseVals":{"enabled":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"g":0.6,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8 + 1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\n\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"g":0.3,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8+1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\nwarp=0","frame_eqs_eel":"//krash\'s beat detection code\\nvolume = 0.3*(bass+mid+att);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatcounter = beatcounter + beat;\\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\\nflip = 2*mode-1;\\nmonitor=flip;\\nq8=flip;\\n\\n\\ndecay=1;\\nzoom=1.002;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1*flip*(55/fps);\\n\\nq1=mtime*0.4;\\n\\nwarp=0.0","pixel_eqs_eel":"//tm=time+(sin(time)*rad);\\nvar=tan(time)*treb*treb;\\n\\nzoom=1+(rad/40)+(var/40);\\n//rot=((rad/100)*var)*sin(time);","warp":"","comp":""}')},"./presets/converted/Flexi + Martin - astral projection.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0.9,"echo_zoom":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":5.715,"wave_smoothing":0.9,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.162,"warpscale":5.582,"zoomexp":0.32104,"zoom":0.9901,"warp":0.11563,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.05343,"tex_zoom":12.77228,"g":1,"b":1,"a":0,"r2":1,"b2":1,"a2":1,"border_g":0,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"textured":1,"y":0.75,"rad":0.46753,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"w = -atan2(0.5,q1)*4+asin(1)*4;\\nang = w;\\nx = 0.5 +sin(w)*0.19;\\ny = 0.5 +cos(w)*0.26;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"y":0.75,"rad":0.46753,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"w = -atan2(0.5,q1)*4+asin(1)*4 + asin(1)*2/3;\\nang = w;\\nx = 0.5 +sin(w)*0.19;\\ny = 0.5 +cos(w)*0.26;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"y":0.75,"rad":0.46753,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"w = -atan2(0.5,q1)*4+asin(1)*4 - asin(1)*2/3;\\nang = w;\\nx = 0.5 +sin(w)*0.19;\\ny = 0.5 +cos(w)*0.26;"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":2.44415,"smoothing":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 - 0.0005 - bass*0.003;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 +0.0001 + mid*0.001 - bass*0.0005 -treb*0.0005;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.0001+ treb*0.001 - bass*0.0005 - mid*0.0005;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = -z+0.7;"},{"baseVals":{"enabled":1,"thick":1,"scaling":2.44415,"smoothing":0,"a":0.05},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample*0.48;\\nx = 0.5 + t8*0.04 - t8*sample*0.02 + (sqr(sample*2-1)-1)*q1*0.5;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -(q4-q6)*10+sample*asin(1)*4.01;\\nc=9;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"enabled":1,"samples":49,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"b":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -1;\\ny = sample*0.48;\\nx = 0.5 + t8*0.04 - t8*sample*0.02 + (sqr(sample*2-1)-1)*q1*0.5;"},{"baseVals":{"enabled":1,"samples":49,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"b":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = 1;\\ny = sample*0.48;\\nx = 0.5 + t8*0.04 - t8*sample*0.02 + (sqr(sample*2-1)-1)*q1*0.5;"}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"zoom = 1.0;\\n\\nq1 = .1*(bass-treb);\\n\\nvvb = if(below(vvb,0),0,vvb);\\nvvm = if(below(vvm,0),0,vvm);\\nvvt = if(below(vvt,0),0,vvt);\\nvb = vb*0.85 + (1-vb)*pow(bass,2)*0.001;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.2;\\nvm = vm*0.85 + (1-vm)*pow(mid,2)*0.01;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.2;\\nvt = vt*0.85 + (1-vt)*pow(treb,2)*0.001;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.2;\\n\\nq1 = (vvb-vvt)*vvm;//0.5 + vb - vvb;\\nq2 = vvm;//0.5 + vm - vvm;\\nq3 = vvt;//0.5 + vt - vvt;\\n\\nv=0.2;\\nd = 0;//v*0.2;\\nbb = bb + vvb*v - d;\\nmm = mm + vvm*v - d;\\ntt = tt + vvt*v - d;\\nq4 = bb;\\nq5 = mm;\\nq6 = tt;\\n\\n\\nq4 = if(above(abs(q1),0.02),0.99,1);\\nq9 = 0.5 + 0.5*sin(time*0.14);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_fc_main, uv) * q4).xyz;\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = 0.5;\\n  tmpvar_1.y = (1.0 - q9);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv_orig - tmpvar_1);\\n  float tmpvar_3;\\n  tmpvar_3 = (3.0 / tmpvar_2.y);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = ((tmpvar_2.x * tmpvar_3) * q9);\\n  tmpvar_4.y = (tmpvar_3 * q9);\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, fract(((1.0 - \\n    abs(((fract(\\n      ((tmpvar_2 + vec2(0.5, 1.0)) * 0.5)\\n    ) * 2.0) - 1.0))\\n  ) - (\\n    ((texture (sampler_noise_hq, ((tmpvar_4 * 0.05) + (vec2(0.1, -0.05) * time))) - 0.5) * float(int((tmpvar_2.y > 0.0))))\\n  .xy * 0.025))));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (((tmpvar_5.xyz * tmpvar_5.xyz) * 1.4) - 0.04);\\n  ret = tmpvar_6.xyz;\\n }"}')},"./presets/converted/Flexi + Martin - cascading decay swing.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.99996,"g":1,"b":1,"r2":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*0.618)*0.2;\\ny = 0.5+cos(time*1.618)*0.2;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"g":1,"b":1,"g2":0,"b2":1,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*2.618)*0.3;\\ny = 0.5+cos(time*3.14)*0.3;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\\n"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.9998,"g":1,"b":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(-time*2.618)*0.4;\\ny = 0.5+cos(-time*1.14)*0.4;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.16188,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"scaling":25.12601,"smoothing":1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//zoom = 0.99;\\nib_r = sin(time*1.25*4)*0.3+0.7;\\nib_g = sin(time*4)*0.3+0.3;\\nib_b = sin(time/3*4)*0.5+0.5;\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.0002*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\nq4 = x4;\\nq8 = y4;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\n\\nzoom = 1;\\nwarp = 0;\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nob_r = (bb-mn)/(mx-mn);\\nob_b = (mm-mn)/(mx-mn);\\nob_g = (tt-mn)/(mx-mn);\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\na = a*0.95 + q5;\\n\\ns = s*0.9 + a;\\nq3 = s*0.1;\\nmonitor = s;\\n\\nwave_a = 0;","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 + (y-0.5)*q2;\\n\\ndir = -q6*1 + asin(1)*0;\\n\\nb1 = 0.1; // distance\\nm1 = q5*25;//-0.6 + q5*200; // size\\nt1 = 0.05; // velocity\\n\\nxx = q4;\\nyy = 1-q8;\\n\\ndx = 0; dy = 0;\\n\\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\\n\\nr = 0.05;\\nv = -35*q5;\\ndx = v*sin(dir)*(r-d)*(1-sigmoid(d-r,200))*q2;\\ndy = v*cos(dir)*(r-d)*(1-sigmoid(d-r,200))*q1;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  tmpvar_1.xyz = ((texture (sampler_main, clamp (\\n    (uv - (((vec2(0.0, 32.0) * texsize.zw) * dot (\\n      (tmpvar_2.xyz - 0.35)\\n    , vec3(0.32, 0.49, 0.29))) * (dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) - 0.4)))\\n  , 0.0, 1.0)).xyz - 0.0011) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy)\\n  ) - 0.5) * 0.0038).xyz);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    ((uv - 0.5) * 2.0)\\n  )) - tmpvar_4);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((0.04 / sqrt(\\n    dot (uv1_1, uv1_1)\\n  )), 0.0, 1.0);\\n  uv1_1 = ((0.3 * cos(\\n    (uv1_1 * 12.0)\\n  )) - (9.0 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (tmpvar_5 + ((texture (sampler_main, uv).xyz * 12.0) * vec3(clamp (\\n    (0.04 / sqrt(dot (uv1_1, uv1_1)))\\n  , 0.0, 1.0))));\\n  ret = tmpvar_6.xyz;\\n }"}')},"./presets/converted/Flexi + amandio c - piercing 05 - Kopie (2) - Kopie.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.853,"rot":0.006,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.78903,"ang":0.62832,"tex_zoom":1.02009,"r":0,"g":1,"b":1,"r2":0.7,"b2":1,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"c_x = 0.5;\\nc_y = 0.5;","frame_eqs_eel":"sx=1+.01*(8*bass%8)*equal(time%(int(24-2*bass)),0);\\nsy=1+.01*(8*mid%8) *equal(time%(12+int(24-2*bass)),0);\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nrot = 0;\\nzoom = 1;\\nwarp = 0;\\n\\n\\nvol = bass*8 + mid*4 + treb*2;\\nvol = vol*above(vol,17);\\nmonitor = vol;\\nbeat = above(vol,res);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\\nres = max(0,res);\\nmonitor = res;\\n\\nr = if(beat, 0.01*(rand(200)-100)*0.01,r);\\nrot = r;\\n\\nc_x = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_x);\\nc_y = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_y);\\n\\n\\nq23 = c_x;\\nq24 = c_y;\\n\\n// elastic thread code by Flexi\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1*1.5;\\ndt = 0.03/fps;\\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\\nx2 = x2 + vx2; y2 = y2 + vy2;\\nx3 = x3 + vx3; y3 = y3 + vy3;\\nx4 = x4 + vx4; y4 = y4 + vy4;\\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\\nq9 = 1/aspectx;\\nq10 = 1/aspecty;\\nq11 = aspectx;\\nq12 = aspecty;\\nq13 = sqrt(vx4*vx4 + vy4*vy4)*0.8;\\nq14 = atan2(vx4,vy4);","pixel_eqs_eel":"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),2)-0);\\nv = 0.03;\\ndx = v*(x-q23)*d;\\ndy = v*(y-q24)*d;\\n\\n\\nx = 0.5 + (x-0.5)*q11;\\ny = 0.5 + (y-0.5)*q12;\\ndir = -q14*1 + asin(1)*1;\\n\\nvelocity = q13;\\nstrength = 100;\\nsize = 0.07;\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*size;\\ny1 = yy -sin(dir+1.5708)*size;\\n\\nx2 = xx   -cos(dir+1.5708)*size;\\ny2 = yy +sin(dir+1.5708)*size;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-size*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-size*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\n\\ndx += (si1*sin(y1-y)*d1  - si2*sin(y2-y)*d2)*strength*velocity;\\ndy += (-si1*sin(x1-x)*d1 + si2*sin(x2-x)*d2)*strength*velocity;","warp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  xlat_mutabled = (texsize.zw * 4.0);\\n  xlat_mutabledx = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabledy = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabled = uv;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = xlat_mutabledx.y;\\n  tmpvar_3.y = xlat_mutabledy.y;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv_orig);\\n  ret_1.y = ((texture (sampler_main, (uv - \\n    ((tmpvar_3 * texsize.zw) * 6.0)\\n  )).y - 0.008) + ((1.0 - tmpvar_5.x) * 0.018));\\n  ret_1.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_4 * texsize.zw) * 6.0)\\n  )).z - 0.008) + (tmpvar_5.x * 0.018));\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.15) + (tmpvar_2 * 0.0042)).x);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q3;\\n  tmpvar_1.y = q4;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = q6;\\n  tmpvar_2.y = q7;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q9;\\n  tmpvar_3.y = q10;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q12;\\n  tmpvar_4.y = q13;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 1.25);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (texture (sampler_main, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz - texture (sampler_main, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz);\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (texture (sampler_main, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz - texture (sampler_main, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_9;\\n  x_9 = ((uv - (tmpvar_8 * 8.0)) - tmpvar_1);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_10.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_11;\\n  x_11 = ((uv - (tmpvar_10 * 8.0)) - tmpvar_2);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_12.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_13;\\n  x_13 = ((uv - (tmpvar_12 * 8.0)) - tmpvar_3);\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_14.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_15;\\n  x_15 = ((uv - (tmpvar_14 * 8.0)) - tmpvar_4);\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = mix (texture (sampler_main, uv).xyz, max (max (\\n    (vec3((1.0 - pow (sqrt(\\n      dot (x_9, x_9)\\n    ), 0.2))) * vec3(2.0, 1.0, -1.0))\\n  , \\n    (vec3((1.0 - pow (sqrt(\\n      dot (x_11, x_11)\\n    ), 0.2))) * vec3(2.0, -1.0, 1.0))\\n  ), max (\\n    (vec3((1.0 - pow (sqrt(\\n      dot (x_13, x_13)\\n    ), 0.2))) * vec3(-1.0, 1.0, 2.0))\\n  , \\n    (vec3((1.0 - pow (sqrt(\\n      dot (x_15, x_15)\\n    ), 0.2))) * vec3(1.0, -1.0, 2.0))\\n  )), vec3(0.5, 0.5, 0.5));\\n  ret = tmpvar_16.xyz;\\n }"}')},"./presets/converted/Flexi + stahlregen - jelly showoff parade.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"modwavealphabyvolume":1,"wave_a":0.207,"wave_scale":0.397,"wave_smoothing":0,"wave_mystery":0.24,"modwavealphaend":1.17,"warpscale":16.016,"zoomexp":11.56276,"zoom":1.05971,"warp":0.13126,"ob_size":0.005,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"decay = 1;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*1.5;\\ny1 = 0.5 + yy1;\\n\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 18;\\ngrav = 1;\\nresist = 5;\\nbounce = 0.9;\\ndt = 0.0003;\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1;\\nq2 = x2;\\nq3 = x3;\\nq4 = x4;\\n\\nq5 = y1;\\nq6 = y2;\\nq7 = y3;\\nq8 = y4;\\n\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\nzoom = 1.001;\\nrot = 0.00;\\nwarp = 0.2;\\nwave_a = 0;","pixel_eqs_eel":"r = 0.2;\\ncx1 = q4;\\ncy1 = q5;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(r*r-d*d)*q3;\\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\\nv = 1;\\ndx = (x1)*v;\\ndy = (y1)*v;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.5 + ((uv - 0.5) * 1.002));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 8.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = fract(((0.5 + \\n    (uv_1 - 0.5)\\n  ) - (tmpvar_6 * texsize.zw)));\\n  ret_2.x = texture (sampler_main, tmpvar_7).x;\\n  ret_2.x = (ret_2.x + ((\\n    (ret_2.x - ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2))\\n  .x * 0.4) + 0.006));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.x;\\n  tmpvar_8.y = -(tmpvar_4.x);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.z;\\n  tmpvar_9.y = tmpvar_5.z;\\n  ret_2.z = max ((clamp (\\n    (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1).x - 0.3)\\n  , 0.0, 1.0) * 2.0), (texture (sampler_fc_main, (\\n    (uv_1 - ((tmpvar_8 * texsize.zw) * 8.0))\\n   + \\n    ((tmpvar_9 * texsize.zw) * 4.0)\\n  )).z - 0.008));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.y;\\n  tmpvar_10.y = tmpvar_5.y;\\n  ret_2.y = max (ret_2.x, (texture (sampler_fc_main, (uv_1 + \\n    (tmpvar_10 * texsize.zw)\\n  )).y - 0.016));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_2;\\n  ret = tmpvar_11.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 6.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\\n  ret_1 = ((0.8 * (\\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 + (0.6 * (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 - ((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \\n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\\n  )));\\n  ret_1 = (ret_1 + 1.0);\\n  float tmpvar_9;\\n  tmpvar_9 = dot (ret_1, vec3(0.32, 0.49, 0.29));\\n  ret_1 = (mix (vec3(tmpvar_9), (\\n    (0.75 * vec3(tmpvar_9))\\n   * \\n    dot ((((0.6 * \\n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n     + bias1))), vec3(0.32, 0.49, 0.29))\\n  ), pow (hue_shader, vec3(tmpvar_9))) * 0.9);\\n  ret_1 = (ret_1 * ret_1);\\n  vec3 tmpvar_10;\\n  tmpvar_10 = sqrt(ret_1);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_10;\\n  ret = tmpvar_11.xyz;\\n }"}')},"./presets/converted/Flexi - alien fish pond.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"wave_thick":1,"wrap":0,"wave_a":0.004,"wave_scale":9.731,"wave_smoothing":0,"wave_mystery":1,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.442,"warpscale":7.315,"zoomexp":1.50374,"warp":0.08563,"wave_y":0.04,"ob_size":0,"ob_g":1,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0.75,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":41,"additive":1,"num_inst":50,"rad":0.01,"ang":3.20442,"tex_zoom":6.23873,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"index = instance*q32;\\n\\nx = gmegabuf(index);\\ny = gmegabuf(index+1);\\n\\nang = gmegabuf(index+9);\\nrad = gmegabuf(index+4)*2;\\n\\nr = gmegabuf(index+5);\\ng = gmegabuf(index+6);\\nb = gmegabuf(index+7);\\n\\nr2 = r; g2 = g; b2 = b;\\n\\n\\nx = 0.5 + (x-0.5)/q2;"},{"baseVals":{"sides":23,"additive":1,"num_inst":50,"x":0.74,"y":0.27,"rad":0.01,"tex_zoom":0.81948,"g":1,"b":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"sample = instance/(num_inst-1);\\n\\nx1 = 0.5;\\ny1 = 0.5 + (q3-0.5)*0.01;\\ny2 = 0.5;\\nx = x1 + (sample-0.5)*0.2;\\ny = y2*sample + y1*(1-sample);"},{"baseVals":{"sides":100,"additive":1,"rad":0.0999,"tex_zoom":0.73458,"r":0,"g":1,"a":0,"border_a":1,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":3,"additive":1,"num_inst":400,"rad":0.16283,"tex_zoom":0.73458,"g":1,"b":1,"a":0.5,"g2":0,"border_a":0},"init_eqs_eel":"i3 = 0;\\ni4 = 0;","frame_eqs_eel":"i3 = if(equal(instance,0),0,i3);\\ni4 = if(equal(instance,0),0,i4);\\nppo = 8;\\nindex = i4*q32;\\nsample = i3 % ppo;\\n\\nsize = gmegabuf(index+4)*40;\\n\\nx = gmegabuf(index);\\ny = gmegabuf(index+1);\\n\\nang = gmegabuf(index+9);\\nrad = size*0.05;\\n\\nr = gmegabuf(index+5);\\ng = gmegabuf(index+6);\\nb = gmegabuf(index+7);\\n\\n\\nsample = sample/ppo;\\nbending = gmegabuf(index + 12)*5 + gmegabuf(index + 10)*5;\\ndir = -ang + (sample-0.4)*bending;\\n\\n ang =  asin(1)*1.5 - dir + bending*0.05;\\n\\nx = x + ((sample-0.3)*0.06*cos(dir)*size + sin(dir)*size*bending*0.01);\\ny = y + ((sample-0.3)*0.06*sin(dir)*size - cos(dir)*size*bending*0.01);\\n\\nx = 0.5 + (x-0.5)/q2;\\n\\nrad = rad*1.5 - sample*0.05*size;\\n\\ni3 = i3 + 1;\\ni4 = if( equal(i3%ppo,0), i4 +1, i4);"}],"waves":[{"baseVals":{"samples":452,"additive":1,"scaling":2.44415,"smoothing":0,"a":0.15,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nt2 = 0;","point_eqs_eel":"ppo = 9;\\nindex = t2*q32;\\nsample = t1 % ppo;\\n\\nnindex = gmegabuf(index + q30); // the next neighbor\'s index\\nnnindex = gmegabuf(index + q30+1); // the next neighbor\'s index\\nnnnindex = gmegabuf(index + q30+2); // the next neighbor\'s index\\n\\nx = gmegabuf(index);\\ny = gmegabuf(index+1);\\nr = 0.5 + gmegabuf(index+5)*0.5;\\ng = 0.5 + gmegabuf(index+6)*0.5;\\nb = 0.5 + gmegabuf(index+7)*0.5;\\n\\nnx = gmegabuf(nindex);\\nny = gmegabuf(nindex+1);\\nnnx = gmegabuf(nnindex);\\nnny = gmegabuf(nnindex+1);\\nnnnx = gmegabuf(nnnindex);\\nnnny = gmegabuf(nnnindex+1);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q2;\\nnx = 0.5 + (nx-0.5)/q2;\\nny = 0.5 + (ny-0.5)/q2;\\nnnx = 0.5 + (nnx-0.5)/q2;\\nnny = 0.5 + (nny-0.5)/q2;\\nnnnx = 0.5 + (nnnx-0.5)/q2;\\nnnny = 0.5 + (nnny-0.5)/q2;\\n\\nx = if( equal(sample,2), nx, x);\\ny = if( equal(sample,2), ny, y);\\nx = if( equal(sample,4), nnx, x);\\ny = if( equal(sample,4), nny, y);\\nx = if( equal(sample,6), nnnx, x);\\ny = if( equal(sample,6), nnny, y);\\n\\na = above(sample,1)*below(sample,ppo-1)*a;\\n\\nt1 = t1 + 1;\\nt2 = if( equal(t1%ppo,0), t2 +1, t2);"},{"baseVals":{"enabled":1,"samples":65,"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":0.33408,"smoothing":0,"a":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;","point_eqs_eel":"d = 0;//d*0.85 + (value1)*1;\\n\\ny = 0.2 + value1+value2;\\nx = 0.9 - sample*0.8;\\n\\ngmegabuf((sample*64-1)*q32 + 14) = value1 + value2;"},{"baseVals":{"samples":280,"additive":1,"scaling":5.92556,"smoothing":0,"a":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = 0;\\nt2 = 0;\\n\\n","point_eqs_eel":"// q32 number of attributes\\n// q31 number of objects\\n\\nppo = 7; // number of points used for each object\\nindex = t2*q32; // object\'s index\\n\\nx = 0.5 +(gmegabuf(index)-0.5)/q2;\\ny = 0.5 + (gmegabuf(index+1)-0.5)/q2;\\n\\n// collecting pairs of index and distance to the current object in a local buffer\\ni = 0;\\nj = 0;\\nloop(q31,\\n     d = sqrt( sqr(gmegabuf(index)-gmegabuf(i)) + sqr(gmegabuf(index+1)-gmegabuf(i+1)));\\n     d = if( equal(d,0), 1, d);\\n     megabuf(j)   = i; // store index/distance pairs\\n     megabuf(j+1) = d;\\n     j = j+2;\\n     i = i+q32;\\n    );\\n\\n// sort that buffer, but only 5 cycles for the 5 nearest objects\\ni = 0;\\nloop( 5,\\n      j = i;\\n      smallestfind = 100;\\n      findindex = 0;\\n      loop( q31-j,\\n            distance =megabuf(j*2+1);\\n            smaller = above( smallestfind, distance);\\n            smallestfind = if(smaller, distance, smallestfind);\\n            findindex = if( smaller, j*2, findindex);\\n            j = j + 1;\\n          );\\n\\n      // now that the nearest object was found, swap it to the buffer\'s top\\n\\n      j = megabuf(i);\\n      d = megabuf(i+1);\\n\\n      megabuf(i)   = megabuf(findindex);\\n      megabuf(i+1) = megabuf(findindex+1);\\n      megabuf(findindex)   = j;\\n      megabuf(findindex+1) = d;\\n\\n      i = i+1;\\n    );\\n\\n\\nindex2 = (t1)%ppo;\\ni = megabuf(index2-2);\\nxx = 0.5 + (gmegabuf(i)-0.5)/q2;\\nyy = 0.5 + (gmegabuf(i+1)-0.5)/q2;\\nw = asin(1)*index2/4;\\n//xx = x + sin(w)*0.1;\\n//yy = y + cos(w)*0.1;\\nx = if( equal(index2%2,0), x, xx);\\ny = if( equal(index2%2,0), y, yy);\\n\\n\\na = below(index2,ppo-1)*above(index2,1)*a;\\nr = 0.5 + gmegabuf(index + 5)*0.5;\\ng = 0.5 + gmegabuf(index + 6)*0.5;\\nb = 0.5 + gmegabuf(index + 7)*0.5;\\n\\n\\nt2 = t2 + equal(t1%ppo,ppo-1);\\nt1 = t1 + 1;\\n\\n//a = above(t1,128);"},{"baseVals":{"samples":15,"thick":1,"additive":1,"scaling":5.92556,"smoothing":0,"a":0.4,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = 0;\\nt2 = 0;\\nt3 = 0;\\nt4 = 0.5;","point_eqs_eel":"ppo = 5;\\n\\nindex = t2*q32;\\nneighbor = 1;\\nneighbor = gmegabuf(index+10+neighbor);\\nx = 0.5 + (gmegabuf(index)-0.5)/q2;\\ny = 0.5 + (gmegabuf(index+1)-0.5)/q2;\\nxx = 0.5 + ( gmegabuf(neighbor) - 0.5)/q2;\\nyy = 0.5 + ( gmegabuf(neighbor+1) - 0.5)/q2;\\n\\nx = if( equal(t1 % 2, 0), x, xx);\\ny = if( equal(t1 % 2, 0), y, yx);\\n\\n\\nt2 = t2 + equal(t1,ppo);\\nt1 = if(above(t1,ppo),t1-ppo,t1) + 1;\\n"}],"init_eqs_eel":"// clear buffer\\ni = 0; loop(1024*1024, gmegabuf(i) = 0; i = i+1;);\\n\\ncount = 50;\\nattributes = 32;\\nnListStart = 24; // starting index of neighbor list\\n\\nminradius = 0.004;\\nmaxradius = 0.04;\\nv = 0.0;\\n\\n// randomize initial coordinates\\nindex = 0;\\nloop(count,\\n     gmegabuf(index*attributes) = rand(1000)/1000;\\n     gmegabuf(index*attributes+1) = rand(1000)/1000;\\n     gmegabuf(index*attributes+2) = v*(rand(1000)/1000-0.5);\\n     gmegabuf(index*attributes+3) = v*(rand(1000)/1000-0.5);\\n     gmegabuf(index*attributes+4) = minradius + (maxradius-minradius)*(index+1)/count;\\n     gmegabuf(index*attributes+5) = 0;\\n     gmegabuf(index*attributes+6) = 1;\\n     gmegabuf(index*attributes+7) = 1;\\n     gmegabuf(index*attributes+8) = pow(gmegabuf(index*attributes+4),3) ;\\n     gmegabuf(index*attributes+9) = 4*asin(1)*rand(1000)/1000;\\n     gmegabuf(index*attributes+10) = 0;\\n     gmegabuf(index*attributes+13) = index/(count-1);\\n     gmegabuf(index*attributes+14) = 0;\\n     index = index+1;\\n    );\\n\\nq30 = nListStart;\\nq31 = count;\\nq32 = attributes;\\n\\n// 0, x\\n// 1, y\\n// 2, vx\\n// 3, vy\\n// 4, radius\\n// 5, red\\n// 6, green\\n// 7, blue\\n// 8, mass\\n// 9, angle\\n// 10, rotation\\n// 11, bend force\\n// 12, bending\\n// 13, sample\\n// 14, spectrum","frame_eqs_eel":"dt = 1/fps;\\n\\nwarp = 0;\\nzoom = 1;\\nwave_a = 0;\\n\\ngravity = 0.0015*dt*0;\\ndampening = 0;\\nfriction = 2048*dt;\\nshock = 0.002;\\npi2 = asin(1);\\n\\nnn = 3; // number of nearest neighbors to search, reduce if not needed\\n        // provide enough attributes, otherwise the next object\'s coordinate will be overwritten\\n        // collision detection is based on nearest neighbors, so keep it at least at 1.\\n\\ncheck = 2; // how many neighbors will be checked for a possible collision. may not be above nn.\\n           // raise to avoid odd behavior in clusters of touching objects.\\n\\nbouncefactor = 0.1;\\nrotatefactor = 0; // relation between angular and translative momentum, when object hits a border. this is an empirical value for a convincing impression\\n\\n\\n\\nh = (aspecty-1)*0.5; w = (aspectx-1)*0.5;\\nindex = 0; index2 = 0;\\nloop(count,\\n\\n     random = rand(1000)/1000;\\n     sample = gmegabuf(index+13);\\n\\n     // bend force\\n     gmegabuf(index + 11) = gmegabuf(index + 11)*0.92 - 4*gmegabuf(index+12)*dt + 2*(random-0.5)*dt*gmegabuf(index+14);\\n\\n     // bend\\n     gmegabuf(index + 12) += 60*gmegabuf(index + 11)*dt;\\n\\n     v = sqrt( sqr( gmegabuf(index + 2) ) + sqr( gmegabuf(index + 3) ) );\\n\\n     // apply friction\\n     fric = max(0,1 - sqr(v*friction) - v*2);\\n     gmegabuf(index + 2) *= fric;\\n     gmegabuf(index + 3) *= fric;\\n\\n     // apply direction change\\n     gmegabuf(index + 10) = gmegabuf(index + 10)*fric +  v*gmegabuf(index +12)*0;\\n\\n     // apply acceleration force\\n     acceleration = random*0.000 + abs(gmegabuf(index+11))*0.003;\\n     direction = gmegabuf(index + 9) - pi2;\\n     gmegabuf(index + 2) += sin(direction)*acceleration;\\n     gmegabuf(index + 3) += cos(direction)*acceleration;\\n\\n     // adding velocity vectors\\n     gmegabuf(index) = gmegabuf(index) + gmegabuf(index+2)*60*dt;\\n     gmegabuf(index+1) = gmegabuf(index+1) + gmegabuf(index+3)*60*dt;\\n     gmegabuf(index+9) = gmegabuf(index+9) + gmegabuf(index+10)*0.5;\\n\\n     // applying gravity\\n     gmegabuf(index+3) = gmegabuf(index+3) - gravity;\\n\\n     vr = sin(gmegabuf(index+10))*gmegabuf(index+4); // rotation speed at the surface\\n\\n     // bounce off ceiling\\n     bounce = above( gmegabuf(index+1), 1 - gmegabuf(index+4) + w);\\n     gmegabuf(index+2) = if( bounce, gmegabuf(index+2) + (vr+gmegabuf(index+2))*rotatefactor, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, -abs(gmegabuf(index+3))*dampening - shock, gmegabuf(index+3));\\n     vr = if( bounce, vr - (gmegabuf(index+2) + vr)*(1-rotatefactor), vr);\\n\\n     // bounce off floor\\n     bounce = below( gmegabuf(index+1), gmegabuf(index+4) - w);\\n     gmegabuf(index+2) = if( bounce, gmegabuf(index+2) + (vr-gmegabuf(index+2))*rotatefactor, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, abs(gmegabuf(index+3))*dampening + shock, gmegabuf(index+3));\\n     vr = if( bounce, vr + (gmegabuf(index+2) - vr)*(1-rotatefactor), vr);\\n\\n     // bounce off right border\\n     bounce = above( gmegabuf(index), 1 - gmegabuf(index+4) + h);\\n     gmegabuf(index+2) = if( bounce, -abs(gmegabuf(index+2))*dampening - shock, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, gmegabuf(index+3) + (vr-gmegabuf(index+3))*rotatefactor, gmegabuf(index+3));\\n     vr = if( bounce, vr + (gmegabuf(index+3) - vr)*(1-rotatefactor), vr);\\n\\n     // bounce off left border\\n     bounce = below( gmegabuf(index), gmegabuf(index+4) - h);\\n     gmegabuf(index+2) = if( bounce, abs(gmegabuf(index+2))*dampening + shock, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, gmegabuf(index+3) - (vr+gmegabuf(index+3))*rotatefactor, gmegabuf(index+3));\\n     vr = if( bounce, vr - (gmegabuf(index+3) + vr)*(1-rotatefactor), vr);\\n\\n     gmegabuf(index+10) = asin(vr/gmegabuf(index+4));\\n\\n     i = 0; j = 0; // collecting pairs of index and distance to the current object in a local buffer\\n     loop( count,\\n           d = sqrt( sqr(gmegabuf(index)-gmegabuf(i)) + sqr(gmegabuf(index+1)-gmegabuf(i+1)));\\n           d = if( equal(d,0), 10, d); // leave out comparison with itself (where d == 0, set d to a high value)\\n           d = d - (gmegabuf(index+4)+gmegabuf(i+4))*0.5; // subtract radius (surface to surface distance)\\n           megabuf(j)   = i; // store index/distance pairs\\n           megabuf(j+1) = d;\\n           j = j+2;\\n           i = i+attributes; );\\n     i = 0; // sort that buffer, but only as many cycles as needed for the _nn_ nearest neighbors\\n     loop( nn,\\n           j = i; smallestfind = 10; findindex = -1;\\n           loop( count-j,\\n                 distance =megabuf(j*2+1);\\n                 smaller = above( smallestfind, distance);\\n                 smallestfind = if(smaller, distance, smallestfind);\\n                 findindex = if( smaller, j*2, findindex);\\n                 j = j + 1; );\\n           j = megabuf(i*2); d = megabuf(i*2+1);\\n           megabuf(i*2)   = megabuf(findindex);\\n           megabuf(i*2+1) = megabuf(findindex+1);\\n           megabuf(findindex)   = j;\\n           megabuf(findindex+1) = d;\\n           i = i+1;\\n         );\\n     i = 0; // storing the indexes of the nearest neighbors in the list\\n     loop( nn,\\n           gmegabuf(index + nListStart + i) = megabuf(i*2);\\n           i = i +1;\\n         );\\n     i = 0; // collision detection and impulse transmission below\\n     loop( check,\\n           index2 = megabuf(i);\\n           hit = below( sqrt( sqr( gmegabuf(index) - gmegabuf(index2)) +\\n                              sqr( gmegabuf(index+1) - gmegabuf(index2+1))),\\n                        gmegabuf(index + 4) + gmegabuf(index2 + 4)\\n                      )\\n                 *\\n                 above( sqrt( sqr( gmegabuf(index)   - gmegabuf(index2))+\\n                        sqr( gmegabuf(index+1) - gmegabuf(index2+1))),\\n                        sqrt( sqr( gmegabuf(index+0) - gmegabuf(index2+0)+\\n                                   gmegabuf(index+2) - gmegabuf(index2+2))+\\n                              sqr( gmegabuf(index+1) - gmegabuf(index2+1)+\\n                                   gmegabuf(index+3) - gmegabuf(index2+3)) ) );\\n           ref_ang = atan2( gmegabuf(index2)-gmegabuf(index), // calculating the angle of the common tangent\\n                            gmegabuf(index2 + 1)-gmegabuf(index + 1)) + pi2;\\n           v1 = sqrt(sqr( gmegabuf(index + 2)) + sqr( gmegabuf(index + 3))); // velocity of object1\\n           v2 = sqrt(sqr( gmegabuf(index2 + 2)) + sqr( gmegabuf(index2 + 3)));  // velocity of object2\\n           w1 = atan2( gmegabuf(index + 2), gmegabuf(index + 3));   // object1 motion angle\\n           w2 = atan2( gmegabuf(index2 + 2), gmegabuf(index2 + 3)); // object2 motion angle\\n           vr2 = sin(gmegabuf(index2 + 10))*gmegabuf(index2+4); // the other object\'s surface velocity\\n           m1 = gmegabuf(index + 8); m2 = gmegabuf(index2 + 8);\\n           vv1 = ((m1-m2)*v1 + 2*m2*v2)/(m1+m2); vv2 = ((m2-m1)*v2 + 2*m1*v1)/(m1+m2);\\n           vrr = ((m1-m2)*vr + 2*m2*vr2)/(m1+m2); vrr2 = ((m2-m1)*vr2 + 2*m1*vr)/(m1+m2);\\n\\n           gmegabuf( index + 2) = if( hit, sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-vr2)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n                                         + cos(ref_ang)*vv1*sin(w2-ref_ang),\\n                                                  gmegabuf( index + 2) );\\n\\n           gmegabuf( index + 3) = if( hit, cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-vr2)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n                                         - sin(ref_ang)*vv1*sin(w2-ref_ang),\\n                                                 gmegabuf( index + 3) );\\n\\n           gmegabuf( index2 + 2) = if( hit, sin(ref_ang)*v2*cos(w2-ref_ang) + ((vr2-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n                                          + cos(ref_ang)*vv2*sin(w1-ref_ang),\\n                                                  gmegabuf( index2 + 2) );\\n\\n           gmegabuf( index2 + 3) = if( hit, cos(ref_ang)*v2*cos(w2-ref_ang) + ((vr2-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n                                          - sin(ref_ang)*vv2*sin(w1-ref_ang),\\n                                                  gmegabuf( index2 + 3) );\\n\\n           vr = if( hit, vr + (cos(w1-ref_ang)*(v1-v2)-vr) , vr);\\n           gmegabuf( index + 10) = asin( vr / gmegabuf(index+4) );\\n\\n           vr2 = if( hit, vr2 + (cos(w2-ref_ang)*(v2-v1)-vr2) , vr2);\\n           gmegabuf( index2 + 10) = asin( vr2 / gmegabuf(index2+4) );\\n\\n           i=i+2;\\n         );\\n     index = index+attributes;\\n    );\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1.z = (texture (sampler_main, uv).z * 0.5);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv_orig * texsize.xy) * texsize_noise_lq.zw);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_4.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  ret_1.y = texture (sampler_fw_main, clamp ((uv_orig + (\\n    (tmpvar_4 * texsize.zw)\\n   * 4.0)), 0.0, 1.0)).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1 - ((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1))\\n  .y * 0.025) + -0.014));\\n  ret_1.y = (ret_1.y + ((texture (sampler_noise_lq, tmpvar_2).y - 0.5) * 0.02));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  tmpvar_5.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  ret_1.x = ((texture (sampler_main, (uv - \\n    ((tmpvar_5 * texsize.zw) * 4.0)\\n  )).x - (ret_1.y * 0.01)) + 0.004);\\n  ret_1.x = (ret_1.x + ((\\n    (texture (sampler_noise_lq, tmpvar_2).x - 0.5)\\n   * 0.01) + (ret_1.z * 0.14)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  )) * 0.5).y;\\n  tmpvar_3.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  )) * 0.5).y;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - ((tmpvar_3 * texsize.zw) * 128.0));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv);\\n  ret_1 = (((\\n    ((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2)\\n  .x * \\n    clamp ((1.0 - tmpvar_5.y), 0.0, 1.0)\\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\\n  ret_1 = (mix (mix (ret_1, \\n    (pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0)) * 1.4)\\n  , vec3(\\n    ((texture (sampler_main, tmpvar_4).x * 0.8) + ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).x)\\n  )), vec3(1.0, 1.0, 1.0), (\\n    (pow (hue_shader, vec3(8.0, 8.0, 8.0)) * texture (sampler_main, clamp (uv, 0.0, 1.0)).y)\\n   * 1.2)) * clamp ((1.0 - tmpvar_5.z), 0.0, 1.0));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }"}')},"./presets/converted/Flexi - area 51.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.9,"wave_scale":2.997,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.274,"warpscale":7.98,"zoom":0.99951,"warp":0.20929,"wave_r":0.02,"wave_g":0.02,"wave_b":0,"ob_size":0.5,"ob_r":1,"ob_g":0.12,"ob_b":1,"ob_a":0.37,"ib_size":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":5,"mv_a":0,"b1ed":0.2},"shapes":[{"baseVals":{"sides":99,"textured":1,"x":1,"y":0.63,"rad":1.3,"tex_zoom":0.763,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"y":0.55,"rad":0.225,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"x":0.85,"y":0,"rad":1.3,"tex_zoom":2.068,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.97,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":3,"textured":1,"x":0.02,"rad":0.733,"ang":1.319,"tex_zoom":100,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.97,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":60,"scaling":0.08,"smoothing":0.4,"r":0,"g":0,"b":0,"a":0.97,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":20,"scaling":0.07,"smoothing":0.65,"r":0.3,"g":0.3,"b":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":30,"scaling":0.07,"r":0.3,"g":0.3,"b":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"sep":60,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"x1 = 0;\\ny1= .001;\\nz1 = 0;","frame_eqs_eel":"zoom = 1;\\nwave_a = 0;\\n\\nstartx = 0.3;\\nstarty = 0.3;\\n\\na = 0.55;\\nb = 0.05;\\nd = 0.09;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq5 = a;\\nq6 = b;\\nq7 = d;\\n\\n\\n// coloring borders\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nh1 = (bb-mn)/(mx-mn);\\nh2 = (mm-mn)/(mx-mn);\\nh3 = (tt-mn)/(mx-mn);\\n\\nv = 0.1333/fps;\\nbm = bm + (h1-h2)*v;\\nmt = mt + (h2-h3)*v;\\nbt = bt + (h1-h3)*v;\\n\\nw = bm*2;\\nq3 = sin(w);\\nq4 = cos(w);\\n\\n\\nq10 = bm;\\nq11 = mt;\\nq12 = bt;","pixel_eqs_eel":"x = 0.5 + (x-0.51)*q1;\\ny = 0.5 - (y-0.5)*q2;\\ndx = (x*(1-x)-q5*x*y/(x+q6));\\ndy = -q7*y*(1-y/x);\\n\\ndx = -dx*0.02/q1;\\ndy = -dy*0.02/q2;","warp":" shader_body { \\n  vec2 my_uv2_1;\\n  vec2 dz_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 4.0);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = ((2.0 * (\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = ((2.0 * (\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_5.x;\\n  tmpvar_7.y = tmpvar_6.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 * texsize.zw);\\n  ret_3.x = (texture (sampler_fw_main, (uv - tmpvar_8)).x - ((\\n    (texture (sampler_blur3, uv).xyz * scale3)\\n   + bias3).x - (\\n    (texture (sampler_blur1, (uv + tmpvar_8)).xyz * scale1)\\n   + bias1).x));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_5.y;\\n  tmpvar_9.y = tmpvar_6.y;\\n  dz_2 = (-(tmpvar_9) * texsize.zw);\\n  ret_3.y = ((texture (sampler_fw_main, (uv - dz_2)).y - 0.06) - ((\\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  .y - \\n    ((texture (sampler_blur1, (uv + dz_2)).xyz * scale1) + bias1)\\n  .y) * 1.3));\\n  vec2 tmpvar_10;\\n  tmpvar_10 = ((uv_orig - 0.5) * (1.8 - (\\n    (bass_att - treb_att)\\n   * 0.015)));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = ((tmpvar_10.x * tmpvar_10.x) - (tmpvar_10.y * tmpvar_10.y));\\n  tmpvar_11.y = ((2.0 * tmpvar_10.x) * tmpvar_10.y);\\n  my_uv2_1 = (tmpvar_11 + vec2(0.28, 0.4));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = ((2.0 * (\\n    (texture (sampler_blur1, (my_uv2_1 + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (my_uv2_1 - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\\n   + bias1))).z;\\n  tmpvar_12.y = ((2.0 * (\\n    (texture (sampler_blur1, (my_uv2_1 + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (my_uv2_1 - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\\n   + bias1))).z;\\n  dz_2 = (tmpvar_12 * texsize.zw);\\n  ret_3.z = (texture (sampler_main, clamp ((my_uv2_1 + dz_2), 0.0, 1.0)).z - 0.014);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_3;\\n  ret = tmpvar_13.xyz;\\n }","comp":" shader_body { \\n  vec3 dy_1;\\n  vec3 dx_2;\\n  vec2 mirror_uv_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = ((q4 * tmpvar_5.x) - (q3 * tmpvar_5.y));\\n  tmpvar_6.y = ((q3 * tmpvar_5.x) + (q4 * tmpvar_5.y));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (0.5 - (tmpvar_6 * 2.0));\\n  vec2 numerator_8;\\n  numerator_8 = (tmpvar_7 - vec2(0.0, 0.5));\\n  vec2 denominator_9;\\n  denominator_9 = (tmpvar_7 - vec2(1.0, 0.5));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = ((numerator_8.x * denominator_9.x) + (numerator_8.y * denominator_9.y));\\n  tmpvar_10.y = ((numerator_8.y * denominator_9.x) - (numerator_8.x * denominator_9.y));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (((tmpvar_10 / \\n    ((denominator_9.x * denominator_9.x) + (denominator_9.y * denominator_9.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_12;\\n  tmpvar_12 = sqrt(dot (tmpvar_11, tmpvar_11));\\n  float tmpvar_13;\\n  float tmpvar_14;\\n  tmpvar_14 = (min (abs(\\n    (tmpvar_11.x / tmpvar_11.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_11.x / tmpvar_11.y)\\n  ), 1.0));\\n  float tmpvar_15;\\n  tmpvar_15 = (tmpvar_14 * tmpvar_14);\\n  tmpvar_15 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_15) + 0.05368138) * tmpvar_15) - 0.1173503)\\n     * tmpvar_15) + 0.1938925) * tmpvar_15) - 0.3326756)\\n   * tmpvar_15) + 0.9999793) * tmpvar_14);\\n  tmpvar_15 = (tmpvar_15 + (float(\\n    (abs((tmpvar_11.x / tmpvar_11.y)) > 1.0)\\n  ) * (\\n    (tmpvar_15 * -2.0)\\n   + 1.570796)));\\n  tmpvar_13 = (tmpvar_15 * sign((tmpvar_11.x / tmpvar_11.y)));\\n  if ((abs(tmpvar_11.y) > (1e-08 * abs(tmpvar_11.x)))) {\\n    if ((tmpvar_11.y < 0.0)) {\\n      if ((tmpvar_11.x >= 0.0)) {\\n        tmpvar_13 += 3.141593;\\n      } else {\\n        tmpvar_13 = (tmpvar_13 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_13 = (sign(tmpvar_11.x) * 1.570796);\\n  };\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (tmpvar_13 * 0.1591549);\\n  tmpvar_16.y = tmpvar_12;\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = ((tmpvar_16.x * 2.0) + q11);\\n  tmpvar_17.y = ((0.3 * log(tmpvar_12)) + q12);\\n  vec2 tmpvar_18;\\n  tmpvar_18 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_17 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  vec2 tmpvar_19;\\n  tmpvar_19 = (texsize.zw * 3.0);\\n  vec3 tmpvar_20;\\n  tmpvar_20 = ((2.0 * (\\n    (texture (sampler_blur1, (tmpvar_18 + (vec2(1.0, 0.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (tmpvar_18 - (vec2(1.0, 0.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)));\\n  vec3 tmpvar_21;\\n  tmpvar_21 = ((2.0 * (\\n    (texture (sampler_blur1, (tmpvar_18 + (vec2(0.0, 1.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (tmpvar_18 - (vec2(0.0, 1.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)));\\n  vec2 tmpvar_22;\\n  tmpvar_22.x = tmpvar_20.x;\\n  tmpvar_22.y = tmpvar_21.x;\\n  mirror_uv_3 = (tmpvar_18 + ((tmpvar_22 * texsize.zw) * 4.0));\\n  ret_4 = ((mix (ret_4, vec3(1.0, 1.0, 1.0), \\n    ((((texture (sampler_blur1, mirror_uv_3).xyz * scale1) + bias1).x * (1.0 - (\\n      (texture (sampler_blur2, mirror_uv_3).xyz * scale2)\\n     + bias2).x)) * (pow (hue_shader, vec3(4.0, 4.0, 4.0)) * 1.4))\\n  ) * texture (sampler_main, mirror_uv_3).xxx) + ((\\n    (1.0 - texture (sampler_main, mirror_uv_3).x)\\n   * \\n    ((texture (sampler_blur1, mirror_uv_3).xyz * scale1) + bias1)\\n  .x) * vec3(3.0, 3.0, 3.0)));\\n  vec2 tmpvar_23;\\n  tmpvar_23.x = tmpvar_20.x;\\n  tmpvar_23.y = tmpvar_21.x;\\n  mirror_uv_3 = (mirror_uv_3 - ((tmpvar_23 * texsize.zw) * 24.0));\\n  dx_2 = ((2.0 * (\\n    (texture (sampler_blur1, (mirror_uv_3 + (vec2(1.0, 0.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (mirror_uv_3 - (vec2(1.0, 0.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)));\\n  dy_1 = ((2.0 * (\\n    (texture (sampler_blur1, (mirror_uv_3 + (vec2(0.0, 1.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (mirror_uv_3 - (vec2(0.0, 1.0) * tmpvar_19))).xyz * scale1)\\n   + bias1)));\\n  vec2 tmpvar_24;\\n  tmpvar_24.x = -(dx_2.y);\\n  tmpvar_24.y = dy_1.y;\\n  vec2 tmpvar_25;\\n  tmpvar_25 = (tmpvar_24 * 0.25);\\n  vec3 tmpvar_26;\\n  tmpvar_26 = mix (ret_4, vec3(1.0, 1.0, 1.0), (mix (vec3(1.0, 0.7, 0.2), vec3(0.15, 0.0, 0.5), vec3(\\n    ((((\\n      ((mirror_uv_3.x * 0.8) - mirror_uv_3.y)\\n     + 0.75) + tmpvar_25.x) + tmpvar_25.y) - 0.1)\\n  )) * texture (sampler_main, mirror_uv_3).y));\\n  vec2 tmpvar_27;\\n  vec2 tmpvar_28;\\n  tmpvar_28 = ((0.5 + (\\n    (uv - 0.5)\\n   * aspect.wz)) - vec2(0.5, 0.5));\\n  vec2 tmpvar_29;\\n  tmpvar_29.x = ((q4 * tmpvar_28.x) - (q3 * tmpvar_28.y));\\n  tmpvar_29.y = ((q3 * tmpvar_28.x) + (q4 * tmpvar_28.y));\\n  tmpvar_27 = (vec2(0.5, 0.5) + tmpvar_29);\\n  mirror_uv_3 = tmpvar_27.yx;\\n  vec2 tmpvar_30;\\n  tmpvar_30 = (vec2(1.0, 0.0) * texsize.zw);\\n  dx_2 = ((2.0 * texture (sampler_main, (tmpvar_27.yx + tmpvar_30)).xyz) - (2.0 * texture (sampler_main, (tmpvar_27.yx - tmpvar_30)).xyz));\\n  vec2 tmpvar_31;\\n  tmpvar_31 = (vec2(0.0, 1.0) * texsize.zw);\\n  dy_1 = ((2.0 * texture (sampler_main, (tmpvar_27.yx + tmpvar_31)).xyz) - (2.0 * texture (sampler_main, (tmpvar_27.yx - tmpvar_31)).xyz));\\n  vec2 tmpvar_32;\\n  tmpvar_32.x = dx_2.z;\\n  tmpvar_32.y = dy_1.z;\\n  vec3 tmpvar_33;\\n  tmpvar_33 = mix (tmpvar_26, vec3(0.9, 0.9, 1.0), vec3((1.0 - texture (sampler_main, (tmpvar_27.yx - tmpvar_32)).z)));\\n  ret_4 = tmpvar_33;\\n  vec4 tmpvar_34;\\n  tmpvar_34.w = 1.0;\\n  tmpvar_34.xyz = tmpvar_33;\\n  ret = tmpvar_34.xyz;\\n }"}')},"./presets/converted/Flexi - infused with the spiral.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1.03,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":0.107,"zoomexp":4.28632,"fshader":1,"warp":0.01743,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":1,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.789,"ang":0.6283,"tex_zoom":1.17257,"r":0,"g":1,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"rad = 0.65 + bass*0.1;\\n\\nan = an*0.99 + (bass-treb)*0.1;\\nang = an*0.1 + 0.6;"},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.40271,"tex_zoom":2.23888,"g":1,"b":1,"r2":0.08,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"rad":1.21525,"tex_ang":2.57611,"tex_zoom":0.55595,"g":1,"b":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":34,"x":0.99,"y":0.99,"rad":0.02558,"r":0,"g":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"r":0,"g":0.04,"b":0,"a":0.99},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .07;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 180;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nmy_x = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4+(t7+1)*t8);\\nmy_y = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4+(t7+1)*t8);\\nmy_z = sin(sample*pi*n)*rd;\\n\\n\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 0.65;\\n\\nw1 = q2;\\nw2 = q3;\\nw3 = q4;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nb = -z3 + 0.5;\\nb = min(1,max(0,b))*0.5;\\nr = 1-b*2\\n//b = (1 - r)*0.1;\\n//a =  7/(d*16) - 0.1;"},{"baseVals":{"samples":445,"sep":4,"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"a":0.99,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .09;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 160;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nxx = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\\nyy = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\\nzz = sin(sample*pi*n)*rd;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = -d*t5;\\ns1 = sin(t2*1+w);\\ns2 = sin(t3*1+w);\\ns3 = sin(t4*1+w);\\nc1 = cos(t2*1+w);\\nc2 = cos(t3*1+w);\\nc3 = cos(t4*1+w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 0.75;\\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = sample*pi*4-2*time;\\nc=1.6;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\na = 1-(z + a)/2;\\n"},{"baseVals":{"sep":4,"scaling":0.09348,"smoothing":1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"s8 = sample*383;\\n\\ns = 100;//0.3;\\nxx = sin(sample*s);//((sample*343)%7 - 3.5)*s;\\nzz = cos(sample*s);//((sample*49)%7 - 3.5)*s;\\nyy = (sample-0.5);//((sample*7)%7 - 3.5)*s;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1/d;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = 1+0*(d)*(t6);//(sample*sin(time*0.3)*0.02-1);\\ns1 = sin(t2*w);\\ns2 = sin(t3*w);\\ns3 = sin(t4*w);\\nc1 = cos(t2*w);\\nc2 = cos(t3*w);\\nc3 = cos(t4*w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 2;\\nzoom = 0.3*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*13+t5*20;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(-z,10)*1.0+0.0;"},{"baseVals":{"samples":484,"sep":4,"usedots":1,"scaling":9.94125,"smoothing":1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"s8 = sample*383;\\n\\ns = 0.25;\\nxx = ((sample*(465))%15 - 8)*s*2;\\nyy = ((sample*31)%31 - 16)*s;\\nzz = 0;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nw = 1;\\n\\ns1 = sin(t2*1);\\ns2 = sin(t3*0);\\ns3 = sin(t4*1);\\nc1 = cos(t2*1);\\nc2 = cos(t3*0);\\nc3 = cos(t4*1);\\n\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 500;\\nzoom = 0.05*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*5+t5;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(z,5);"}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"q1 = 0;\\nv = 0.4;\\nj1 = j1*0.95 + sqr(bass*4)*v;\\nj2 = j2*0.95 + sqr(mid*4)*v;\\nj3 = j3*0.95 + sqr(treb*4)*v;\\n\\nn = n + j1*0.0052;\\nn1 = n1 + j2*0.0052;\\nn2 = n2 + j3*0.0052;\\n\\n\\nq2 = n*0.01;\\nq3 = n1*0.01;\\nq4 = n2*0.01;\\n\\nk = k*0.99 + sqr(mid_att*2);\\nq5 = k*0.00;\\n\\nzoom = 1.0016;\\nwarp = 0;\\n\\nrot = -0.00;\\n\\nq9 = aspectx;\\nq10 = aspecty;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur2, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2)).z;\\n  tmpvar_3.y = -(((\\n    (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\\n   + bias2)).z);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv + ((tmpvar_3 * texsize.zw) * 60.0));\\n  vec2 x_5;\\n  x_5 = (tmpvar_4 - uv);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, uv);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_1.z = (((texture (sampler_main, tmpvar_4).z + \\n    (((tmpvar_6.z - (\\n      (tmpvar_7.xyz * scale1)\\n     + bias1).z) * 200.0) * sqrt(dot (x_5, x_5)))\\n  ) * 0.96) - 0.02);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_8.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  ret_1.y = ((texture (sampler_main, (uv_orig + \\n    ((tmpvar_8 * texsize.zw) * 6.0)\\n  )).y + (\\n    (tmpvar_6.y - ((tmpvar_7.xyz * scale1) + bias1).y)\\n   * 0.1)) - 0.016);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_1;\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.z;\\n  tmpvar_5.y = tmpvar_4.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.y;\\n  tmpvar_6.y = tmpvar_4.y;\\n  ret_1 = (mix (vec3(0.2, 0.0, 0.1), vec3(0.8, 0.6, 0.0), texture (sampler_main, (uv - \\n    (tmpvar_5 * 0.2)\\n  )).yyy) * ((\\n    (-(tmpvar_3.y) + tmpvar_4.y)\\n   + 1.0) + (\\n    (-(tmpvar_3.z) + tmpvar_4.z)\\n   * 2.0)));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = mix (mix (ret_1, vec3(0.2, 0.0, 0.4), vec3((\\n    ((texture (sampler_blur1, (uv - (tmpvar_6 * 0.04))).xyz * scale1) + bias1)\\n  .x * 1.4))), vec3(1.0, 0.9, 0.8), texture (sampler_main, uv).zzz);\\n  ret_1 = tmpvar_7;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = tmpvar_7;\\n  ret = tmpvar_8.xyz;\\n }"}')},"./presets/converted/Flexi - mindblob [shiny mix].json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":2.789,"wave_scale":0.292,"wave_smoothing":0,"wave_mystery":0.12,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"zoom":0.9901,"warp":0.01,"wave_g":0,"ob_size":0,"ob_r":0.2,"ob_a":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"rad":0.71426,"tex_ang":0.12566,"tex_zoom":1.51878,"a":0,"g2":0,"border_r":0.1,"border_g":0,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"x":0.43,"y":0.42,"rad":0.15799,"ang":0.1885,"tex_zoom":0.87865,"r":0,"g":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q4;\\ny = q8;"},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"decay = 1;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + xx1-xx2;\\ny1 = 0.5 + yy1;\\n\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 18;\\ngrav = 1;\\nresist = 0.2;\\nbounce = 0.9;\\ndt = 0.0003;\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1;\\nq2 = x2;\\nq3 = x3;\\nq4 = x4;\\n\\nq5 = y1;\\nq6 = y2;\\nq7 = y3;\\nq8 = y4;\\n\\n\\nzoom = 1.004;\\n\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);","pixel_eqs_eel":"dir = -q6*1 + asin(1)*1;\\n\\nb1 = 0.08; // distance\\nm1 = q5*45;//-0.6 + q5*200; // size\\nt1 = 0.5; // velocity\\n\\nxx = 0.5 + (q4-0.5)/aspectx;\\nyy = 1-(0.5 + (q8-0.5)/aspecty);\\n\\n\\nx1 = xx   +cos(dir+1.5708)*b1;\\ny1 = yy -sin(dir+1.5708)*b1;\\n\\nx2 = xx   -cos(dir+1.5708)*b1;\\ny2 = yy +sin(dir+1.5708)*b1;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\n\\nsi3 = -pow(q5,3)*00;\\n\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*2/aspectx;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*2/aspecty;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_3.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - ((tmpvar_3 * texsize.zw) * 0.5));\\n  ret_1.x = texture (sampler_fw_main, tmpvar_4).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3).x)\\n   * 0.2) - 0.004));\\n  ret_1.y = ((texture (sampler_fw_main, uv_orig).y * 0.98) - 0.004);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 4.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_2.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).x;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = mix ((vec3(0.0, 0.0, 1.0) * texture (sampler_main, uv).x), vec3(1.0, 0.0, 0.0), texture (sampler_main, (uv - tmpvar_2)).yyy);\\n  ret = tmpvar_3.xyz;\\n }"}')},"./presets/converted/Flexi - mindblob mix.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.137,"warpscale":13.125,"zoom":0.99951,"warp":0.99213,"wave_y":0.04,"ob_size":0.015,"ob_r":0.1,"ob_g":0.25,"ob_a":1,"ib_size":0,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.02015,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nwave_a = 0;\\n// elastic thread code\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1*1.5;\\ndt = 0.03/fps;\\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\\nx2 = x2 + vx2; y2 = y2 + vy2;\\nx3 = x3 + vx3; y3 = y3 + vy3;\\nx4 = x4 + vx4; y4 = y4 + vy4;\\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\\nq9 = 1/aspectx;\\nq10 = 1/aspecty;\\nq11 = aspectx;\\nq12 = aspecty;\\nq13 = sqrt(vx4*vx4 + vy4*vy4);\\nq14 = atan2(vx4,vy4);\\nq15 = sin(q14);\\nq16 = cos(q14);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 my_uv_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q4;\\n  tmpvar_4.y = (1.0 - q8);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = -(q15);\\n  tmpvar_5.y = q16;\\n  vec2 domain_6;\\n  vec2 uv_rot_7;\\n  domain_6 = (uv - tmpvar_4);\\n  domain_6 = (domain_6 * aspect.xy);\\n  float tmpvar_8;\\n  tmpvar_8 = (1.0/((1.0 + exp(\\n    ((sqrt(dot (domain_6, domain_6)) - 0.07) * 50.0)\\n  ))));\\n  domain_6 = (domain_6 + ((tmpvar_5 * q13) * (aspect.wz * tmpvar_8)));\\n  float tmpvar_9;\\n  tmpvar_9 = sin(tmpvar_8);\\n  float tmpvar_10;\\n  tmpvar_10 = cos(tmpvar_8);\\n  uv_rot_7.x = ((tmpvar_10 * domain_6.x) - (tmpvar_9 * domain_6.y));\\n  uv_rot_7.y = ((tmpvar_9 * domain_6.x) + (tmpvar_10 * domain_6.y));\\n  uv_rot_7 = (uv_rot_7 * aspect.zw);\\n  uv_rot_7 = (uv_rot_7 + tmpvar_4);\\n  uv_1 = (clamp ((tmpvar_4 + \\n    ((uv_rot_7 - tmpvar_4) * mix (1.0, 4.0, tmpvar_8))\\n  ), 0.0, 1.0) + (texsize.zw * vec2(0.0, 0.15)));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = mix (uv_orig, uv_1, vec2(0.2, 0.2));\\n  uv_1 = tmpvar_11;\\n  vec2 tmpvar_12;\\n  tmpvar_12 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_13;\\n  tmpvar_13 = (((\\n    (texture (sampler_blur2, (tmpvar_11 + vec2(0.005, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (tmpvar_11 - vec2(0.005, 0.0))).xyz * scale2)\\n   + bias2)).x * tmpvar_12.x);\\n  float tmpvar_14;\\n  tmpvar_14 = (((\\n    (texture (sampler_blur2, (tmpvar_11 + vec2(0.0, 0.005))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (tmpvar_11 - vec2(0.0, 0.005))).xyz * scale2)\\n   + bias2)).x * tmpvar_12.y);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = tmpvar_13;\\n  tmpvar_15.y = tmpvar_14;\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (tmpvar_11 + vec2(0.005, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (tmpvar_11 - vec2(0.005, 0.0))).xyz * scale2)\\n   + bias2)).x * tmpvar_12.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (tmpvar_11 + vec2(0.0, 0.005))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (tmpvar_11 - vec2(0.0, 0.005))).xyz * scale2)\\n   + bias2)).x * tmpvar_12.y);\\n  ret_3.x = texture (sampler_fw_main, ((tmpvar_11 - (tmpvar_15 * 0.006)) + (tmpvar_16 * 0.003))).x;\\n  ret_3.x = (ret_3.x + ((ret_3.x - \\n    ((texture (sampler_blur3, tmpvar_11).xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_3.x = (ret_3.x + 0.004);\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = tmpvar_14;\\n  tmpvar_17.y = -(tmpvar_13);\\n  my_uv_2 = (uv_orig + ((tmpvar_17 * 0.05) * (1.2 - \\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\\n  .y)));\\n  ret_3.z = texture (sampler_fw_main, my_uv_2).z;\\n  vec2 x_18;\\n  x_18 = (my_uv_2 - uv_orig);\\n  ret_3.z = (ret_3.z + ((\\n    ((ret_3.z - ((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1).z) * sqrt(dot (x_18, x_18)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_12, tmpvar_12)\\n  )));\\n  ret_3.z = (ret_3.z * 0.85);\\n  ret_3.z = (ret_3.z + 0.008);\\n  vec2 tmpvar_19;\\n  tmpvar_19.x = -(tmpvar_14);\\n  tmpvar_19.y = tmpvar_13;\\n  my_uv_2 = (tmpvar_19 * 0.045);\\n  vec2 tmpvar_20;\\n  tmpvar_20.x = (((\\n    (texture (sampler_blur2, (tmpvar_11 + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (tmpvar_11 - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_12.x);\\n  tmpvar_20.y = (((\\n    (texture (sampler_blur2, (tmpvar_11 + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (tmpvar_11 - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_12.y);\\n  my_uv_2 = (my_uv_2 + (tmpvar_11 - (tmpvar_20 * 0.03)));\\n  ret_3.y = texture (sampler_fw_main, my_uv_2).y;\\n  ret_3.y = (ret_3.y + ((\\n    (ret_3.y - ((texture (sampler_blur3, my_uv_2).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.03));\\n  vec4 tmpvar_21;\\n  tmpvar_21.w = 1.0;\\n  tmpvar_21.xyz = ret_3;\\n  ret = tmpvar_21.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dx_3.x;\\n  tmpvar_10.y = dy_2.x;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (mix (ret_5, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv + ((tmpvar_10 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv).zzz);\\n  ret_5 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }"}')},"./presets/converted/Flexi - predator-prey-spirals.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.28,"decay":0.8,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"zoom":0.9901,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_g":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":39,"additive":1,"num_inst":126,"rad":0.06989,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"sides":41,"additive":1,"num_inst":239,"rad":0.06989,"tex_ang":0.62832,"r":0,"g":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"sides":43,"additive":1,"num_inst":32,"rad":0.06989,"tex_ang":0.62832,"r":0,"b":1,"g2":0,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"sides":14,"additive":1,"num_inst":127,"rad":0.0556,"tex_ang":0.62832,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"xx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.0001*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\nq4 = x4;\\nq8 = y4;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq10 = x1;\\nq11 = y1;\\nzoom = 1;\\nwarp = 0;\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\na = a*0.95 + q5;\\n\\ns = s*0.9 + a;\\nq3 = s*0.1;\\nmonitor = s;\\n\\nwave_a = 0;","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 + (y-0.5)*q2;\\nxx = q4;\\nyy = 1-q8;\\n\\ndx = 0; dy = 0;\\n\\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\\n\\nr = 0.1;\\nv = 20;\\nv2 = q5;\\ndx = (v*(sin(y-yy)*(d-r)-(x-xx)*(d-r/2)) + cos(dir)*v2)*(1.00-sigmoid(d-r,120));\\ndy = (-v*(sin(x-xx)*(d-r)+(y-yy)*(d-r/2)) -sin(dir)*v2)*(1.00-sigmoid(d-r,120));","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = mix (uv_orig, uv, vec2(2.0, 2.0));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 2.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (tmpvar_2 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_2 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (tmpvar_2 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_2 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (tmpvar_2 + ((tmpvar_6 * texsize.zw) * 8.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.y;\\n  tmpvar_8.y = tmpvar_5.y;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (tmpvar_2 + ((tmpvar_8 * texsize.zw) * 8.0));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.z;\\n  tmpvar_10.y = tmpvar_5.z;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (tmpvar_2 + ((tmpvar_10 * texsize.zw) * 8.0));\\n  ret_1.x = (texture (sampler_main, tmpvar_7).x - ((texture (sampler_main, tmpvar_7).xyz - \\n    ((texture (sampler_blur3, tmpvar_7).xyz * scale3) + bias3)\\n  ).x * 0.02));\\n  ret_1.y = (texture (sampler_main, tmpvar_9).y - ((texture (sampler_main, tmpvar_9).xyz - \\n    ((texture (sampler_blur3, tmpvar_9).xyz * scale3) + bias3)\\n  ).y * 0.02));\\n  ret_1.z = (texture (sampler_main, tmpvar_11).z - ((texture (sampler_main, tmpvar_11).xyz - \\n    ((texture (sampler_blur3, tmpvar_11).xyz * scale3) + bias3)\\n  ).z * 0.02));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.04));\\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.1) - 0.02));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 8.0);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q4;\\n  tmpvar_4.y = (1.0 - q8);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_2.y;\\n  tmpvar_5.y = tmpvar_3.y;\\n  vec2 x_6;\\n  x_6 = ((uv - (tmpvar_5 * 2.0)) - tmpvar_4);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_2.x;\\n  tmpvar_7.y = tmpvar_3.x;\\n  vec2 x_8;\\n  x_8 = ((uv - (tmpvar_7 * 2.0)) - tmpvar_4);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_2.z;\\n  tmpvar_9.y = tmpvar_3.z;\\n  vec2 x_10;\\n  x_10 = ((uv - (tmpvar_9 * 2.0)) - tmpvar_4);\\n  vec3 tmpvar_11;\\n  tmpvar_11.x = (1.1 - pow (sqrt(\\n    dot (x_8, x_8)\\n  ), 0.2));\\n  tmpvar_11.y = (1.1 - pow (sqrt(\\n    dot (x_6, x_6)\\n  ), 0.2));\\n  tmpvar_11.z = (1.1 - pow (sqrt(\\n    dot (x_10, x_10)\\n  ), 0.2));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ((tmpvar_11 * texture (sampler_main, uv).xyz) * 2.4);\\n  ret = tmpvar_12.xyz;\\n }"}')},"./presets/converted/Flexi - smashing fractals [acid etching mix].json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":2,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":1.311,"warpscale":8.311,"zoomexp":5.20652,"warp":0.13291,"wave_y":0.04,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07493,"tex_zoom":0.73458,"g":1,"g2":0,"border_a":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q4;\\ny = q8;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.7,"y":0.3,"rad":0.6623,"ang":2.45044,"tex_zoom":0.74934,"g":0.1,"b":0.1,"r2":1,"g2":0.1,"b2":0.1,"a2":1,"border_a":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.43,"y":0.6,"rad":1.16781,"ang":5.96903,"tex_zoom":0.67165,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g":0.5,"b":0.5,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":7.7518,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;","point_eqs_eel":"d = d*0.85 + (value1)*1;\\n\\nx = 0.5 + d*sample*(1-sample);\\ny = 0.9 - sample*0.8;"},{"baseVals":{"usedots":1,"thick":1,"scaling":5.92556,"smoothing":0,"g":0,"b":0,"a":0.66,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\n\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"},{"baseVals":{"thick":1,"scaling":5.92556,"smoothing":0,"r":0.65,"g":0.45,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*200)*d*0.05;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"decay = 0.25;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1));\\ny1 = max(0,min(1,y1));\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 50;\\ngrav = 2;\\nresist = 5;\\nbounce = 0.75;\\ndt = 0.00015*60/fps;\\n\\nspx2 = (x1+x3-2*x2)*spring;\\nspy2 = (y1+y3-2*y2)*spring;\\nspx3 = (x2+x4-2*x3)*spring;\\nspy3 = (y2+y4-2*y3)*spring;\\nspx4 = (x3-x4)*spring;\\nspy4 = (y3-y4)*spring;\\n\\nvx2 = vx2*(1-resist*dt) + dt*(spx2);\\nvy2 = vy2*(1-resist*dt) + dt*(spy2-grav);\\nvx3 = vx3*(1-resist*dt) + dt*(spx3);\\nvy3 = vy3*(1-resist*dt) + dt*(spy3-grav);\\nvx4 = vx4*(1-resist*dt) + dt*(spx4);\\nvy4 = vy4*(1-resist*dt) + dt*(spy4-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0.1),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,0.9),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0.1),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,0.9),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0.1),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,0.9),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1;\\nq2 = x2;\\nq3 = x3;\\nq4 = x4;\\n\\nq5 = y1;\\nq6 = y2;\\nq7 = y3;\\nq8 = y4;\\n\\nmonitor = ry4;\\n\\nzoom = 1.0004;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur2, \\n    (uv + vec2(0.005, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.005, 0.0))\\n  ).xyz * scale2) + bias2)).y;\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.005))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.005))\\n  ).xyz * scale2) + bias2)).y;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3;\\n  tmpvar_5.y = tmpvar_4;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (tmpvar_5 * 0.01));\\n  ret_2.y = texture (sampler_fc_main, (tmpvar_6 - floor(tmpvar_6))).y;\\n  ret_2.y = (ret_2.y + ((ret_2.y - \\n    ((texture (sampler_blur3, (tmpvar_6 - floor(tmpvar_6))).xyz * scale3) + bias3)\\n  .y) * 0.1));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = floor(uv);\\n  ret_2.y = (ret_2.y + (0.006 - (\\n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\\n  .x * 5.0)));\\n  ret_2.y = ret_2.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = -(tmpvar_4);\\n  tmpvar_8.y = tmpvar_3;\\n  my_uv_1 = (tmpvar_8 * 0.05);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (((texture (sampler_blur2, \\n    (uv + vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2)).z;\\n  tmpvar_9.y = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2)).z;\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_9 * 0.005)));\\n  ret_2.z = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_2.z = (ret_2.z + ((ret_2.z - \\n    ((texture (sampler_blur3, (my_uv_1 - floor(my_uv_1))).xyz * scale3) + bias3)\\n  .z) * 0.13));\\n  ret_2.z = (ret_2.z * 0.95);\\n  ret_2.z = (ret_2.z + ((0.03 - \\n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\\n  .x) - (texture (sampler_main, \\n    (my_uv_1 - floor(my_uv_1))\\n  ).y * 0.05)));\\n  ret_2.x = (texture (sampler_main, uv_orig).x - 0.3);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_2;\\n  ret = tmpvar_10.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.y;\\n  tmpvar_5.y = tmpvar_4.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + (tmpvar_5 * 0.1));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_main, uv);\\n  ret_1 = (((\\n    ((texture (sampler_blur2, tmpvar_6).xyz * scale2) + bias2)\\n  .x * \\n    clamp ((1.0 - tmpvar_7.z), 0.0, 1.0)\\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\\n  ret_1 = (mix (ret_1, (\\n    pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0))\\n   * 1.4), vec3((\\n    (texture (sampler_main, tmpvar_6).x * 0.8)\\n   + \\n    ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1)\\n  .x))) * clamp ((1.0 - \\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).y * 4.0)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_3.y;\\n  tmpvar_8.y = tmpvar_4.y;\\n  vec3 tmpvar_9;\\n  vec3 tmpvar_10;\\n  tmpvar_10 = pow (hue_shader, vec3(8.0, 8.0, 8.0));\\n  tmpvar_9 = mix (mix (ret_1, vec3(1.0, 1.0, 1.0), (\\n    (tmpvar_10 * texture (sampler_main, clamp ((uv - (tmpvar_8 * 0.04)), 0.0, 1.0)).z)\\n   * 1.2)), (tmpvar_10.zxy * 1.8), tmpvar_7.yyy);\\n  ret_1 = tmpvar_9;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_9;\\n  ret = tmpvar_11.xyz;\\n }"}')},"./presets/converted/Flexi - truly soft piece of software - this is generic texturing (Jelly) .json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.24298,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0,"ob_g":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.01,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0.05,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.80013,"ang":4.64954,"tex_zoom":1.24471,"g":1,"b":1,"r2":1,"b2":1,"a2":0.77,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0.;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0.;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"zoom =1;// 0.999;\\nwarp = 0;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.02 * aspect.zw);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    ((uv + (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv + (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv - (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur2, \\n    ((uv + (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv + (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv - (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.x;\\n  tmpvar_8.y = -(tmpvar_4.x);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((uv - (tmpvar_7 * vec2(0.01, 0.01))) - (tmpvar_8 * -0.02));\\n  ret_2.y = texture (sampler_fc_main, (tmpvar_9 - floor(tmpvar_9))).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - tmpvar_6.y)\\n   * 0.02) + 0.005));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = tmpvar_5.x;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_5.z;\\n  tmpvar_11.y = -(tmpvar_4.z);\\n  my_uv_1 = ((uv - (tmpvar_10 * vec2(0.01, 0.01))) - (tmpvar_11 * -0.02));\\n  ret_2.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\\n  ret_2.x = (ret_2.x + ((\\n    (ret_2.x - tmpvar_6.x)\\n   * 0.02) + 0.005));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_4.z;\\n  tmpvar_12.y = tmpvar_5.z;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.y;\\n  tmpvar_13.y = -(tmpvar_4.y);\\n  my_uv_1 = ((uv - (tmpvar_12 * vec2(0.01, 0.01))) - (tmpvar_13 * -0.02));\\n  ret_2.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_2.z = (ret_2.z + ((\\n    (ret_2.z - tmpvar_6.z)\\n   * 0.02) + 0.005));\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = ret_2;\\n  ret = tmpvar_14.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.zxy, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},"./presets/converted/Flexi, fishbrain, Geiss + Martin - tokamak witchery.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":1.004,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"additive":1,"num_inst":2,"x":0.49,"rad":0.11589,"tex_zoom":4.36077,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0.3,"b":0.75},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"r":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1,"g":0.5,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1,"r":0.4,"g":0,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nwarp = 0;\\nzoom = 1;\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nob_r = (bb-mn)/(mx-mn);\\nob_b = (mm-mn)/(mx-mn);\\nob_g = (tt-mn)/(mx-mn);","pixel_eqs_eel":"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = 0.05*sin(dist*0.05);\\ndx = mult*sin(ang2*2-1.5);\\ndy = mult*cos(ang2*2-1.5);","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  tmpvar_1.xyz = ((texture (sampler_main, clamp (\\n    (uv - (((vec2(0.0, 64.0) * texsize.zw) * dot (\\n      (tmpvar_2.xyz - 0.35)\\n    , vec3(0.32, 0.49, 0.29))) * (dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) - 0.4)))\\n  , 0.0, 1.0)).xyz - 0.0011) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy)\\n  ) - 0.5) * 0.0038).xyz);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    ((uv - 0.5) * 2.0)\\n  )) - tmpvar_4);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((0.04 / sqrt(\\n    dot (uv1_1, uv1_1)\\n  )), 0.0, 1.0);\\n  uv1_1 = ((0.3 * cos(\\n    (uv1_1 * 12.0)\\n  )) - (9.0 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (tmpvar_5 + ((texture (sampler_main, uv).xyz * 12.0) * vec3(clamp (\\n    (0.04 / sqrt(dot (uv1_1, uv1_1)))\\n  , 0.0, 1.0))));\\n  ret = tmpvar_6.xyz;\\n }"}')},"./presets/converted/Flexi, martin + geiss - dedicated to the sherwin maxawow.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.99996,"g":1,"b":1,"r2":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*0.618)*0.2;\\ny = 0.5+cos(time*1.618)*0.2;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"g":1,"b":1,"g2":0,"b2":1,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*2.618)*0.3;\\ny = 0.5+cos(time*3.14)*0.3;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\\n"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.9998,"g":1,"b":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(-time*2.618)*0.4;\\ny = 0.5+cos(-time*1.14)*0.4;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.16188,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"scaling":25.12601,"smoothing":1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//zoom = 0.99;\\nib_r = sin(time*1.25*4)*0.3+0.7;\\nib_g = sin(time*4)*0.3+0.3;\\nib_b = sin(time/3*4)*0.5+0.5;\\nwave_r = 1- ib_r;\\nwave_g = 1- ib_g;\\nwave_b = 1- ib_b;\\n//wave_mystery = -1+bass/2;\\nwave_x = 0.5+sin(time*3)*0.3;\\nwave_y = 0.5+cos(time*2.187)*0.3;","pixel_eqs_eel":"r = bass/4;\\ncx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = (bass)*(r*r-d*d)*0.3;\\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(mid)*(r*r-d*d)*0.3;\\nx2 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny2 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(treb)*(r*r-d*d)*0.3;\\nx3 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny3 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ndx = x1+x2+x3;\\ndy = y1+y2+y3;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 2.0)) + rand_frame.xy);\\n  uv_1 = (uv + ((texture (sampler_noise_lq, tmpvar_2).xy - 0.5) * texsize.zw));\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = bass;\\n  tmpvar_3.y = treb;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_main, (uv_1 + (\\n    (texture (sampler_main, (mix (uv_1, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.4)\\n   * \\n    (-0.004 + (0.04 * clamp ((tmpvar_3 - 1.0), 0.0, 1.0)))\\n  ))).xyz - (0.0008 + (\\n    (texture (sampler_noise_lq, tmpvar_2) - 0.5)\\n   * 0.02)).xyz);\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    ((uv - 0.5) * 2.0)\\n  )) - tmpvar_4);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((0.04 / sqrt(\\n    dot (uv1_1, uv1_1)\\n  )), 0.0, 1.0);\\n  uv1_1 = ((0.3 * cos(\\n    (uv1_1 * 12.0)\\n  )) - (9.0 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (tmpvar_5 + ((texture (sampler_main, uv).xyz * 12.0) * vec3(clamp (\\n    (0.04 / sqrt(dot (uv1_1, uv1_1)))\\n  , 0.0, 1.0))));\\n  ret = tmpvar_6.xyz;\\n }"}')},"./presets/converted/Fumbling_Foo + En D & Martin - Mandelverse.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":54,"textured":1,"rad":0.49138,"ang":1.5708,"tex_ang":3.14159,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"r":0,"g":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=q3;\\ny=1-q4;\\n\\nr = abs(q20);\\ng = abs(q21);\\nb = abs(q22);\\n\\nrad = .1*mid;"},{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"r":0,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=q5;\\ny=1-q6;\\n\\nrad = .2*bass;"},{"baseVals":{"enabled":1,"sides":54,"rad":0.08195,"r":0,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=q1;\\ny=1-q2;\\n\\nr = (q23);\\ng = (q24);\\nb = (q25);\\na = q19;\\n\\nrad = bass*.1;"}],"waves":[{"baseVals":{"sep":51,"spectrum":1,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\\ny = rand(1001)*.001;\\n\\ntm = time*.5 + sample*2;\\n\\nr = .5 + .5*sin(tm*1.132);\\ng = .5 + .5*sin(tm*1.121);\\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"sep":51,"spectrum":1,"usedots":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\\ny = rand(1001)*.001;\\n\\ntm = time*.5 + sample*2;\\n\\nr = .5 + .5*sin(tm*1.132);\\ng = .5 + .5*sin(tm*1.121);\\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"sep":51,"usedots":1,"thick":1,"scaling":1.32735,"smoothing":0.82,"b":3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\\ny = rand(1001)*.001;\\n\\ntm = time*.5 + sample*2;\\n\\nr = .5 + .5*sin(tm*1.132);\\ng = .5 + .5*sin(tm*1.121);\\nb = .5 + .5*sin(tm*1.187);"},{"baseVals":{"enabled":1,"sep":51,"usedots":1,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\\ny = rand(1001)*.001;\\n\\ntm = time*.5 + sample*2;\\n\\nr = .5 + .5*sin(tm*1.132);\\ng = .5 + .5*sin(tm*1.121);\\nb = .5 + .5*sin(tm*1.187);"}],"init_eqs_eel":"//******** INITIALIZATION *********\\n//---------- some global vars, do not change -------------\\navg = 0.01;\\nq7 = .25; //MyZoom\\nq8 =  rand(2.0)-1.0; //fractal modifier\\n//q8 = 1; //#\\nq16 = 1 + rand(2); //Tele ; rather fish eye\\n//q16 = 1; //#\\nq18 = rand(0.8)+.1; //brightness balance back/front\\nq30 = 1; //logarithmic Z-Dist storage; unused\\nq31 =128;\\nstart = 1; travel = 0; RotZ = 0; look = 0; slow = 0; t0 = time+3; lampx = .5; lampy = .5;\\ncran0 = rand(1);\\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; ); \\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; ); \\ntrelx = 0;  trely = 0; trelz = 0;\\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\\n\\n//Find random starting point\\nwhile (exec2(\\n  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;\\n  PosX = rand(5)-2;   PosY = rand(5)-2;   PosZ = rand(5)-2; \\n\\n//  PosX = 3.3; PosY = 2; PosZ = -2; ran1 = 0; ran2 = 0; ran3 = 0; //#\\n\\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); \\n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\\n\\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.001;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.05;\\n  ,(dist < 0.6)*(len > 30)));\\n,(dist < .06))); //end while","frame_eqs_eel":"fps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25)); \\ndec_s = 1-.06*30/fps_;\\nbeat = (time >  t0+3); t0 = if(beat, time, t0);\\n\\nspeed = min(0.2,dist_-.02) * (1+2*avg) *(1-slow*.0)*.7/q7; //#\\nds = ds * dec_s + (1-dec_s)*speed*.25/fps_; \\nRotZ = if (RotZ==0,beat*(rand(100)<20*travel)*(rand(10)/10-.3),\\n                   bnot(beat*(rand(100)<30))*RotZ);\\nslow = if (bnot(slow), beat*(rand(1000*avg)<6), bnot(beat*(rand(100)<50)));\\nlook = if (bnot(look), beat*(rand(1000*speed)<12), bnot(beat*(rand(100)<50)));\\n\\n//Lamp View\\nlx = if (beat,rand(150)/200+.15,lx);\\nly = if (beat,rand(150)/200+.15,ly);\\nlampx = lampx * dec_s + (1-dec_s)*if (look,lx,0.5);\\nlampy = lampy * dec_s + (1-dec_s)*if (look,ly,0.5);\\nq1 = lampx; q2 = lampy;\\n\\n//Position \\nDirX= reg26; DirY= reg27; DirZ = reg28;\\nPosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ; \\nq4 = PosX; q5 = PosY; q6 = PosZ;\\n\\nangchg = (.2-dist_)*(dist_ < .2)*2;\\ntravel = if (angchg > 0,0,travel+ds);\\nv1 = v1 * dec_s + (1-dec_s)* RotZ * ds;\\nv2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;\\nv3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + 2*v1*sin(time*.1));\\n//v2 = .008;\\n//push old RotMat\\nreg30 =reg20; reg31 =reg21; reg32 =reg22; \\nreg33 =reg23; reg34 =reg24; reg35 =reg25; \\nreg36 =reg26; reg37 =reg27; reg38 =reg28; \\n\\nn = 0; avg = 0;\\nloop (5,\\n  n = n+1;\\n  //new Rot. Mat for infinitesimal angles\\n  ran1 = rand(100)/100;\\n  ran2 = rand(100)/200-.25;\\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); \\n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\\n\\n  //pop old RotMat\\n  reg20 =reg30; reg21 =reg31; reg22 =reg32; \\n  reg23 =reg33; reg24 =reg34; reg25 =reg35; \\n  reg26 =reg36; reg27 =reg37; reg28 =reg38; \\n\\n  //Multiply new RotMat by old one\\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\\n\\n  reg20 =q20; reg21 =q21; reg22 =q22;\\n  reg23 =q23; reg24 =q24; reg25 =q25;\\n  reg26 =q26; reg27 =q27; reg28 =q28;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.002;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.1;\\n  ,(dist < 0.6)*(len > 30)));\\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\\n  avg = avg+abs(megabuf(n)/5);\\n); //end loop 5\\n\\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\\n\\nxslope = min(max(2/avg*(megabuf(1)-megabuf(3)),-3),3);\\nyslope = min(max(2/avg*(megabuf(4)-megabuf(2)),-3),3);\\nmonitor = avg;\\ndist_ = dist_*dec_s + (1-dec_s)*dist;\\n\\nq10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv\\nq14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + 1.0/255 + start*.05; \\n//q15 = sign(4*avg - 1)*pow(abs(4*avg - 1), 1.25); // 500*ds*q7; // + ( sign(v1)*sqrt(abs(v1)) + sign(v2)*sqrt(abs(v2)) + sign(v3)*sqrt(abs(v3)) )\\nq15 = 4*avg - 1.4;\\nq19 = .6 + .4*sin(time*.02+cran0*6); //brightness backgd\\nstart = start * .9;\\nq11 = v1; q12 = v2; q13 = v3;\\n//forward comp. of Rotation\\n\\nmonitor = 3.333*q15;","pixel_eqs_eel":"warp = 0.0; zoom = 1; dx = -q12/q16*(1+0*pow(x-.5,2)); dy = q13/q16*(1+0*pow(y-.5,2)); rot =q11;","warp":"float sustain;\\nfloat xlat_mutabledist;\\nfloat xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\nvec3 xlat_mutableuv2;\\n shader_body { \\n  mat3 tmpvar_1;\\n  tmpvar_1[uint(0)].x = q20;\\n  tmpvar_1[uint(0)].y = q23;\\n  tmpvar_1[uint(0)].z = q26;\\n  tmpvar_1[1u].x = q21;\\n  tmpvar_1[1u].y = q24;\\n  tmpvar_1[1u].z = q27;\\n  tmpvar_1[2u].x = q22;\\n  tmpvar_1[2u].y = q25;\\n  tmpvar_1[2u].z = q28;\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  tmpvar_2.z = q6;\\n  sustain = (0.92 + (q14 * 1.5));\\n  vec2 uv_3;\\n  vec3 ret_4;\\n  uv_3 = (((uv - 0.5) * (1.0 - \\n    (q10 / (1.0 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z))\\n  )) + 0.5);\\n  xlat_mutableuv1 = (((uv_orig - 0.5) * aspect.xy) * q16);\\n  vec4 tmpvar_5;\\n  tmpvar_5 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = tmpvar_5.xyz;\\n  if ((tmpvar_5.y > 0.1)) {\\n    vec3 tmpvar_7;\\n    tmpvar_7 = (tmpvar_5.xyz - vec3(0.5, 0.5, 0.5));\\n    vec4 nb2_8;\\n    vec4 nb_9;\\n    vec2 tmpvar_10;\\n    tmpvar_10 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 - texsize.zw)).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_9.x = (1.0 - (tmpvar_10.y + (0.03125 * \\n      (tmpvar_10.x - 0.505)\\n    )));\\n    vec2 tmpvar_11;\\n    tmpvar_11 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(1.0, -1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_9.y = (1.0 - (tmpvar_11.y + (0.03125 * \\n      (tmpvar_11.x - 0.505)\\n    )));\\n    vec2 tmpvar_12;\\n    tmpvar_12 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 + texsize.zw)).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_9.z = (1.0 - (tmpvar_12.y + (0.03125 * \\n      (tmpvar_12.x - 0.505)\\n    )));\\n    vec2 tmpvar_13;\\n    tmpvar_13 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(-1.0, 1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_9.w = (1.0 - (tmpvar_13.y + (0.03125 * \\n      (tmpvar_13.x - 0.505)\\n    )));\\n    vec2 tmpvar_14;\\n    tmpvar_14 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(0.0, -1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_8.x = (1.0 - (tmpvar_14.y + (0.03125 * \\n      (tmpvar_14.x - 0.505)\\n    )));\\n    vec2 tmpvar_15;\\n    tmpvar_15 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(1.0, 0.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_8.y = (1.0 - (tmpvar_15.y + (0.03125 * \\n      (tmpvar_15.x - 0.505)\\n    )));\\n    vec2 tmpvar_16;\\n    tmpvar_16 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(0.0, 1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_8.z = (1.0 - (tmpvar_16.y + (0.03125 * \\n      (tmpvar_16.x - 0.505)\\n    )));\\n    vec2 tmpvar_17;\\n    tmpvar_17 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(-1.0, 0.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_8.w = (1.0 - (tmpvar_17.y + (0.03125 * \\n      (tmpvar_17.x - 0.505)\\n    )));\\n    vec4 tmpvar_18;\\n    tmpvar_18 = min (nb_9, nb2_8);\\n    nb_9.zw = tmpvar_18.zw;\\n    nb_9.xy = min (tmpvar_18.xy, tmpvar_18.zw);\\n    vec2 tmpvar_19;\\n    tmpvar_19 = (0.003472222 * floor((\\n      (288.0 * texture (sampler_pc_main, uv_3).yz)\\n     + vec2(0.5, 0.5))));\\n    vec2 tmpvar_20;\\n    tmpvar_20.x = (tmpvar_7.x * abs(tmpvar_7.y));\\n    tmpvar_20.y = (abs(tmpvar_7.x) * tmpvar_7.y);\\n    xlat_mutabledist = (min (min (nb_9.x, nb_9.y), (1.0 - \\n      (tmpvar_19.y + (0.03125 * (tmpvar_19.x - 0.505)))\\n    )) + (0.01 * tmpvar_20)).x;\\n  } else {\\n    xlat_mutabledist = tmpvar_6.x;\\n  };\\n  vec2 tmpvar_21;\\n  tmpvar_21 = (0.003472222 * floor((\\n    (288.0 * texture (sampler_pc_main, uv_3).yz)\\n   + vec2(0.5, 0.5))));\\n  xlat_mutabledist = (min (xlat_mutabledist, (1.0 - \\n    (tmpvar_21.y + (0.03125 * (tmpvar_21.x - 0.505)))\\n  )) - (q10 * 0.8));\\n  float tmpvar_22;\\n  tmpvar_22 = (xlat_mutabledist + (pow (xlat_mutabledist, 3.0) * 0.2));\\n  vec3 tmpvar_23;\\n  tmpvar_23.xy = (xlat_mutableuv1 * tmpvar_22);\\n  tmpvar_23.z = tmpvar_22;\\n  xlat_mutableuv2 = (((tmpvar_23 / q7) * tmpvar_1) + tmpvar_2);\\n  xlat_mutableuv2 = ((fract(\\n    ((xlat_mutableuv2 / 8.0) + 0.5)\\n  ) - 0.5) * 8.0);\\n  vec4 tmpvar_24;\\n  tmpvar_24.w = 0.0;\\n  tmpvar_24.xyz = (vec3((texture (sampler_noisevol_lq, (xlat_mutableuv2 / 16.0)).x * 3.0)) * 80.0);\\n  float tmpvar_25;\\n  tmpvar_25 = sqrt(dot (tmpvar_24.xyz, tmpvar_24.xyz));\\n  xlat_mutablestruc = (sqrt(dot (tmpvar_24.xyz, tmpvar_24.xyz)) / 80.0);\\n  if (((tmpvar_25 < 80.0) && (xlat_mutabledist > 0.005))) {\\n    ret_4.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * texture (sampler_main, uv_3).x));\\n    vec2 tmpvar_26;\\n    tmpvar_26 = (0.003472222 * floor((\\n      (288.0 * vec2((1.0 - xlat_mutabledist)))\\n     + vec2(0.5, 0.5))));\\n    vec2 tmpvar_27;\\n    tmpvar_27.x = ((32.0 * (\\n      (1.0 - xlat_mutabledist)\\n     - tmpvar_26.x)) + 0.495);\\n    tmpvar_27.y = tmpvar_26.x;\\n    ret_4.yz = tmpvar_27;\\n  } else {\\n    vec3 tmpvar_28;\\n    tmpvar_28.x = (0.5 * (sustain + 1.0));\\n    tmpvar_28.y = sustain;\\n    tmpvar_28.z = sustain;\\n    vec3 tmpvar_29;\\n    tmpvar_29.y = 0.0;\\n    tmpvar_29.x = (1.0 - sustain);\\n    tmpvar_29.z = (1.0 - sustain);\\n    ret_4 = ((texture (sampler_fw_main, fract(uv_3)).xyz * tmpvar_28) - (0.01 * tmpvar_29));\\n  };\\n  vec4 tmpvar_30;\\n  tmpvar_30.w = 1.0;\\n  tmpvar_30.xyz = ret_4;\\n  ret = tmpvar_30.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 dz_2;\\n  vec3 ret2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (abs((uv.x - 0.5)) + 0.5);\\n  tmpvar_4.y = uv.y;\\n  uv_1 = (abs((tmpvar_4 - 0.5)) + 0.5);\\n  ret2_3 = (texture (sampler_main, uv_1).xyz * (0.6 + (0.5 * \\n    sin(((uv_1.x * 10.0) + (3.141593 * (q27 + q28))))\\n  )));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = mix (vec3(dot (texture (sampler_main, uv_1).xyz, vec3(0.32, 0.49, 0.29))), ret2_3, pow (ret2_3, vec3((0.15 + \\n    (mid_att * 0.025)\\n  ))));\\n  ret2_3 = tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv_1 - 0.5);\\n  vec2 tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0005, 0.0) * q21);\\n  tmpvar_7.x = (texture (sampler_main, (uv_1 + tmpvar_8)).x - texture (sampler_main, (uv_1 - tmpvar_8)).z);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (vec2(0.0, 0.0005) * q20);\\n  tmpvar_7.y = (texture (sampler_main, (uv_1 + tmpvar_9)).x - texture (sampler_main, (uv_1 - tmpvar_9)).z);\\n  dz_2 = (tmpvar_7 + ((texture (sampler_noise_hq, \\n    (((tmpvar_6 / (\\n      (((0.5 * q26) + (0.5 * q27)) / q16)\\n     + rad)) * ((q23 * 0.1) + (q24 * 0.1))) + q31)\\n  ) - 0.5) * 0.1).xy);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = abs((tmpvar_6 - dz_2));\\n  vec3 tmpvar_11;\\n  float tmpvar_12;\\n  tmpvar_12 = abs(q21);\\n  float tmpvar_13;\\n  tmpvar_13 = abs(q20);\\n  tmpvar_11.x = (tmpvar_13 + tmpvar_12);\\n  float tmpvar_14;\\n  tmpvar_14 = abs(q22);\\n  tmpvar_11.y = (tmpvar_12 + tmpvar_14);\\n  tmpvar_11.z = (tmpvar_14 + tmpvar_13);\\n  vec3 tmpvar_15;\\n  tmpvar_15 = log(exp2((\\n    (3.141593 * tmpvar_11)\\n   * \\n    ((0.7 * texture (sampler_main, uv_1).xyz) + ((pow (\\n      abs((0.03333 / sqrt(dot (tmpvar_10, tmpvar_10))))\\n    , 0.75) * tmpvar_5) * (5.0 + sqrt(mid))))\\n  .yzx)));\\n  vec3 tmpvar_16;\\n  float tmpvar_17;\\n  tmpvar_17 = abs(q24);\\n  float tmpvar_18;\\n  tmpvar_18 = abs(q23);\\n  tmpvar_16.x = (tmpvar_18 + tmpvar_17);\\n  float tmpvar_19;\\n  tmpvar_19 = abs(q25);\\n  tmpvar_16.y = (tmpvar_17 + tmpvar_19);\\n  tmpvar_16.z = (tmpvar_19 + tmpvar_18);\\n  vec2 tmpvar_20;\\n  tmpvar_20 = fract(-(tmpvar_10));\\n  vec2 tmpvar_21;\\n  tmpvar_21 = fract(dz_2);\\n  vec3 tmpvar_22;\\n  tmpvar_22 = log(exp2((\\n    (3.141593 * tmpvar_16)\\n   * texture (sampler_main, \\n    fract(-(abs((tmpvar_20 - \\n      (2.0 * (dot (tmpvar_21, tmpvar_20) * tmpvar_21))\\n    ))))\\n  ).xyz)));\\n  vec3 tmpvar_23;\\n  float tmpvar_24;\\n  tmpvar_24 = abs(q27);\\n  float tmpvar_25;\\n  tmpvar_25 = abs(q26);\\n  tmpvar_23.x = (tmpvar_25 + tmpvar_24);\\n  float tmpvar_26;\\n  tmpvar_26 = abs(q28);\\n  tmpvar_23.y = (tmpvar_24 + tmpvar_26);\\n  tmpvar_23.z = (tmpvar_26 + tmpvar_25);\\n  vec3 tmpvar_27;\\n  tmpvar_27 = log(exp2((\\n    (3.141593 * tmpvar_23)\\n   * texture (sampler_main, \\n    fract(-(tmpvar_10))\\n  ).zxy)));\\n  vec3 tmpvar_28;\\n  tmpvar_28 = mix (tmpvar_15, tmpvar_22, (1.5708 - (1.570796 - \\n    (sign(tmpvar_27) * (1.570796 - (sqrt(\\n      (1.0 - abs(tmpvar_27))\\n    ) * (1.570796 + \\n      (abs(tmpvar_27) * (-0.2146018 + (abs(tmpvar_27) * (0.08656672 + \\n        (abs(tmpvar_27) * -0.03102955)\\n      ))))\\n    ))))\\n  )));\\n  vec3 tmpvar_29;\\n  tmpvar_29 = mix (tmpvar_15, tmpvar_22, tmpvar_27);\\n  vec3 tmpvar_30;\\n  tmpvar_30.z = 0.0;\\n  tmpvar_30.xy = ((uv_1 - 0.5) + (0.4 * dot (texture (sampler_main, uv_1).xyz, vec3(0.32, 0.49, 0.29))));\\n  float x_31;\\n  x_31 = (fract((\\n    (dot (tmpvar_30, vec3(0.32, 0.49, 0.29)) * 3.0)\\n   - time)) - 0.5);\\n  vec4 tmpvar_32;\\n  tmpvar_32.w = 1.0;\\n  tmpvar_32.xyz = ((0.637 * abs(\\n    mix ((1.5708 - (1.570796 - (\\n      sign(tmpvar_29)\\n     * \\n      (1.570796 - (sqrt((1.0 - \\n        abs(tmpvar_29)\\n      )) * (1.570796 + (\\n        abs(tmpvar_29)\\n       * \\n        (-0.2146018 + (abs(tmpvar_29) * (0.08656672 + (\\n          abs(tmpvar_29)\\n         * -0.03102955))))\\n      ))))\\n    ))), (sign(tmpvar_28) * (1.570796 - (\\n      sqrt((1.0 - abs(tmpvar_28)))\\n     * \\n      (1.570796 + (abs(tmpvar_28) * (-0.2146018 + (\\n        abs(tmpvar_28)\\n       * \\n        (0.08656672 + (abs(tmpvar_28) * -0.03102955))\\n      ))))\\n    ))), ((3.0 * q15) * mix ((1.5708 - \\n      (1.570796 - (sign(tmpvar_15) * (1.570796 - (\\n        sqrt((1.0 - abs(tmpvar_15)))\\n       * \\n        (1.570796 + (abs(tmpvar_15) * (-0.2146018 + (\\n          abs(tmpvar_15)\\n         * \\n          (0.08656672 + (abs(tmpvar_15) * -0.03102955))\\n        ))))\\n      ))))\\n    ), (1.5708 - \\n      (1.570796 - (sign(tmpvar_22) * (1.570796 - (\\n        sqrt((1.0 - abs(tmpvar_22)))\\n       * \\n        (1.570796 + (abs(tmpvar_22) * (-0.2146018 + (\\n          abs(tmpvar_22)\\n         * \\n          (0.08656672 + (abs(tmpvar_22) * -0.03102955))\\n        ))))\\n      ))))\\n    ), (\\n      sign(tmpvar_27)\\n     * \\n      (1.570796 - (sqrt((1.0 - \\n        abs(tmpvar_27)\\n      )) * (1.570796 + (\\n        abs(tmpvar_27)\\n       * \\n        (-0.2146018 + (abs(tmpvar_27) * (0.08656672 + (\\n          abs(tmpvar_27)\\n         * -0.03102955))))\\n      ))))\\n    ))))\\n  )) + (exp(\\n    (-20.0 * sqrt((x_31 * x_31)))\\n  ) * q10));\\n  ret = tmpvar_32.xyz;\\n }"}')},"./presets/converted/Geiss + Flexi + Martin - disconnected.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_brighten":0,"brighten":1,"darken":1,"solarize":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":1.459,"warpscale":2.007,"fshader":1,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.789,"ang":0.6283,"tex_zoom":1.17257,"r":0,"g":1,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"rad = 0.65 + bass*0.1;\\n\\nan = an*0.99 + (bass-treb)*0.1;\\nang = an*0.1 + 0.6;"},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.40271,"tex_zoom":2.23888,"g":1,"b":1,"r2":0.08,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"rad":1.21525,"tex_ang":2.57611,"tex_zoom":0.55595,"g":1,"b":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":34,"x":0.99,"y":0.99,"rad":0.02558,"r":0,"g":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"r":0,"g":0.04,"b":0,"a":0.99},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .07;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 180;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nmy_x = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4+(t7+1)*t8);\\nmy_y = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4+(t7+1)*t8);\\nmy_z = sin(sample*pi*n)*rd;\\n\\n\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 0.65;\\n\\nw1 = q2;\\nw2 = q3;\\nw3 = q4;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nb = -z3 + 0.5;\\nb = min(1,max(0,b))*0.5;\\nr = 1-b*2\\n//b = (1 - r)*0.1;\\n//a =  7/(d*16) - 0.1;"},{"baseVals":{"samples":445,"sep":4,"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"a":0.99,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .09;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 160;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nxx = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\\nyy = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\\nzz = sin(sample*pi*n)*rd;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = -d*t5;\\ns1 = sin(t2*1+w);\\ns2 = sin(t3*1+w);\\ns3 = sin(t4*1+w);\\nc1 = cos(t2*1+w);\\nc2 = cos(t3*1+w);\\nc3 = cos(t4*1+w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 0.75;\\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = sample*pi*4-2*time;\\nc=1.6;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\na = 1-(z + a)/2;\\n"},{"baseVals":{"sep":4,"scaling":0.09348,"smoothing":1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"s8 = sample*383;\\n\\ns = 100;//0.3;\\nxx = sin(sample*s);//((sample*343)%7 - 3.5)*s;\\nzz = cos(sample*s);//((sample*49)%7 - 3.5)*s;\\nyy = (sample-0.5);//((sample*7)%7 - 3.5)*s;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1/d;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = 1+0*(d)*(t6);//(sample*sin(time*0.3)*0.02-1);\\ns1 = sin(t2*w);\\ns2 = sin(t3*w);\\ns3 = sin(t4*w);\\nc1 = cos(t2*w);\\nc2 = cos(t3*w);\\nc3 = cos(t4*w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 2;\\nzoom = 0.3*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*13+t5*20;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(-z,10)*1.0+0.0;"},{"baseVals":{"samples":484,"sep":4,"usedots":1,"scaling":9.94125,"smoothing":1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"s8 = sample*383;\\n\\ns = 0.25;\\nxx = ((sample*(465))%15 - 8)*s*2;\\nyy = ((sample*31)%31 - 16)*s;\\nzz = 0;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nw = 1;\\n\\ns1 = sin(t2*1);\\ns2 = sin(t3*0);\\ns3 = sin(t4*1);\\nc1 = cos(t2*1);\\nc2 = cos(t3*0);\\nc3 = cos(t4*1);\\n\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 500;\\nzoom = 0.05*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*5+t5;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(z,5);"}],"init_eqs_eel":"step = 0;","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, -2+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\nq27 = index + 1;\\nq28 = index2;\\n\\nq29 = ((index%2)-.5)*2;\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/8;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n//ds = max ((q26-.2),0);\\n//step = step + ds/10;\\n\\nstep = step + q24 ;\\n\\np3 = p3*dec_slow + (1-dec_slow) * step;\\nq30 = step;\\n\\np4 = dec_slow*p4 + (1-dec_slow)*q27;\\nq31 = p4;\\n\\nq12 = time -t0;\\nmonitor = q12;\\n\\n\\n\\nzoom = 1;\\nrot = -0 ;\\ndx = .00;","pixel_eqs_eel":"zoom = 1.3;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (((q29 * 2.0) * sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )) + (rand_frame * 64.0)).x;\\n  uv_1 = (uv + (clamp (\\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\\n  uv6_2 = (0.4 * sin((tmpvar_3 * 22.0)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (((q24 * \\n    (((texture (sampler_main, uv_1).xyz - (\\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\\n     * 0.04)) + (0.15 * (vec3(\\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\\n    ) * roam_cos.xyz))) - 0.02)\\n  ) * 0.98) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_5.xyz;\\n }","comp":"uniform sampler2D sampler_rand00;\\n shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_rand00, (0.4 + \\n    (0.6 * tmpvar_1.xy)\\n  )) * tmpvar_1.z) * 3.0).xyz;\\n  ret = tmpvar_2.xyz;\\n }"}')},"./presets/converted/Geiss - Cauldron - painterly 2 (saturation remix).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":2.7,"wave_mode":1,"modwavealphabyvolume":1,"wave_a":2.707,"wave_scale":1.025,"wave_smoothing":0.1,"modwavealphastart":0.77,"modwavealphaend":1.01,"warpscale":1.331,"zoom":1.014,"warp":0.21786,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(3.980*time) + 0.40*sin(11.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.005*( 0.60*sin(0.173*time) + 0.40*sin(0.223*time) );\\ndecay = decay - 0.01*equal(frame%20,0);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.37)\\n   * 0.01))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = mix (vec3(dot (tmpvar_1.xyz, vec3(0.3333, 0.3333, 0.3333))), tmpvar_1.xyz, vec3(3.0, 3.0, 3.0));\\n  ret = tmpvar_2.xyz;\\n }"}')},"./presets/converted/Geiss - Reaction Diffusion 2.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.16936,"wave_mode":7,"modwavealphabyvolume":1,"wave_a":0,"wave_scale":1.015009,"wave_smoothing":0.522,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpscale":3.138,"zoom":1.009006,"warp":0.000536,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\nzoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\nzoom = zoom + max(0,bass_att-1.1)*0.4;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 0.4));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = pow (ret_1, vec3(0.5, 0.8, 1.7));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},"./presets/converted/Geiss - Spiral Artifact.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":6,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wave_a":100,"wave_scale":3.63,"wave_smoothing":0.9,"wave_mystery":-0.3,"modwavealphastart":1.15,"modwavealphaend":1.55,"warpscale":1.331,"zoom":0.96971,"warp":0,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"rot_sum = 0;\\nq2 = 0.07 + 0.04*rand(1000)*0.001 + 0.03*rand(1000)*0.001;\\nq3 = 1.035 + 0.06*(rand(1000)+rand(1000)+rand(1000))*0.000333;","frame_eqs_eel":"wave_r = wave_r + 0.500*( 0.60*sin(1.980*time) + 0.40*sin(3.047*time) );\\nwave_g = wave_g + 0.500*( 0.60*sin(2.835*time) + 0.40*sin(2.081*time) );\\nwave_b = wave_b + 0.500*( 0.60*sin(3.814*time) + 0.40*sin(1.011*time) );\\ncx = 0.5;//cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = 0.5;//cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\n\\nrot = q2;//0.13;//6.28*(rand(737)/737.0 - 0.5) * 0.03;\\nzoom = zoom-1 + q3;\\nrot_sum = rot_sum + rot;\\nq1 = -rot_sum;\\nq5 = cos(rot_sum);\\nq6 = sin(rot_sim);\\nmonitor = q2;\\n\\n// custom beat detection code: (fps-independent; quiet songs don\'t freak out)\\nmin_att    = 2.5;               // lower # = quieter songs can declare beats\\ndecay_to   = 0.8;               // lower # = more hasty to declare a beat\\ndecay_rate = pow(0.9990, fps);  // lower # = more hasty to declare a beat\\nbeat =           bass/max(min_att,bass_att);\\nbeat = max(beat, mid /max(min_att,mid_att ));\\nbeat = max(beat, treb/max(min_att,treb_att));\\nbeat = max( beat, (prev_beat-decay_to)*decay_rate + decay_to );\\nbeat_level     = (beat - prev_beat - 0.02)*24;\\nis_beat = above(beat_level, 0.5);\\nprev_beat = beat;\\n  // put your beat responses HERE:\\n  wave_a = beat_level;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_pw_main, uv).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv2_2;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * (min (aspect.x, aspect.y) * 0.8));\\n  uv_1 = (uv_1 * aspect.xy);\\n  float tmpvar_3;\\n  tmpvar_3 = sin(q1);\\n  float tmpvar_4;\\n  tmpvar_4 = cos(q1);\\n  uv2_2.x = ((uv_1.x * tmpvar_4) - (uv_1.y * tmpvar_3));\\n  uv2_2.y = ((uv_1.x * tmpvar_3) + (uv_1.y * tmpvar_4));\\n  uv2_2 = (uv2_2 * aspect.zw);\\n  uv2_2 = (uv2_2 + 0.5);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (abs((\\n    (texture (sampler_main, uv2_2).xyz * 2.65)\\n   + \\n    (((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1) * -2.0)\\n  )) * 1.5);\\n  ret = tmpvar_5.xyz;\\n }"}')},"./presets/converted/Geiss - Thumb Drum.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.16936,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.899719,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.593743,"zoom":1.00496,"warp":0.278033,"sx":0.999666,"sy":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":0,"mv_y":48,"mv_dx":-0.941273,"mv_dy":0.426319,"mv_l":5,"mv_r":0.315997,"mv_g":0.078173,"mv_b":0.941976,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"rg = 0;","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.52*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.52*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nq3 = (cx*2-1) + 0.52*( 0.60*sin(0.174*-time) + 0.40*sin(0.364*time) );\\nq4 = (cy*2-1) + 0.52*( 0.60*sin(0.234*time) + 0.40*sin(0.271*-time) );\\ndecay = decay - 0.01*equal(frame%5,0);\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.95, 0.3 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;","pixel_eqs_eel":"du = x*2-1 - q1;\\ndv = y*2-1 - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv);\\nmult = 0.008/(dist+0.4);\\ndx = mult*sin(ang2-1.5);\\ndy = mult*cos(ang2-1.5);\\ndu = x*2-1 - q3;\\ndv = y*2-1 - q4;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv);\\nmult = 0.008/(dist+0.4);\\ndx = dx + mult*sin(ang2+1.5);\\ndy = dy + mult*cos(ang2+1.5);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = mix (uv_orig, uv, vec2(q9));\\n  ret_1 = texture (sampler_main, tmpvar_2).xyz;\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (0.3 + (0.4 * vec3(dot (texture (sampler_main, uv).xyz, vec3(0.32, 0.49, 0.29)))));\\n  ret = tmpvar_1.xyz;\\n }"}')},"./presets/converted/Geiss, Flexi + Stahlregen - Thumbdrum Tokamak [crossfiring aftermath jelly mashup].json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":1.331,"zoom":1.004,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );","pixel_eqs_eel":"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = 0.65*sin(dist*0.05);\\ndx = mult*sin(ang2*2-1.5);\\ndy = mult*cos(ang2*2-1.5);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.yxz, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},"./presets/converted/Goody - The Wild Vort.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":2.4,"decay":1,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.28,"wave_smoothing":0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":2.599,"warpscale":0.01,"zoomexp":0.99817,"zoom":0.86978,"warp":0.01,"sy":1.0017,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.04,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0.2},"shapes":[{"baseVals":{"enabled":1,"sides":20,"additive":1,"textured":1,"rad":1.99867,"tex_zoom":0.49486,"g":1,"b":1,"a":0.75,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"textured":1,"y":0.85,"rad":0.4404,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"textured":1,"x":0.8,"rad":0.44044,"tex_zoom":0.99991,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":40,"additive":1,"thickoutline":1,"textured":1,"y":0.51,"rad":0.36457,"tex_ang":1.88496,"tex_zoom":1.00182,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0.2,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"bass_mod=max(x+abs(bass_att),x+sin(time));\\n\\ny=.5+.5*sin(time);\\nx=bass_mod*pow(y,2);\\n\\na=if(above(x,y),0,a);\\na2=a;\\nborder_a=.1*a;\\n\\ntex_zoom=bass+mid;\\n\\nr=bass*.5;\\ng=mid*.6;\\nb=treb*.7;"}],"waves":[{"baseVals":{"thick":1,"smoothing":1,"a":0,"enabled":0},"init_eqs_eel":"t1 = 1","frame_eqs_eel":"","point_eqs_eel":"y=rand(10000)*(.0001)+.5;\\nx=.5+.85*sin(time)*(.48-y);\\n\\nvol=(bass+mid+treb)*.333;\\n\\na=above((.35*bass),x);\\n\\nr=bass*.75;\\ng=mid*.3;\\nb=treb*.25;"},{"baseVals":{"thick":1,"smoothing":1,"enabled":0},"init_eqs_eel":"t1 = 1","frame_eqs_eel":"","point_eqs_eel":"y=rand(10000)*(.0001)+.5;\\nx=.5+.5*sin(time)*(.48-y);\\n\\nvol=(bass+mid+treb)*.333;\\n\\na=above((.35*mid),x);\\n\\nr=bass*.3;\\ng=mid*.75;\\nb=treb*.2;"},{"baseVals":{"thick":1,"smoothing":1,"enabled":0},"init_eqs_eel":"t1 = 1","frame_eqs_eel":"","point_eqs_eel":"y=rand(10000)*(.0001)+.5;\\nx=.5+.25*sin(time)*(.48-y);\\n\\nvol=(bass+mid+treb)*.333;\\n\\na=above((.35*treb),x);\\n\\nr=bass*.2;\\ng=mid*.3;\\nb=treb*.75;"},{"baseVals":{"thick":1,"additive":1,"smoothing":1,"a":0.05,"enabled":0},"init_eqs_eel":"t1 = 1","frame_eqs_eel":"","point_eqs_eel":"y=rand(10000)*(.0001)+.5;\\nx=.5-(pow(sin(time),y)+(.55-y));\\nx=if(above(x,y),y+sin(time)+(1-y),x);\\n\\nvol=(bass+mid+treb)*.333;\\n\\nr=bass*.5;\\ng=mid*.5;\\nb=treb*.5;"}],"init_eqs_eel":"decay=0.1;","frame_eqs_eel":"sx=1;\\nsy=1;\\n\\nredsine=.5+.15*bass*sin(time*3);\\ngreensine=.5+.15*mid*sin(time*2);\\nbluesine=.5+.15*treb*sin(time);\\n\\nredif=.9*if(above(bass,1.2),redsine,if(above(redif,.95),0,redif*.98));\\ngreenif=.8*if(above(mid,1.2),greensine,if(above(greenif,.95),0,greenif*.8));\\nblueif=.8*if(above(treb,1.2),bluesine,if(above(blueif,.95),0,blueif*.8));\\n\\nib_r=redif;\\nib_g=greenif;\\nib_b=blueif;","pixel_eqs_eel":"ang2=sin(ang*3+time+(.05*sin(time*above(mid_att,1.2))));\\n\\nrot=1.2*(ang2);","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - texture (sampler_main, uv).xyz);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\\n    (vec2(-1.003, 1.003) * (uv - 0.5))\\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 2.4);\\n  ret_1 = (ret_1 * ret_1);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},"./presets/converted/Halfbreak - Funny Madness.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":0.99,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"invert":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":2.853,"zoomexp":3.6,"zoom":1.02109,"rot":-0.16,"warp":0.309,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":39,"additive":1,"num_inst":126,"rad":0.06989,"tex_ang":0.62832,"a":0,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"sides":41,"additive":1,"num_inst":239,"rad":0.06989,"tex_ang":0.62832,"r":0,"g":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"sides":43,"additive":1,"num_inst":32,"rad":0.06989,"tex_ang":0.62832,"r":0,"b":1,"g2":0,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"sides":14,"rad":0.15964,"tex_ang":0.62832,"a":0,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\\noldq8 = q8;\\nmonitor = q8;\\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\\n//decay = decay - 0.02*equal(frame%40,0);\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx = 0.1*sin(1.1*time);\\nmv_dy = 0.1*cos(1.112*time);","pixel_eqs_eel":"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  float blur_2;\\n  float crisp_3;\\n  vec3 ret_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur1, uv);\\n  ret_4 = (tmpvar_5.xyz + ((\\n    (tmpvar_6.xyz * scale1)\\n   + bias1) * 3.0));\\n  uv2_1 = (((uv - 0.5) * 0.8) + 0.5);\\n  crisp_3 = texture (sampler_main, uv2_1).y;\\n  blur_2 = ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1).y;\\n  ret_4 = (ret_4 * (1.0 - (blur_2 * 1.15)));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = max (ret_4, vec3(crisp_3));\\n  uv2_1 = uv;\\n  crisp_3 = tmpvar_5.x;\\n  blur_2 = ((tmpvar_6.xyz * scale1) + bias1).x;\\n  ret_4 = (tmpvar_7 * (1.0 - (blur_2 * 1.15)));\\n  vec3 tmpvar_8;\\n  tmpvar_8 = max (ret_4, tmpvar_5.xxx);\\n  ret_4 = tmpvar_8;\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = tmpvar_8;\\n  ret = tmpvar_9.xyz;\\n }"}')},"./presets/converted/Halfbreak - Light of Breakers.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0,"wave_mystery":0.6,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0.49,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.6,"b3x":0.4,"b1ed":0},"shapes":[{"baseVals":{"sides":8,"additive":1,"num_inst":256,"rad":0.03632,"tex_ang":1.00531,"tex_zoom":1.53117,"g":1,"b":1,"a":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":5,"additive":1,"num_inst":256,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g2":0,"a2":0.2,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"n = (instance);\\nFLen = reg00;\\nSLen = reg00/2;\\n\\nz0 = 10;\\ny0 = gmegabuf(2000+n+FLen)/z0;\\nx0 = gmegabuf(2000+n)/z0;\\n\\na0 = (gmegabuf(n+10000));\\n\\nk1 = instance/num_inst-.5;\\nx = .5 + x0 + sin(k1*8*sin(q12*.07)) * sin(q11*.13)*q3*.7; \\ny = .5 + q32*(y0 + sin(k1*8*sin(q14*.1)) * sin(q13*.2)*q3*.7); \\n\\narg = q2/8;\\nhigh = exp(-500*pow(arg+.5-instance/num_inst,2));\\nhigh += exp(-500*pow(-arg+.5-instance/num_inst,2));\\n\\nexc = sqrt((pow(x-.5,2)+pow(y-.5,2)));\\nrad0 = above(z0,0)*min (.1, a0/60)+.005;\\nrad0 = rad0 * (1+2*exc) * (1+high);\\n\\np1 = .5 + sin(q12)/2;\\np2 = .5 + sin(q13*1.4)/2;\\n//p1 = rand(1)-.5;\\n//p2 = rand(1)-.5;\\nexc = ((pow(x-p1,2)+pow(y-p2,2)));\\nrad = min(rad0 * (1 + .004*q3/abs(exc)),1) ;\\n\\na = min(a0*8+.4,1);\\n\\nk1 = instance/num_inst*5 + high;\\nw = 1-exp(-treb_att/2-.5);\\ng = w + (1-w)*sin(k1);\\nr = w + (1-w)*sin(k1-6.28/3);\\nb = w + (1-w)*sin(k1-6.28*2/3);\\n\\na2 = a/4;\\ng2 = g*0; b2 = b*0; r2 = r*0;"},{"baseVals":{"sides":13,"additive":1,"num_inst":5,"x":0.65,"y":0.38,"rad":0.57049,"tex_zoom":0.73678,"a":0.7,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst;\\nx = .5 + .3*sin(instance*k1*413);\\ny = .5 + .3 * sin(instance*k1*113);\\n\\nrad = .1 + .4*sin(k1*333);\\n\\nr =  .5*sin(k1*234);\\nb =  .5*sin(k1*534);\\ng =  .5*sin(k1*34);"},{"baseVals":{"sides":14,"additive":1,"thickoutline":1,"textured":1,"x":0.6,"y":0.55,"rad":0.97237,"ang":1.25664,"tex_zoom":0.34933,"g":0.6,"g2":0,"b2":1,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":120,"spectrum":1,"additive":1,"scaling":7.52386,"smoothing":0,"r":0,"a":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"FLen = reg00;\\n\\nn = int(sample*FLen);\\nvol = (value1+value2) * (1+ .1 / (sample+.03));\\n\\nchg = min(max(vol- gmegabuf(n),-1),1);\\ndec = if (chg>0, 1-chg*0.3, 1+chg*0.2);\\n\\nchg = q1 -q2;\\ndec = .94 - abs(chg) * if (chg> 0, .2,.1);\\n\\ndec = min(max(dec,0),1);\\ngmegabuf(n) = gmegabuf(n)*dec + vol*(1-dec);\\n\\ndec = q2/4;\\n//dec = .90;\\ndec = max(min(dec,1),.1);\\n\\ngmegabuf(n) = gmegabuf(n)*dec + gmegabuf(n+(q2<.8))*(1-dec);\\ngmegabuf(n+10000) = gmegabuf(n+10000)*.2 + .8* vol/3;\\na = .0;\\nx = sample;\\ny = .2 + gmegabuf(n+0)*.23;"},{"baseVals":{"samples":256,"usedots":1,"scaling":0.89152,"smoothing":0.82,"a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":32,"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"n = 0;\\nloop (50000,\\ngmegabuf(n) = 0;\\nmegabuf(n) = 0;\\nn = n+1;\\n);\\n\\nsw1 = rand(8);\\nsw2 = rand(8);\\nsw3 = rand(8);\\nsw4 = rand(8);","frame_eqs_eel":"flen = 512; //Wave Punkte\\nreg00 = FLen;\\nSLen = FLen/2;\\ndec_m = pow(.94, 30/fps);\\n\\n//Volume\\nn = 0; vol = 0;\\nloop (SLen,\\n  vol = vol + pow(gmegabuf(n),2)/FLen;  \\n  n = n+1;\\n);\\nvol = sqrt(vol)/2;\\nvol_ = vol_*dec_m + (1-dec_m)* (vol);\\n\\n//switches\\nlev1 = lev1 * dec_m + (1-dec_m) * gmegabuf(1);\\nlev2 = lev2 * dec_m + (1-dec_m) * gmegabuf(20);\\nlev3 = lev3 * dec_m + (1-dec_m) * gmegabuf(50);\\nlev4 = lev4 * dec_m + (1-dec_m) * gmegabuf(100);\\nsw1 = sw1 + (lev1-gmegabuf(1)>0)/fps;\\nsw2 = sw2 + (lev2-gmegabuf(20)>0)/fps;\\nsw3 = sw3 + (lev3-gmegabuf(50)>0)/fps;\\nsw4 = sw4 + (lev4-gmegabuf(100)>0)/fps;\\n\\ndif = (1+sin(sw3/4))*16+2;\\nofs = sin(sw2/3)*8;\\nn = 0; k1 = frame*0; \\nloop (SLen,\\n      m1 = (n)%SLen;\\n      m2 = (n+ofs)%SLen;\\n\\n      k = (m1+dif)%SLen;\\n      i = (SLen+m2-dif)%SLen;\\n\\n      in1 = (gmegabuf(m1)-gmegabuf(k))/pow(vol_+.03,.8)*1.2;\\n      in2 = (gmegabuf(m2)-gmegabuf(i))/pow(vol_+.03,.8)*1.2;\\n\\n      dec = if (pow(gmegabuf(2000+n),2) + pow(gmegabuf(2000+FLen+n),2)> in1*in1+in2*in2,.8,.94) ;\\n      dec = pow (dec, 30/fps); \\n\\n      gmegabuf(2000+n) =       gmegabuf(2000+n)*dec      +(1-dec)* in1;\\n      gmegabuf(2000+FLen+n) =  gmegabuf(2000+FLen+n)*dec +(1-dec)* in2;\\n      n=n+1;\\n);\\n\\nq1 = (bass+treb+mid)/3;\\nq2 = (bass_att+treb_att+mid_att)/3;\\nq3 = vol_;\\nq11 = sw1;\\nq12 = sw2;\\nq13 = sw3;\\nq14 = sw4;\\n\\nrot = 0; zoom = .98; warp = .3; rot = 0;\\n\\nq32 = aspecty;\\nmonitor = dif;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  vec2 zz_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - vec2(0.5, 0.5));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (0.016 * texture (sampler_noise_lq, ((uv * 0.3) + (0.01 * rand_frame).xy))).xyz;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (0.8 * sin((tmpvar_3 * 8.0)));\\n  float tmpvar_6;\\n  tmpvar_6 = clamp ((0.01 / sqrt(\\n    dot (tmpvar_5, tmpvar_5)\\n  )), 0.0, 1.0);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((-(tmpvar_3) * texsize.xy) * q26);\\n  zz_2 = tmpvar_7;\\n  if ((q25 == 1.0)) {\\n    zz_2 = (tmpvar_7 * (abs(tmpvar_3.y) / abs(tmpvar_3.x)));\\n  } else {\\n    if ((q25 == 2.0)) {\\n      zz_2 = (zz_2 * (abs(tmpvar_3.y) - abs(tmpvar_3.x)));\\n    };\\n  };\\n  uv_1 = (uv + ((\\n    clamp ((sin(zz_2) / cos(zz_2)), vec2(-20.0, -20.0), vec2(20.0, 20.0))\\n   * texsize.zw) * 4.0));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (((\\n    (0.95 * (texture (sampler_main, uv_1) + tmpvar_6).xyz)\\n   + tmpvar_4) - 0.02) - (0.06 * (\\n    (texture (sampler_blur2, uv_1).xyz * scale2)\\n   + bias2).x));\\n  ret = tmpvar_8.xyz;\\n }","comp":"vec3 xlat_mutableblur;\\nvec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 uv2_2;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  float tmpvar_3;\\n  tmpvar_3 = (0.02 * q27);\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    (uv_1 + 0.4)\\n   + tmpvar_3)).xyz * scale1) + bias1);\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, (\\n    (uv_1 + 0.4)\\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\\n  uv2_2.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\\n  uv2_2.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz * scale1) + bias1);\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\\n  uv2_2.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\\n  uv2_2.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz * scale1) + bias1);\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\\n  uv2_2.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\\n  uv2_2.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz * scale1) + bias1);\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\\n  uv2_2.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\\n  uv2_2.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz * scale1) + bias1);\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\\n    (uv2_2 + 0.4)\\n   + tmpvar_3)).xyz + (xlat_mutableblur * 2.0)));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (xlat_mutableret1 * 1.5);\\n  ret = tmpvar_4.xyz;\\n }"}')},"./presets/converted/Hexcollie, Pieturp, Orb, Flexi, Geiss n Demon Lord - Premeditative Urination Clause.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":2,"wave_a":0.001,"warpanimspeed":2.13,"warpscale":2.498,"zoomexp":0.67288,"zoom":1.025,"warp":0.36146,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_r":0.8,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass_att*0.6;\\nv = sample*10000 + value2*bass*0.1;\\n\\nxs = xs + sin(v*1)*speed*atan(v*1.51);\\nys = ys + sin(v*1)*speed;\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = x*0.6;\\ny*0.9 + 0.05 + bass*0.08;\\n\\ny = y*0.8 + 0.1;\\n\\nr = 0.5 + 0.4*sin(time*1.22 + x);\\ng = 0.5 + 0.4*sin(time*1.307 + y);\\nb = 0.5 + 0.4*sin(time*1.959 + x/y);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass_att*0.6;\\nv = sample*10000 + value2*bass*0.1;\\n\\nxs = xs + sin(v*1)*speed*atan(v*1.51);\\nys = ys + sin(v*1)*speed;\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = -x*0.6 + 1;\\ny = y + bass*0.01;\\n//y = y*0.5 + 0.25;\\ny = y*0.8 + 0.1;\\n\\nr = 0.5 + 0.4*sin(time*1.22 + x);\\ng = 0.5 + 0.4*sin(time*1.307 + y);\\nb = 0.5 + 0.4*sin(time*1.959 + x/y);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass_att*0.6;\\nv = sample*10000 + value2*bass*0.1;\\n\\nxs = xs + sin(v*1)*speed*atan(v*1.51);\\nys = ys + sin(v*1)*speed;\\n\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = x*0.6;\\ny = y*0.9 - 0.05 + bass*0.08;\\ny = y*0.8 + 0.1;\\n\\nr = 0.5 + 0.4*sin(time*1.789 + y);\\ng = 0.5 + 0.4*sin(time*1.478 + x);\\nb = 0.5 + 0.4*sin(time*1.125 + y/x);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass_att*0.6;\\nv = sample*10000 + value2*bass*0.1;\\n\\nxs = xs + sin(v*1)*speed*atan(v*1.51);\\nys = ys + sin(v*1)*speed;\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = -x*0.6 + 1;\\ny = y*0.9 - 0.05 + bass*0.08;\\ny = y*0.8 + 0.1;\\n\\nr = 0.5 + 0.4*sin(time*1.789 + y);\\ng = 0.5 + 0.4*sin(time*1.478 + x);\\nb = 0.5 + 0.4*sin(time*1.125 + y/x);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n//warp = 0;\\nr = r*0.9 + (bass-treb)*0.5;\\nrot = r*0.02;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - q4);\\n  tmpvar_2.y = q8;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (tmpvar_2 + ((uv - tmpvar_2) * 0.992));\\n  ret_1 = (mix (mix (vec3(0.0, 0.0, 0.2), vec3(0.3, 0.0, 1.0), texture (sampler_fw_main, tmpvar_3).yyy), vec3(1.0, 1.0, 0.0), vec3(max (\\n    (((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1).z * 1.5)\\n  , texture (sampler_main, \\n    (tmpvar_2 + ((uv - tmpvar_2) * 0.996))\\n  ).z))) * (1.0 - (\\n    ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1)\\n  .x * 2.0)));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = mix (ret_1, vec3(1.0, 0.1, 0.4), texture (sampler_fw_main, uv).xxx);\\n  ret_1 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},"./presets/converted/LuxXx - Play v3 (the war within all of us).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":100,"wave_scale":28.599,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.40031,"r":0.5,"g":0.5,"r2":0.5,"g2":0,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\\n\\nrad=rad*sounds*0.6;\\n\\nr=r+sin(bass)*g;\\ng=g+sin(mid)*g;\\n\\n\\nx=x+0.207*cos(time*bass*0.1);\\ny=y+0.207*sin(time*bass*0.1);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13465,"r2":1,"a2":0.3,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ng2=g2+0.09*sin((treb+mid)*1.23);\\ng=g+0.09*cos((bass+mid)*1.37);\\n\\nsounds=(bass+mid+treb)/3;\\n\\nrad=rad*(treb+mid)/3;\\n\\nx=x+0.300*sin(time*bass);\\ny=y+0.317*cos(time*bass);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.20047,"g":1,"b":1,"r2":0.5,"g2":0.5,"b2":1,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\nr2=r2+(0.25*sin(time*6.28))-bass;\\ng2=g2+(0.25*sin(time*6.28))-bass;\\n\\nrad=rad;\\nx=x+0.217*cos(time*2.3)+sounds*0.1;\\ny=y+0.217*sin((time*3.5)+(sounds*0.3));"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"scaling":20.35074,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=r+0.5*sin(treb*1.13);\\ng=g+0.5*sin(bass*1.33);\\nb=b+0.5*sin(mid*1.23);","point_eqs_eel":""},{"baseVals":{"sep":256,"usedots":1,"scaling":100,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%5;\\nmonitor = index2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nsb = sb*dec_med + q21*(1-dec_med);\\nq29 = sb;\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  (index2-2);\\n\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nq5 = cos(p3*3.14/2);\\n\\nrott =  rott +  .003*30/fps*p3;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovx = movx + .002*30/fps;\\nq28 = movx;\\n\\nq15 = (1+sin(time/23))*.15;\\nq29 = 4*(.5+sin(time/17));\\nq30 = 5/(1.2+sin(time/50)); \\nq31 = sin(time/38)/3;\\nq32 = 2+sin(time/18);\\n\\nwarp = .06;\\nzoom = .998;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29))));\\n  uv6_2 = (0.4 * sin((\\n    (uv_1 * 8.0)\\n   + \\n    (rand_frame * 6.0)\\n  .xy)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.03))\\n   + \\n    (0.1 * (vec3((0.1 / sqrt(\\n      dot (uv6_2, uv6_2)\\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\\n  ) * 0.99) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec3 xlat_mutableblur;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  float ang2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = cos(q30);\\n  float tmpvar_6;\\n  tmpvar_6 = sin(q30);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_5) - (uv_1.y * tmpvar_6));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_6) + (uv_1.y * tmpvar_5));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract(q29));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (2.093333 + q30);\\n  float tmpvar_7;\\n  tmpvar_7 = cos(ang2_4);\\n  float tmpvar_8;\\n  tmpvar_8 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_7) - (uv_1.y * tmpvar_8));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_8) + (uv_1.y * tmpvar_7));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.3333333 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (4.186667 + q30);\\n  float tmpvar_9;\\n  tmpvar_9 = cos(ang2_4);\\n  float tmpvar_10;\\n  tmpvar_10 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.6666667 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (6.28 + q30);\\n  float tmpvar_11;\\n  tmpvar_11 = cos(ang2_4);\\n  float tmpvar_12;\\n  tmpvar_12 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_11) - (uv_1.y * tmpvar_12));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_12) + (uv_1.y * tmpvar_11));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((1.0 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = (xlat_mutableret1 - 0.1);\\n  ret = tmpvar_13.xyz;\\n }"}')},"./presets/converted/Martin - acid wiring.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":0.527429,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.5,"g":1,"b":0.9,"r2":0.83,"g2":0.93,"b2":0.8,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/3;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3);\\n\\n\\n\\ncent = sqrt((x-.5)*(x-.5)+(y-.5)*(y-.5));\\n\\nrad = .1*cent;\\na = .8;"},{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_zoom":1.392831,"r":0,"g":0.55,"b":0.5,"a":0.9,"g2":0.4,"b2":0.4,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0.2},"init_eqs_eel":"","frame_eqs_eel":"trig = q24;\\n\\ntextured = 1;\\n\\nx0 = x0*bnot(trig) + trig*(.2+ rand(100)/200); \\ny0 = y0*bnot(trig) + trig*(.2+ rand(100)/200); \\n\\n\\nx0 = x0 + .03*q1*(3+q26)/fps;\\ny0 = y0 + .03*q2*(3+q26)/fps;\\n\\nx0 = x0 - int(x0);\\ny0 = y0 - int(y0);\\n\\ntex_ang = time;\\n//tex_zoom = q1;\\nang = time*q2;\\nx = x0; y = y0;\\nrad0 = rad0*bnot(trig) + trig*rand(100)/200;\\nrad = rad0;\\n\\n\\nr0 = r0*bnot(trig) + trig * rand(10)/10;\\nb0 = b0*bnot(trig) + trig * rand(10)/10;\\ng0 = g0*bnot(trig) + trig * rand(10)/10;\\n\\nborder_r = r0; border_g = g0; border_b = b0;\\n\\nr = r0; b = b0; g = g0;"},{"baseVals":{"additive":1,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(50)/50;\\ny = .5 - 0*rand(15)/200;\\n\\nr = .4;\\ng = .6;\\nb = 1;\\nr2 = r;\\ng2 = g;\\nb2 = b;\\n\\na = min(q21/2 ,.9);\\nrad = a * (.1+abs(x-.5))/2 ;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.76,"rad":0.39478,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"a2":0.8,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27/2;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"thick":1,"additive":1,"scaling":3.915805,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"\\nx = sample;\\ny = value1 * rand(50)/100 * abs(sample-.5)+ .49;\\n\\na = q26/4 * (.2 + abs(sample-.5)); "},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15; "},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"dirx = 1;","frame_eqs_eel":"dec_med = pow (0.6, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nava = ava*dec_slow + q26*(1-dec_slow);\\n\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/2;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nq27 = 8-index;\\nq28 = .5 + sin(time/7)/10;\\n\\nrm = min(q26-1.5*ava,2);\\nmov = is_beat*rm + (1-is_beat)*mov;\\n\\nmovez = movez + .4/fps*mov;\\nq30 = movez;\\n//**************************\\n\\nampl = q26/8;\\n\\nmovex = movex + .2/fps*sin(rott);\\nmovey = movey + .2/fps*cos(rott);\\n\\nq18 = movex; q19 = movey;\\ntrel = trel + 1/fps + q24;\\nq17 = 2*sin(trel/4);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (((q28 * 2.0) * sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )) + (rand_frame * 64.0)).x;\\n  uv_1 = (uv + (clamp (\\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\\n  , vec2(-16.0, -16.0), vec2(16.0, 16.0)) / 20.0));\\n  uv6_2 = (0.4 * sin((tmpvar_3 * 12.0)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (((q24 * \\n    (((texture (sampler_main, uv_1).xyz - (\\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\\n     * 0.04)) + (0.15 * (vec3(\\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\\n    ) * roam_cos.xyz))) - 0.04)\\n  ) * 0.98) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_5.xyz;\\n }","comp":"vec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers2;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_3;\\n  float dist_4;\\n  float ang2_5;\\n  vec2 uv2_6;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  dist_4 = 1.0;\\n  inten_3 = 1.0;\\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\\n  for (float n_2 = 0.0; n_2 <= 4.0; n_2 += 1.0) {\\n    vec2 uv3_7;\\n    ang2_5 = ((6.28 * n_2) / 4.0);\\n    float tmpvar_8;\\n    tmpvar_8 = cos(ang2_5);\\n    float tmpvar_9;\\n    tmpvar_9 = sin(ang2_5);\\n    uv2_6.x = ((uv_1.x * tmpvar_8) - (uv_1.y * tmpvar_9));\\n    uv2_6.y = ((uv_1.x * tmpvar_9) + (uv_1.y * tmpvar_8));\\n    uv2_6 = (uv2_6 * aspect.yx);\\n    dist_4 = (1.0 - fract((\\n      (0.25 * n_2)\\n     + q30)));\\n    inten_3 = ((sqrt(dist_4) * (1.0 - dist_4)) * 4.0);\\n    vec2 tmpvar_10;\\n    tmpvar_10.x = tmpvar_8;\\n    tmpvar_10.y = tmpvar_9;\\n    uv3_7 = (fract((\\n      ((3.0 * uv2_6) * dist_4)\\n     + \\n      (0.3 * q27)\\n    )) + (q17 * tmpvar_10));\\n    xlat_mutableneu = (texture (sampler_main, uv3_7).xyz - ((texture (sampler_blur2, \\n      ((uv3_7 * 1.02) * q1)\\n    ).xyz * scale2) + bias2));\\n    xlat_mutableneu = (xlat_mutableneu * vec3(greaterThanEqual (xlat_mutableneu, vec3(0.0, 0.0, 0.0))));\\n    xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_3));\\n  };\\n  xlat_mutablers2 = ((0.4 * cos(\\n    ((uv_1 * 13.0) + time)\\n  )) - dot (xlat_mutableret1, vec3(0.32, 0.49, 0.29)));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = (xlat_mutableret1 + ((\\n    ((0.05 / sqrt(dot (xlat_mutablers2, xlat_mutablers2))) * q26)\\n   / 4.0) * hue_shader));\\n  ret = tmpvar_11.xyz;\\n }"}')},"./presets/converted/Martin - charisma.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.33064,"wave_scale":0.897961,"wave_smoothing":0.108,"wave_mystery":0.1,"modwavealphastart":0.72,"modwavealphaend":1.28,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.5,"wave_b":0.5,"wave_y":0.54,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":24.799994,"mv_dy":0.16,"mv_l":1.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":3,"rad":0.312746,"tex_zoom":0.179142,"r":0.82,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"xy=0.5+rand_frame;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":352,"usedots":1,"additive":1,"scaling":0.038558,"smoothing":0.2,"g":0},"init_eqs_eel":"","frame_eqs_eel":"q1=bass_att;","point_eqs_eel":"r = abs (sin (frame /38));\\ng = 0.5*abs (cos (frame /45));\\nb = 0.5*abs (sin (frame / 133));\\na = 0.3;\\nt02 = t02 + q1/10;\\nratio = sin (frame/49);\\n\\nampl = 0.01+0.4*sqr(sin ((frame ) / 18)* cos (frame / 123));\\n\\nx1 = (r-0.5)/15 +0.5 + ampl* sin (sample*6.28);\\ny1 = (b-0.5)/15+0.5 + ampl* cos (sample*6.28);\\n\\nx =  x1+1*0.2*(ampl+ratio )*sin ( sample*6.28 * ratio*7.3);\\ny =  y1+1*0.2*(ampl+ratio )*cos ( sample*6.28*6);\\n"},{"baseVals":{"samples":15,"scaling":2.063781,"smoothing":0.8,"r":0.8,"g":0,"b":0.6,"a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":112,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"clear = 0.5;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3*3.1416/4;\\n\\nrot1 = rot1 + q26;\\nq25 = .01*rot1;\\n\\nq27 = 8-index;\\nq28 = index3;\\n\\ndx1 = dec_med*dx1 + (1-dec_med)*bnot(index2);\\nq29 = dx1;\\nmonitor = q29;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq5 = 1.5*cos(time/9);\\nq6 = .5*sin(time/7);\\n\\nclear = clear *dec_med + 1-dec_med;\\nq32 = clear;\\n\\nmov = bnot(q24)*movex + (rand(100)/100-50)*q2;\\nmovex = movex + .2/fps *q2;\\nq18 = movex;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv6_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_3;\\n  tmpvar_3 = (rand_frame * 64.0).x;\\n  uv6_1 = (0.5 * cos((\\n    ((tmpvar_2 * mat2(0.7, -0.7, 0.7, 0.7)) * 17.0)\\n   + \\n    (rand_frame * 6.0)\\n  .xy)));\\n  float x_4;\\n  x_4 = (uv6_1.x + uv6_1.y);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ((0.147 * (\\n    (texture (sampler_main, (uv + clamp ((\\n      (sin(tmpvar_3) / cos(tmpvar_3))\\n     * \\n      normalize(tmpvar_2)\\n    ), vec2(-8.0, -8.0), vec2(8.0, 8.0)))).xyz + (0.15 * (vec3((0.01 / \\n      sqrt((x_4 * x_4))\\n    )) * roam_cos.xyz)))\\n   - 0.02)) + ((0.85 * \\n    (texture (sampler_main, uv_orig).xyz - 0.002)\\n  ) * q32));\\n  ret = tmpvar_5.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec3 ret_4;\\n  uv_1 = (uv - 0.5);\\n  float tmpvar_5;\\n  tmpvar_5 = (time / 2.0);\\n  dist_3 = (1.0 - fract(tmpvar_5));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.y = 0.4;\\n  tmpvar_6.x = q18;\\n  xlat_mutableuv3 = (((2.0 * uv_1) * dist_3) + tmpvar_6);\\n  vec2 tmpvar_7;\\n  tmpvar_7.y = 0.0;\\n  tmpvar_7.x = texsize.z;\\n  vec2 tmpvar_8;\\n  tmpvar_8.y = 0.0;\\n  tmpvar_8.x = texsize.z;\\n  xlat_mutabledz.x = (inten_2 * dot ((texture (sampler_main, \\n    (xlat_mutableuv3 + tmpvar_7)\\n  ).xyz - texture (sampler_main, \\n    (xlat_mutableuv3 - tmpvar_8)\\n  ).xyz), vec3(0.32, 0.49, 0.29)));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = 0.0;\\n  tmpvar_9.y = texsize.w;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = 0.0;\\n  tmpvar_10.y = texsize.w;\\n  xlat_mutabledz.y = (inten_2 * dot ((texture (sampler_main, \\n    (xlat_mutableuv3 + tmpvar_9)\\n  ).xyz - texture (sampler_main, \\n    (xlat_mutableuv3 - tmpvar_10)\\n  ).xyz), vec3(0.32, 0.49, 0.29)));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.3333333 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_11;\\n  tmpvar_11.y = 0.4;\\n  tmpvar_11.x = q18;\\n  xlat_mutableuv3 = (((2.0 * uv_1) * dist_3) + tmpvar_11);\\n  vec2 tmpvar_12;\\n  tmpvar_12.y = 0.0;\\n  tmpvar_12.x = texsize.z;\\n  vec2 tmpvar_13;\\n  tmpvar_13.y = 0.0;\\n  tmpvar_13.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_12)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_13)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = 0.0;\\n  tmpvar_14.y = texsize.w;\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = 0.0;\\n  tmpvar_15.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_14)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_15)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.6666667 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_16;\\n  tmpvar_16.y = 0.4;\\n  tmpvar_16.x = q18;\\n  xlat_mutableuv3 = (((2.0 * uv_1) * dist_3) + tmpvar_16);\\n  vec2 tmpvar_17;\\n  tmpvar_17.y = 0.0;\\n  tmpvar_17.x = texsize.z;\\n  vec2 tmpvar_18;\\n  tmpvar_18.y = 0.0;\\n  tmpvar_18.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_17)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_18)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_19;\\n  tmpvar_19.x = 0.0;\\n  tmpvar_19.y = texsize.w;\\n  vec2 tmpvar_20;\\n  tmpvar_20.x = 0.0;\\n  tmpvar_20.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_19)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_20)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((1.0 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_21;\\n  tmpvar_21.y = 0.4;\\n  tmpvar_21.x = q18;\\n  xlat_mutableuv3 = (((2.0 * uv_1) * dist_3) + tmpvar_21);\\n  vec2 tmpvar_22;\\n  tmpvar_22.y = 0.0;\\n  tmpvar_22.x = texsize.z;\\n  vec2 tmpvar_23;\\n  tmpvar_23.y = 0.0;\\n  tmpvar_23.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_22)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_23)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_24;\\n  tmpvar_24.x = 0.0;\\n  tmpvar_24.y = texsize.w;\\n  vec2 tmpvar_25;\\n  tmpvar_25.x = 0.0;\\n  tmpvar_25.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_24)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_25)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  uv_1 = (uv_1 + xlat_mutabledz);\\n  vec2 tmpvar_26;\\n  tmpvar_26.x = q5;\\n  tmpvar_26.y = q6;\\n  xlat_mutableuv4 = (uv_1 - (0.4 * tmpvar_26));\\n  float tmpvar_27;\\n  tmpvar_27 = (0.1 * clamp ((1.0/(\\n    (abs(uv_1.y) + 0.1)\\n  )), 0.0, 12.0));\\n  vec2 tmpvar_28;\\n  tmpvar_28.x = (uv_1.x * tmpvar_27);\\n  tmpvar_28.y = tmpvar_27;\\n  vec3 tmpvar_29;\\n  tmpvar_29.xy = vec2(0.0, 0.0);\\n  tmpvar_29.z = clamp ((1.0 - (3.0 * uv_1.y)), 0.0, 1.0);\\n  ret_4 = (vec3(0.0, 0.1, 0.1) + (0.1 * tmpvar_29));\\n  ret_4 = (ret_4 + (vec3(dot (texture (sampler_noise_hq, \\n    (tmpvar_28 + (0.1 * time))\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) * (\\n    (clamp ((1.0 - (12.0 * uv_1.y)), 0.0, 1.0) * 0.1)\\n   / \\n    (0.05 + sqrt(dot (xlat_mutableuv4, xlat_mutableuv4)))\\n  )));\\n  ret_4 = (ret_4 + ((0.4 * xlat_mutableret1) + (xlat_mutableret1 * q22)));\\n  vec4 tmpvar_30;\\n  tmpvar_30.w = 1.0;\\n  tmpvar_30.xyz = ret_4;\\n  ret = tmpvar_30.xyz;\\n }"}')},"./presets/converted/Martin - liquid arrows.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.780001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":5.552,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0,"ob_size":0.06,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1x":0.6999,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"y":0.9,"rad":0.15493,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"x":0.9,"rad":0.22613,"g":0.6,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.05 + rand(900)/1000;\\ny = 0.05 + rand(900)/1000;\\nang = rand(320)/100;\\n "},{"baseVals":{"sides":36,"additive":1,"rad":0.18717,"r":0,"g":0.12,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"additive":1,"scaling":0.5033,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"index4 = rand(2);\\nindex3 = rand(4);","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%4;\\nindex4 = (index4 + is_beat*bnot(index)*bnot(index2)*bnot(index3))%2;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\\nis_beat2 = ready * above (time, t0+.2);\\nq19 = is_beat2;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = index+1;\\nq28 = index2+1;\\nq29 = index3*4+1;\\nq30 = index4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nsp0 = dec_slow*sp0 + (q24+.05)*(1-dec_slow);\\ngo = go * dec_med + (1-dec_med)*(1-bnot(index2+index3));\\nmovez = movez + .015*30/fps * go ;\\nq31 = movez;\\nq32 = .5 + .02*sin(time/5);\\n\\nq5 = index4%2;\\n\\nzoom = 1.0; rot = 0;\\n\\ndx = .05*max(sin(time/9.7)-.95,0);\\ndy = .002*(1-go);\\nrot = 50*(dx-dy);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.03);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (cos((tmpvar_1.y * q1)) * sin(-(tmpvar_1.y)));\\n  tmpvar_2.y = (sin(tmpvar_1.x) * cos((tmpvar_1.y * q2)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, (uv - \\n    ((tmpvar_2 * texsize.zw) * 18.0)\\n  )).xyz * 0.99) - 0.01);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\\n  tmpvar_3.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    ((uv - 0.5) + 1.8)\\n  )) - (2.0 * tmpvar_3));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (0.8 * ((0.3 * \\n    dot (tmpvar_2, vec3(0.32, 0.49, 0.29))\\n  ) + (\\n    (22.0 * clamp ((0.01 / sqrt(\\n      dot (uv1_1, uv1_1)\\n    )), 0.0, 1.0))\\n   * \\n    (tmpvar_2 + 0.1)\\n  )));\\n  ret = tmpvar_4.xyz;\\n }"}')},"./presets/converted/Milk Artist At our Best - FED - SlowFast Ft AdamFX n Martin - HD CosmoFX.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"wave_mode":4,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_a":0.331,"wave_scale":0.898,"wave_smoothing":0.108,"wave_mystery":0.1,"modwavealphastart":0.72,"modwavealphaend":1.28,"zoom":1.3345,"wave_r":0,"wave_g":0.5,"wave_b":0.5,"wave_y":0.54,"mv_x":24.8,"mv_dy":0.16,"mv_l":1.5,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"rad":0.31275,"tex_zoom":0.17914,"r":0.82,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"xy=0.5+rand_frame;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":352,"usedots":1,"additive":1,"scaling":0.03856,"smoothing":0.2,"g":0},"init_eqs_eel":"","frame_eqs_eel":"q1=bass_att;","point_eqs_eel":"r = abs (sin (frame /38));\\ng = 0.5*abs (cos (frame /45));\\nb = 0.5*abs (sin (frame / 133));\\na = 0.3;\\nt02 = t02 + q1/10;\\nratio = sin (frame/49);\\n\\nampl = 0.01+0.4*sqr(sin ((frame ) / 18)* cos (frame / 123));\\n\\nx1 = (r-0.5)/15 +0.5 + ampl* sin (sample*6.28);\\ny1 = (b-0.5)/15+0.5 + ampl* cos (sample*6.28);\\n\\nx =  x1+1*0.2*(ampl+ratio )*sin ( sample*6.28 * ratio*7.3);\\ny =  y1+1*0.2*(ampl+ratio )*cos ( sample*6.28*6);\\n"},{"baseVals":{"samples":15,"scaling":2.06378,"smoothing":0.8,"r":0.8,"g":0,"b":0.6,"a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":112,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dx=0;\\noldshift=shift;\\nnormalframez=normalframez+1;\\nshift=above(bass_att,1)*above(treb_att,0.9);\\ncrash=abs(oldshift-shift);\\nnex=equal(rshift,0)*1+equal(rshift,1)*2;\\nrshift=if(crash,nex,rshift);\\nmonitor=rshift;\\nwave_r=int(rand(200))/200;\\nwave_g=int(rand(200))/200;\\nwave_b=int(rand(200))/200;\\nwarp=0;\\nq1=above(bass_att,1.3);\\nzoom1=zoom+0.15-0.3*(normalframez%2);\\nzoom=if(shift,zoom1,1);\\nrot=rot-0.1+rshift*0.1;","pixel_eqs_eel":"dy=-below(y,0.4)*0.007+above(y,0.6)*0.007;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, (uv_orig + \\n    ((uv - uv_orig) * dot (texture (sampler_main, uv).xyz, vec3(0.32, 0.49, 0.29)))\\n  )).xyz * 0.99) - 0.002);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * 2.0);\\n  ret_1 = (ret_1 * (1.0 - ret_1));\\n  ret_1 = (((1.0 - \\n    pow (clamp (ret_1, 0.0, 1.0), vec3(0.5, 0.5, 0.5))\\n  ) * 1.5) - 0.75);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},"./presets/converted/MilkDrop2077.R002.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"decay":0.975,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":2,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":100,"wave_scale":27.455,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"warpscale":1.772,"zoomexp":1.001,"zoom":1.007,"warp":0,"mv_y":8.64,"mv_l":1.455,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"x":0.455,"rad":0.43233,"r":0.5,"g":0.5,"r2":0.57,"g2":0,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\\n\\nrad=rad*sounds*0.6;\\n\\nr=r+sin(bass)*g;\\ng=g+sin(mid)*g;\\n\\n\\nx=x+0.207*cos(time*bass*0.1);\\ny=y+0.2029*sin(time*bass*0.09);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13465,"tex_zoom":0.91,"r2":1,"a2":0.318,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ng2=g2+0.09*sin((treb+mid)*1.23);\\ng=g+0.09*cos((bass+mid)*1.37);\\n\\nsounds=(bass+mid+treb)/3;\\n\\nrad=rad*(treb+mid)/3;\\n\\nx=x+0.300*sin(time*bass);\\ny=y+0.317*cos(time*bass);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.20047,"g":1,"b":1,"r2":0.5,"g2":0.445,"b2":0.94,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\nr2=r2+(0.25*sin(time*6.28))-bass;\\ng2=g2+(0.25*sin(time*6.28))-bass;\\n\\nrad=rad;\\nx=x+0.243*cos(time*2.3)+sounds*0.09;\\ny=y+0.217*sin((time*3.5)+(sounds*0.3));"},{"baseVals":{"x":0.475,"border_g":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"scaling":20.35074,"smoothing":0.435,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=r+0.5*sin(treb*1.13);\\ng=g+0.5*sin(bass*1.33);\\nb=b+0.5*sin(mid*1.23);","point_eqs_eel":""},{"baseVals":{"sep":256,"usedots":1,"scaling":100,"smoothing":0.51,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.91,"smoothing":0.45,"b":0.91,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":1.08,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_x = wave_x + 0.2*( 0.60*sin(2.121*time) + 0.5*sin(1.621*time) );\\nwave_y = wave_y + 0.2*( 0.60*sin(1.742*time) + 0.5*sin(2.322*time) );\\nwave_r = wave_r + 0.200*( 0.60*sin(0.823*time) + 0.40*sin(0.916*time) );\\nwave_g = wave_g + 0.500*( 0.60*sin(0.900*time) + 0.40*sin(1.023*time) );\\nwave_b = wave_b + 0.500*( 0.60*sin(0.808*time) + 0.40*sin(0.949*time) );","pixel_eqs_eel":"zoom = zoom + 0.01 * ( sin(2*cos(3*(sqrt(2)-rad)*ang)) + 1 );","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec2 d_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 4.0);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    fract((uv + (vec2(1.0, 0.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    fract((uv - (vec2(1.0, 0.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (((texture (sampler_blur1, \\n    fract((uv + (vec2(0.0, 1.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    fract((uv - (vec2(0.0, 1.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  d_2 = -(tmpvar_4);\\n  float tmpvar_8;\\n  tmpvar_8 = (d_2 * 4.0).x;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_5.y;\\n  tmpvar_9.y = tmpvar_6.y;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_5.x;\\n  tmpvar_10.y = tmpvar_6.x;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = ((uv - (tmpvar_9 * d_2)) - (tmpvar_10 * tmpvar_8));\\n  ret_3.y = texture (sampler_fc_main, (tmpvar_11 - floor(tmpvar_11))).y;\\n  ret_3.y = (ret_3.y + ((\\n    (ret_3.y - tmpvar_7.y)\\n   * 0.042) + -0.0075));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_5.x;\\n  tmpvar_12.y = tmpvar_6.x;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.z;\\n  tmpvar_13.y = tmpvar_6.z;\\n  my_uv_1 = ((uv - (tmpvar_12 * d_2)) - (tmpvar_13 * tmpvar_8));\\n  ret_3.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\\n  ret_3.x = (ret_3.x + ((\\n    (ret_3.x - tmpvar_7.x)\\n   * 0.042) + -0.0075));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = tmpvar_5.z;\\n  tmpvar_14.y = tmpvar_6.z;\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = tmpvar_5.y;\\n  tmpvar_15.y = tmpvar_6.y;\\n  my_uv_1 = ((uv - (tmpvar_14 * d_2)) - (tmpvar_15 * tmpvar_8));\\n  ret_3.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_3.z = (ret_3.z + ((\\n    (ret_3.z - tmpvar_7.z)\\n   * 0.042) + -0.0075));\\n  vec4 tmpvar_16;\\n  tmpvar_16 = texture (sampler_noisevol_hq, (((vec3(0.04, 0.02, 0.02) * my_uv_1.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(2.3, 2.3, 1.8)) * q29)));\\n  if (((ret_3.x > (q21 * q13)) && (ret_3.x <= (q24 * q11)))) {\\n    ret_3.y = (ret_3.y - (tmpvar_16.x * 0.5));\\n  };\\n  if (((ret_3.y > (q22 * q11)) && (ret_3.y <= (q25 * q12)))) {\\n    ret_3.z = (ret_3.z - (tmpvar_16.y * 0.5));\\n  };\\n  if (((ret_3.z > (q23 * q12)) && (ret_3.z <= (q26 * q13)))) {\\n    ret_3.x = (ret_3.x - (tmpvar_16.z * 0.5));\\n  };\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_3;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (((vec3(2.8, 2.8, 1.2) * tmpvar_2.x) + (vec3(2.0, 0.4, 2.0) * tmpvar_2.y)) + (vec3(0.1, 1.3, 1.2) * tmpvar_2.z));\\n  ret_1 = (ret_1 * 0.37);\\n  ret_1 = ((ret_1 * ret_1) * (1.0 + (\\n    clamp (((cos(\\n      (((dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) * 17.0) + 3.0) + (uv.x * 30.0))\\n    ) * 3.0) - 2.7), 0.0, 1.0)\\n   * 4.0)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},"./presets/converted/MilkDrop2077.R033.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":2.7,"decay":0.715,"wrap":0,"solarize":1,"wave_a":0.001,"modwavealphastart":0.848,"warpanimspeed":2.472,"warpscale":3.209,"zoomexp":1.0018,"zoom":1.01,"cx":0.465,"dy":0.00001,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_y":9.72,"mv_r":1.19,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":20,"num_inst":410,"rad":0.0082,"r":0,"b":1,"a":1.09,"g2":0,"a2":0.1,"border_b":0.87,"border_a":0.006},"init_eqs_eel":"","frame_eqs_eel":"q1 = time/5;\\nq2 = time/6;\\nrad = 0.005+bass/100;\\nq5 = bass_att/70;\\nb2 = treb*0.79-bass/2;\\nr = instance/num_inst;\\ng = abs(treb_att/5-bass);\\n//b = abs(treb_att/5-bass);\\nsize = 0.3+bass_att/300;\\n\\nnc = sqrt(num_inst);\\nxs=sin(7.662*(instance%nc)/nc)*sin(3.705*int(instance/nc)/nc);\\nys=cos(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);\\nzs=cos(3.14*int(instance/nc)/nc);\\n\\n//modulate to allow rotation\\ny1 = ys*cos(q1)-zs*sin(q1);\\nz1 = ys*sin(q1)+zs*cos(q1);\\nx1 = z1*sin(q2)+xs*cos(q2);\\nz2 = z1*cos(q2)-xs*sin(q2);\\nx2 = x1*cos(q3)-y1*sin(q3);\\ny2 = y1*cos(q3)+x1*sin(q3);\\n\\n//translate shape\\nx3 = x2+q4;\\ny3 = y2;\\nz3 = z2+q5;\\n\\nx = 0.5 + size*(x3/(1+z3*size));\\ny = 0.42 + size*(y3/(1+z3*size));\\na=below(z3,0);"},{"baseVals":{"rad":0.102,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"x":0.53,"rad":0.091,"tex_zoom":0.76,"r":1.16,"a":1.05,"g2":0.86,"border_r":0.87,"border_g":0.89,"border_b":1.22,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"y":0.49,"rad":0.089,"tex_zoom":0.78,"a":0.95,"g2":0.81,"border_a":0.114,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"r":0.8,"g":1.05,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"a":0.93,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":1.1,"r":1.15,"g":0.92,"b":1.22,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.84,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"q1=sin(.5*time);\\nq2=sin(.2*time);\\nq3=sin(0.34*time);\\nq4=abs(sin(40*time));\\n\\nbt=bt+bass/fps;\\nbt=bt*above(100,bt);\\nq5=sin(bt);\\nq6=bt;\\n\\nq11=int(rand(200)); q11=q11*equal(q11,1);\\nq12=int(rand(100)); q12=q12*equal(q12,1);\\nq13=int(rand(150)); q13=q13*equal(q13,1);\\n\\nrot=rot-0.048*sin(bass_att*0.08)*sin(0.37*time);\\n\\ndy=.002*sin(time*.623)+.002*cos(time*.31);\\ndx=.002*cos(time*.442)+.002*sin(time*.52);","pixel_eqs_eel":"//zoom=10.1242-0.038*above(rad,0.12);\\n//zoom=zoom+0.042*above(rad,0.131);\\n//zoom=zoom-.05*above(rad,.2);\\n//zoom=zoom+.05*above(rad,.21);\\n//zoom=zoom-0.039*above(rad,0.33);\\n//zoom=zoom+.05*above(rad,.31);\\n//zoom=zoom-0.059*above(rad,0.34);\\n//zoom=zoom+.05*above(rad,.41);\\n//zoom=zoom-.05*above(rad,.49);\\n//zoom=zoom+.05*above(rad,.50);\\n//zoom=zoom-.05*above(rad,.6);\\n//zoom=zoom+.05*above(rad,.61);\\n//zoom=zoom-0.055*above(rad,0.61);\\n//zoom=zoom+0.047*above(rad,0.575);\\n//zoom=zoom-0.049*above(rad,0.8);\\n//zoom=zoom+.05*above(rad,.805);\\n//zoom=zoom-.05*above(rad,.9);\\n//zoom=zoom+0.051*above(rad,1.046);\\n\\n\\nzoom=zoom+.15*x*.05*sin(rad*time*2);\\nzoom=zoom+0.142*(1-x)*0.058*sin(rad*time*2);","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.469, 0.469));\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 300.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = dot (((\\n    (texture (sampler_blur1, ((tmpvar_1 + vec2(1.0, 2.0)) + tmpvar_2)).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_3.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\\n    (tmpvar_3 * texsize.zw)\\n   * 50.0))) - 0.01).xyz;\\n  ret = tmpvar_4.xyz;\\n }","comp":"float xlat_mutablesmask;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv3;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  float dist_1;\\n  float stars_2;\\n  vec3 ret_3;\\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (0.109 * time);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.24 * rad);\\n  dist_1 = ((1.0 - fract(\\n    (0.2425 + tmpvar_4)\\n  )) * (1.0 - tmpvar_5));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = q1;\\n  tmpvar_6.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_6);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.81);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = max (0.0, clamp ((\\n    (1.0 - dist_1)\\n   * \\n    ((0.1 / sqrt(dot (tmpvar_7, tmpvar_7))) * xlat_mutablesmask)\\n  ), 0.0, 1.0));\\n  dist_1 = ((1.0 - fract(\\n    (0.485 + tmpvar_4)\\n  )) * (1.0 - tmpvar_5));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = q1;\\n  tmpvar_8.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_8);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.81);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = (stars_2 + max (stars_2, clamp (\\n    ((1.0 - dist_1) * ((0.1 / sqrt(\\n      dot (tmpvar_9, tmpvar_9)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  dist_1 = ((1.0 - fract(\\n    (0.7275 + tmpvar_4)\\n  )) * (1.0 - tmpvar_5));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q1;\\n  tmpvar_10.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_10);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.81);\\n  vec2 tmpvar_11;\\n  tmpvar_11 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = (stars_2 + max (stars_2, clamp (\\n    ((1.0 - dist_1) * ((0.1 / sqrt(\\n      dot (tmpvar_11, tmpvar_11)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  dist_1 = ((1.0 - fract(\\n    (0.97 + tmpvar_4)\\n  )) * (1.0 - tmpvar_5));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = q1;\\n  tmpvar_12.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_12);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.81);\\n  vec2 tmpvar_13;\\n  tmpvar_13 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = (stars_2 + max (stars_2, clamp (\\n    ((1.0 - dist_1) * ((0.1 / sqrt(\\n      dot (tmpvar_13, tmpvar_13)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_14;\\n  tmpvar_14 = max ((texture (sampler_main, uv).xyz * 2.0), ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) * 2.0));\\n  ret_3 = (ret_3 + clamp ((stars_2 * stars_2), 0.0, 1.0));\\n  ret_3 = (ret_3 * clamp ((1.0 - \\n    (2.0 * dot (tmpvar_14, vec3(0.32, 0.49, 0.29)))\\n  ), 0.0, 1.0));\\n  ret_3 = (ret_3 + tmpvar_14);\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_3;\\n  ret = tmpvar_15.xyz;\\n }"}')},"./presets/converted/ORB - Waaa.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"wrap":0,"darken_center":1,"wave_a":0.001,"zoom":0.97,"rot":-6.27999,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.49849,"g":1,"b":1,"a":0.7,"r2":1,"g2":0,"b2":1,"a2":0.7,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.35);\\ng2 = 0.5 + 0.5*sin(q2*0.578);\\nb2 = 0.5 + 0.5*sin(q2*0.689);\\n\\nang = q2;\\ntex_capture = above(q3,2);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.74218,"g":1,"b":1,"a":0.6,"r2":1,"g2":0,"b2":1,"a2":0.6,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.45);\\ng2 = 0.5 + 0.5*sin(q2*0.678);\\nb2 = 0.5 + 0.5*sin(q2*0.689);\\n\\nang = -q2*1.05;\\ntex_capture = above(q3,2);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":1.00035,"g":1,"b":1,"a":0.5,"r2":1,"g2":0,"b2":1,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.45);\\ng2 = 0.5 + 0.5*sin(q2*0.578);\\nb2 = 0.5 + 0.5*sin(q2*0.789);\\n\\nang = q2*0.899;\\ntex_capture = above(q3,2);"},{"baseVals":{"textured":1,"rad":3.25446,"g":1,"b":1,"a":0.3,"r2":1,"b2":1,"a2":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.5 + 0.5*sin(q2*0.45);\\ng = 0.5 + 0.5*sin(q2*0.578);\\nb = 0.5 + 0.5*sin(q2*0.689);\\n\\nr2 = 0.5 + 0.5*sin(q2*0.45);\\ng2 = 0.5 + 0.5*sin(q2*0.578);\\nb2 = 0.5 + 0.5*sin(q2*0.689);\\n\\ntex_capture = above(q3,2);"}],"waves":[{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\\nv = (cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\\nzs = 0.5*sin(s)*0.2*sin(v);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.11;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.15;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\\nv = (cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\\nzs = 0.5*sin(s)*0.2*sin(v);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.13;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.16;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\\nv = (cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\\nzs = 0.5*sin(s)*0.2*sin(v);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.16;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.16;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"sep":1,"spectrum":1,"usedots":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = abs(cos(q1*0.1))*3.14159;\\nv = abs(cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.5 + 0.0000001*cos(s))*cos(ss);\\nys = (0.5 + 0.0000001*cos(s))*sin(ss);\\nzs = 0.5*sin(s);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.14;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.15;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass*0.03;\\nq1 = basstime*4;\\n\\n//start in most active range\\nbasstime = if(below(basstime,1000),1000,basstime);\\n//basstime = if(above(basstime,495),450,basstime);\\n\\nbasstime = basstime + bass_att*0.03;\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\nmonitor = abs(cos(time))*3.14;\\n\\n\\nmv_a = above(diff,10);","pixel_eqs_eel":"zoom = 1 + 0.05*q3*rad;\\n\\ndecay_r = 0.2*rad*sin(q2*0.35) + 0.85 + 0.1*sin(q2);\\ndecay_g = 0.2*rad*sin(q2*0.5) + 0.85 + 0.1*sin(0.7*q2);\\ndecay_b = 0.2*rad*sin(q2*0.4) + 0.85 + 0.1*sin(0.8*q2);\\n\\nrot = 0;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_fc_main, uv).xyz * (0.8 + (q3 * 0.1)));\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 2.0);\\n  ret = tmpvar_1.xyz;\\n }"}')},"./presets/converted/Phat+fiShbRaiN+Eo.S_Mandala_Chasers_remix.json":e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.965,"echo_zoom":1.483827,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":1.470245,"zoomexp":4.778023,"zoom":0.998162,"warp":0.01,"sx":1.001828,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":1,"ob_g":0.5,"ob_b":0.5,"ob_a":1,"ib_size":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":4.800001,"mv_dx":0.4,"mv_l":1,"mv_r":0,"mv_g":0.5,"mv_a":0.1},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"textured":1,"x":1,"y":0.59,"rad":0.559231,"ang":3.39292,"tex_zoom":100,"r":0,"g":1,"b":1,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x=sin(time/10)*0.1+0.5+(treb_att*0.1);"},{"baseVals":{"sides":13,"additive":1,"x":0.9,"y":0.84,"rad":0.364567,"ang":3.078761,"tex_zoom":4.141463,"r":0.25,"g":0.05,"a":0.2,"g2":0,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//additive=above(sin(time*50),.95);"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"x":0.3,"y":0.7,"rad":1.089252,"ang":0.816814,"tex_ang":3.141592,"tex_zoom":0.504215,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//tex_ang=(sin(time/4)*0.5+0.5)*6.28;"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":0.284278,"ang":3.141593,"tex_ang":4.900885,"tex_zoom":2.987755,"g":1,"b":1,"r2":0.95,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"ang=time/10;\\ntex_zoom=3.4+(bass*0.03);\\nvar=above(bass_att,0.7);\\na=var;\\na2=var;\\nborder_a=var;\\n\\n\\n//This preset fluctuates between 53.2 and 55.44 fps on my box.  Texture size_2048 Meshsize_36*24\\n//On a SuperScan Pro 800 Hitachi\\n//On a Radion_9600\\n//1280*1024_Screen_Resolution\\n//;) hello! I am ATHEN ANDANDA!"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0,"a":0.06},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xspout=.5;\\nyspout=-.01;\\n\\npphase=9999*sample*sample*.0001;\\npphase2=.1+((sample*3349*sample)%100)*.01;\\npheight=((sample*9893)%100)*.002;\\nyheight=((sample*1231*sample)%100)*.01;\\n\\nr=((sample*5454)%100)*.01*abs(sin(time*.25));\\ng=((sample*9954)%100)*.01;\\n\\nxoffset1=(cos((time*pphase2)+pphase)*pheight);\\nxoffset2=-1*(cos((time*pphase2)+pphase)*pheight);\\n\\nlrorient=if(below(cos((time*pphase2)+pphase),cos(((time-.1)*pphase2)+pphase)),0,1);\\n\\npx=if(equal(lrorient,0),xspout-pheight+xoffset1,xspout+pheight-xoffset2);\\n\\npy=yspout+(abs(sin((time*pphase2)+pphase))*yheight);\\n\\nx=px;\\ny=py;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"pphase=(sample*5671*cos(time*.0001));\\npheight=((sample*7654)%100)*.005*sin(time*.2);\\n\\n//xspout=.5;\\nxspout=if(below(abs(sin(time*.2)),.005),.3+(rand(40)*.01),xspout);\\n//yspout=.5;\\nyspout=if(below(abs(sin(time*.2)),.005),.3+(rand(40)*.01),yspout);\\n\\npx=xspout+(cos(time+pphase)*pheight);\\npy=yspout+(sin(time+pphase)*pheight);\\n\\nx=px;\\ny=py;\\na=abs(sin(time*.2)*.3+(treb_att*.1));\\n\\nr=treb*2;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs*4;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=(flip*0.1-0.05)*(sample);\\nzp=0;\\n\\n//spin;\\nang=tm*20 + sin(tm*76 + time*4)*0.4;\\nsa=sin(ang);ca=cos(ang);\\nxr=xp*sa + yp*ca;\\nyr=xp*ca - yp*sa;\\nzr=zp;\\n\\nxp=xr;\\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=zr;\\n\\n//wrist movement;\\nang=sin(tm*2);\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*2.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*1)*1.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm);\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+1.5;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"},{"baseVals":{"usedots":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1;\\n\\nt7=.0;\\nt8=.45;\\n\\nddx=.25*cos(5.7119*t1)+2.5963*t1*sin(5.7119*t1);\\nddy=.3125*sin(5.7119*t1)-3.2453*t1*cos(5.7119*t1);\\nddtan=atan2(ddy,ddx);\\nt2=-ddtan;\\n\\nval1=((-.5*cos(5.7119*t1))*cos(t2)-(-.625*sin(5.7119*t1))*sin(t2));\\nval2=((-.5*cos(5.7119*t1))*sin(t2)+(-.625*sin(5.7119*t1))*cos(t2));\\n\\nt6=-sign(t1);\\nt7=t7-val1;\\nt8=t8-val2;\\n\\nt3=q2;","point_eqs_eel":"sample=pow(sample,.85);\\n\\nc1=6.2831*t1/(1.1-sample);\\nc=cos(c1);\\ns=sin(c1);\\nc2=sqrt(1-sample);\\n\\nox=t7-.5*c2*c;\\noy=t8-.625*c2*s;\\n\\nx=t7+((ox-t7)*cos(t2)-(oy-t8)*sin(t2));\\ny=t8+((ox-t7)*sin(t2)+(oy-t8)*cos(t2));\\n\\ninv=1/sqr(1.1-sample);\\nfdx=-.25*pow(1-sample,-.5)*c-c2*s*3.1415*t1*inv;\\nfdy=-.3125*c2*s+3.9268*c2*c*t1*inv;\\ninvMag=1/sqrt(sqr(fdx)+sqr(fdy));\\nfdx=fdx*invMag;\\nfdy=fdy*invMag;\\n\\nrdx=fdx*cos(1.5707+t2)-fdy*sin(1.5707+t2);\\nrdy=fdx*sin(1.5707+t2)+fdx*cos(1.5707+t2);\\ntt=rand(100)/100;\\nx=x+rdx*(.15*tt)*(1-sample);\\ny=y+rdy*(.15*tt)*(1-sample);\\n\\nx=x*.55;\\ny=(y-.5)*.55+.5;\\n\\nr=sample;\\ng=1-sample;\\nb=1;\\na=below(sample,.995);\\n\\n\\ny=y+t3;"}],"init_eqs_eel":"","frame_eqs_eel":"decay=.999;\\nwrap=sin(time*10);\\nmv_dx=bass;\\nib_a=.005;\\n\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\n\\nmtime=mtime+vol*0.01*(55/fps);\\n\\nq1=time*0.5;","pixel_eqs_eel":"zoom=1.005-(rad/100);\\nrot=rad/600;\\nsy=-1;","warp":"","comp":""}')},"./presets/converted/Rovastar + Loadus + Geiss - FractalDrop (Triple Mix).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.1,"wave_scale":3.815,"wave_smoothing":0.9,"modwavealphastart":0,"modwavealphaend":1.1,"zoom":1.0099,"warp":0.04177,"wave_r":0.65,"wave_g":0.65,"ob_size":0.007,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"x":0.37,"rad":6.81129,"ang":3.64425,"r":0,"a":0.5,"g2":0,"a2":0.5,"border_a":1},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"ang = q1*(0.303 + 0.01*t1);\\nr = min(1,max(0,0+ 0.1*sin(time*0.417 + 1)));\\ng = min(1,max(0,0 + 0.1*sin(time*0.391 + 2)));\\nb = min(1,max(0,0 + 0.1*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.02*sin(time*0.657 + 3)));\\ng2 = min(1,max(0,g2 + 0.02*sin(time*0.737 + 5)));\\nb2 = min(1,max(0,b2 + 0.02*sin(time*0.884 + 6)));\\nadditive =0.5+0.15*(bass+bass_att);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"x":0.37,"rad":0.89796,"ang":3.64425,"g":1,"b":1,"a":0.5,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.07*sin(q1*0.15+3);\\ny = y + 0.03*sin(q1*0.19+1);\\ntex_ang = q1*(0.01 + 0.0001*t1);\\nr = min(1,max(0,r + 0.01*sin(time*0.0417 + 1)));\\ng = min(1,max(0,g + 0.01*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.01*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.01*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.01*sin(time*0.0437 + 5)));\\nb2 = min(1,max(0,b2 + 0.01*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"x":0.67,"y":0.43,"rad":0.51386,"ang":4.20974,"g":1,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(q1*0.017);\\ny = y + 0.09*sin(q1*0.013);\\ntex_ang = q1*(0.02 + 0.0001*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.01*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.01*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.01*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.01*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.01*sin(time*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.01*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.22298,"r":0.6,"g":0.8,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = x + 0.08*sin(q1*0.25);\\ny = y + 0.1*sin(q1*0.5+2);\\nang = time;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"movement = movement + 0.1*max(0,bass+bass_att-2) + 0.15*pow(bass,3) + 0.005;\\nq1 = movement;\\nmonitor =q1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ) * 0.5));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 12.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.08, 0.08, 0.08));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  uv2_3.x = ((uv_1.x * -0.497265) - (uv_1.y * 0.8675987));\\n  uv2_3.y = ((uv_1.x * 0.8675987) + (uv_1.y * -0.497265));\\n  uv3_2.x = ((uv_1.x * -0.5000263) - (uv_1.y * -0.8660102));\\n  uv3_2.y = ((uv_1.x * -0.8660102) + (uv_1.y * -0.5000263));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = max (max (texture (sampler_main, (uv_1 + 0.5)).xyz, texture (sampler_main, (uv2_3 + 0.5)).xyz), texture (sampler_main, (uv3_2 + 0.5)).xyz);\\n  ret = tmpvar_4.xyz;\\n }"}')},"./presets/converted/Rovastar - Oozing Resistance.json":e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1.006596,"echo_alpha":0.5,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":4.099998,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-0.4,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999513,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"ob_r = 0.5+0.5*sin(2*time);\\nob_g = 0.5+0.5*sin(1.23*time);\\nob_b = 0.5+0.5*sin(time*1.321);\\nwave_a =0;\\nq8 =oldq8+ 0.003*(pow(1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\nwarp=0;","pixel_eqs_eel":"rot = 0.1*(rad+cos((5+5*sin(q8*1.211)*x)-0.5) -sin(((5+5*sin(q8*0.973))*y)-0.5));\\ndx = 0.005*(cos((5+5*sin(q8*1.311)*x)-0.5) -sin(((5+5*sin(q8*0.9431))*y)-0.5));\\ndy = 0.005*(cos((5+5*sin(q8*1.021)*x)-0.5) -sin(((5+5*sin(q8*0.987))*y)-0.5));\\nzoom =1- 0.005*(rad+cos((5+5*sin(q8*0.943)*x)-0.5) -sin(((5+5*sin(q8*1.0961))*y)-0.5));","warp":"","comp":""}')},"./presets/converted/ShadowHarlequin - LovelyShinySquares [ liquid starburst rmx ] - unchained + rovaster - luckless - martin - starfield sector.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"gammaadj":2.7,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"darken":1,"wave_a":0.865,"wave_scale":3.75,"wave_smoothing":0,"modwavealphastart":0.4,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.32545,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":9.6,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0.3},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.37,"rad":100,"ang":3.64425,"r":0,"a":0.1,"g2":0,"a2":0.13,"border_a":1},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"tex_ang = time*(0.3 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.2*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.2*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.2*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.2*sin(time*0.657 + 3)));\\ng2 = min(1,max(0,g2 + 0.2*sin(time*0.737 + 5)));\\nb2 = min(1,max(0,b2 + 0.2*sin(time*0.884 + 6)));\\n//a1 = (bass_att);\\na1 = 0.3 + 0.1 * sin(treb_att * .55);\\nmv_l = 3 + 1 * (treb_att * .25);\\n"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"x":0.37,"rad":0.89796,"ang":3.64425,"r":0,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(mid_att*0.15+3);\\ny = y + 0.03*sin(mid_att*0.19+1);\\ntex_ang = bass_att*(0.1 + 0.1*treb_att);\\nrad = rad * (0.9 + 0.6*treb_att);\\n\\n\\n\\nx = x + sin(treb_att * .005);\\ny = y + sin(mid_att * .013);\\na = 0 + (treb * .1);"},{"baseVals":{"enabled":1,"sides":13,"additive":1,"textured":1,"x":0.77,"y":0.43,"rad":0.51386,"ang":4.20974,"g":1,"b":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*(bass_att*0.07);\\ny = y + 0.03*(bass_att*0.03);\\ntex_ang = mid_att*(0.8 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*mid_att);\\nr = min(1,max(0,r + 0.1*(bass_att*0.417 + 1)));\\ng = min(1,max(0,g + 0.1*(mid_att*0.391 + 2)));\\nb = min(1,max(0,b + 0.1*(treb_att*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(mid_att*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(treb_att*0.484 + 6)));\\nsides = treb_att;\\n\\nx = x + sin(mid_att * .019);\\ny = y + sin(treb_att * .015);\\nnum_inst = sin(mid_att * .25);\\n\\nr = 0.5 + 0.5*sin(frame*2.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 1.188);"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"textured":1,"y":0.7,"rad":1.33692,"r":0,"g":0.8,"b":1,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = x + 0.2*sin(treb_att*0.25);\\ny = y + 0.1*sin(treb_att*0.5+2);\\nrot = mid_att * .45;\\n\\nr = min(1,max(0,r + 0.1*(bass_att*0.417 + 1)));\\ng = min(1,max(0,g + 0.1*(mid_att*0.391 + 2)));\\nb = min(1,max(0,b + 0.1*(treb_att*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(mid_att*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(treb_att*0.484 + 6)));\\nang = sin(treb_att);\\n\\nx = x + sin(mid_att * .016);\\ny = x + sin(treb_att * .015);\\nnum_inst = sin(treb_att * .35);\\n\\nr = 0.5 + 0.5*sin(frame*2.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 1.188);\\n\\n\\nrad = rad + (treb * .001);"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"scaling":9.86086},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass_att,1)*3.1415*.01*bass_att);\\nma=ma-(above(treb_att,1)*3.1415*.01*treb_att);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\n//a=(above(bass+mid+treb,.8));\\n//a = bass_att * .35;\\n\\nr = sin(treb+att * .45);\\nb = sin(treb+att * .65);\\ng = sin(treb+att * .25);\\n\\n"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"scaling":27.42973},"init_eqs_eel":"","frame_eqs_eel":"//r = min(1,max(0,r + 0.1*(bass_att*0.217 + 1)));\\n//g = min(1,max(0,g + 0.1*(treb_att*0.191 + 2)));\\n//b = min(1,max(0,b + 0.1*sin(mid_att*0.232 + 4)));\\n//r2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.257 + 3)));\\n//g2 = min(1,max(0,g2 + 0.1*sin(treb_att*0.237 + 5)));\\n//b2 = min(1,max(0,b2 + 0.1*sin(mid_att*0.284 + 6)));\\n\\n\\na1 = treb_att * .25;\\na2 = mid_att * .15;\\na3 = treb_att * .25;\\n\\n\\nr = sin(treb_att);\\nb = sin(treb_att);\\ng = sin(treb_att);","point_eqs_eel":"ma=ma+(above(bass_att,1)*3.1415*.01*bass_att);\\nma=ma-(above(treb_att,1)*3.1415*.01*treb_att);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\n//a=(above(bass+mid+treb,.8));\\n//a = bass_att * .35;\\n\\nr = sin(treb+att * .45);\\nb = sin(treb+att * .65);\\ng = sin(treb+att * .25);\\n\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":6.62306,"r":0.5,"g":0.5,"b":0.5},"init_eqs_eel":"","frame_eqs_eel":"//r = min(1,max(0,r + 0.1*(bass_att*0.217 + 1)));\\n//g = min(1,max(0,g + 0.1*(treb_att*0.191 + 2)));\\n//b = min(1,max(0,b + 0.1*(mid_att*0.232 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.257 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(treb_att*0.237 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(mid_att*0.284 + 6)));\\na1 = treb_att * .25;\\na2 = mid_att * .15;\\na3 = treb_att * .25;\\n","point_eqs_eel":"ma=ma+(above(bass_att,1)*3.1415*.01*bass_att);\\nma=ma-(above(treb_att,1)*3.1415*.01*treb_att);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\n//a=(above(bass+mid+treb,.8));\\n//a = bass_att * .35;\\n\\nr = sin(treb+att * .45);\\nb = sin(treb+att * .65);\\ng = sin(treb+att * .25);\\n\\n"},{"baseVals":{"enabled":1,"samples":142,"thick":1,"scaling":8.9269,"r":0.6,"g":0},"init_eqs_eel":"","frame_eqs_eel":"//r = min(1,max(0,r + 0.1*(bass_att*0.217 + 1)));\\n//g = min(1,max(0,g + 0.1*(treb_att*0.191 + 2)));\\n//b = min(1,max(0,b + 0.1*(mid_att*0.232 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(bass_att*0.257 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(treb_att*0.237 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(mid_att*0.284 + 6)));\\n\\n\\nr = 255;\\nb = 255;\\ng = 255;","point_eqs_eel":"ma=ma+(above(bass_att,1)*3.1415*.01*bass_att);\\nma=ma-(above(treb_att,1)*3.1415*.01*treb_att);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\n//a=(above(bass+mid+treb,.8));\\n//a = bass_att * .35;\\n\\nr = sin(treb+att * .45);\\nb = sin(treb+att * .65);\\ng = sin(treb+att * .25);\\n\\n"}],"init_eqs_eel":"","frame_eqs_eel":"//Variables controling the glitch effect////////////////////////////////////////\\ndecayrate = 0.09;   //How fast the glitch effect decays back to original image\\ntrebresp = 2.8;    //Level of treb needed for effect to take place\\n////////////////////////////////////////////////////////////////////////////////\\n\\n\\ncdecay = pow(decayrate, 30/fps);\\ncount = above(treb, trebresp)*1 + (1-above(treb, 3))*count;\\ncount = count - above(count, cdecay)*cdecay;\\nq29=count;\\nmonitor = q29;\\n\\n\\n\\ndecay = 0;\\n\\ndt = 0.02;\\n\\nh = h + v*dt;\\n\\nv = v*0.986 + a*dt;\\na = -(h - 0.5)*0.4 + sqrt(- min(0,(w1v+w2v)*0.1)) - .175;\\n\\nmonitor = w2;\\n\\n\\nw1 = w1 + w1v*dt;\\nw1v = w1v*0.98 + w1a*dt;\\nw1a = -(w1)*20 - w2a*0.1   + av*30;\\n\\nw2 = w2 + w2v*dt;\\nw2v = w2v*0.98 + w2a*dt;\\nw2a = -(w2-w1)*20;\\n\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmi = min(min(bb,mm),tt);\\nma = max(max(bb,mm),tt);\\nav = (bb+mm+tt-mi-ma);\\nq5 = av;\\navn = (av-mi)/(ma-mi);\\nav = abs(avo-avn);\\navo = avn;\\n\\nq1 = h*0.8 + 0.12;\\nq2 = (w1);\\nq3 = (w2 + w1);\\nq4 = 0.1+ avo*0.1;\\n\\n\\n\\nwave_r = 0.5 + 0.5*sin(frame*2.5);\\nwave_b = 0.5 + 0.5*sin(frame*0.5 + 1.094);\\nwave_g = 0.5 + 0.5*sin(frame*0.5 + 1.188);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv * texsize.xy) * 0.08);\\n  uv_1 = (uv - ((\\n    (sin(tmpvar_3) / cos(tmpvar_3))\\n   * texsize.zw) * (treb * 3.0)));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (texture (sampler_main, uv_1).xyz + (vec3(dot (texture (sampler_noise_lq, \\n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\\n  ret_2 = ((mix (tmpvar_4, \\n    (1.0 - tmpvar_4.zyx)\\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\\n    (1.0 - rad)\\n  , \\n    (treb * 90.0)\\n  )));\\n  ret_2 = (ret_2 + (ret_2 * (vol * 0.001)));\\n  ret_2 = (ret_2 + (ret_2 * (treb * 0.025)));\\n  ret_2 = (ret_2 + 0.001);\\n  uv_1 = (uv_1 + ((treb_att * 0.001) * texture (sampler_main, uv_1)).xy);\\n  ret_2 = (ret_2 + ((\\n    (texture (sampler_blur3, uv_1).xyz * scale3)\\n   + bias3) * 0.05));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 crisp_2;\\n  vec2 uv3_3;\\n  vec2 uv2_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv - 0.5);\\n  tmpvar_6 = (tmpvar_7 * aspect.xy);\\n  float tmpvar_8;\\n  tmpvar_8 = (0.1 / (sqrt(\\n    dot (tmpvar_6, tmpvar_6)\\n  ) + 0.05));\\n  vec2 tmpvar_9;\\n  float tmpvar_10;\\n  tmpvar_10 = (ang / 3.14);\\n  tmpvar_9.x = tmpvar_10;\\n  tmpvar_9.y = (tmpvar_8 * 1.5);\\n  uv2_4.y = (tmpvar_9.y + (0.1 * time));\\n  uv2_4.x = (tmpvar_10 + (0.02 * time));\\n  uv3_3.y = (tmpvar_8 + q30);\\n  uv3_3.x = (tmpvar_10 + (time / 32.0));\\n  crisp_2 = ((texture (sampler_main, fract(uv2_4)).xyz + (2.0 * texture (sampler_main, \\n    fract(uv3_3)\\n  ).xyz)) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_4)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_3)).xyz * scale2) + bias2)\\n  )));\\n  crisp_2 = ((3.0 * crisp_2) * rad);\\n  float tmpvar_11;\\n  tmpvar_11 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  ret_5 = ((crisp_2 + (\\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_11)) + (tmpvar_11 * texture (sampler_main, fract(uv)).xyz));\\n  uv_1 = ((tmpvar_7 * aspect.xy) + 0.5);\\n  vec2 tmpvar_12;\\n  tmpvar_12 = (1.0 - uv_1);\\n  vec3 tmpvar_13;\\n  tmpvar_13 = (texture (sampler_main, uv_1).xyz + (2.0 * (\\n    (texture (sampler_blur2, uv_1).xyz * scale2)\\n   + bias2)));\\n  vec3 tmpvar_14;\\n  tmpvar_14 = (texture (sampler_main, tmpvar_12).xyz + (2.0 * (\\n    (texture (sampler_blur2, tmpvar_12).xyz * scale2)\\n   + bias2)));\\n  vec3 tmpvar_15;\\n  tmpvar_15 = mix (ret_5, mix ((tmpvar_13 * tmpvar_14), (tmpvar_13 + tmpvar_14), vec3((q29 * 0.16))), vec3((q29 * 0.5)));\\n  vec3 tmpvar_16;\\n  tmpvar_16 = mix (tmpvar_15, (1.0 - tmpvar_15), ((q29 * tmpvar_15) * (rad * \\n    (2.0 - q29)\\n  )));\\n  ret_5 = (tmpvar_16 * (tmpvar_16 + (treb * 0.001)));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_5;\\n  ret = tmpvar_17.xyz;\\n }"}')},"./presets/converted/TonyMilkdrop - Leonardo Da Vinci's Balloon [Flexi - merry-go-round + techstyle].json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"echo_zoom":1,"wave_mode":1,"wave_thick":1,"wrap":0,"invert":1,"wave_scale":0.5,"wave_smoothing":0.45,"warpanimspeed":2.217,"warpscale":100,"zoomexp":100,"zoom":1.01,"warp":1.25946,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_r":1,"ib_g":1,"ib_b":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"q1 = 0.0003*(pow(1.2+1*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\\nmonitor = q1;\\nwave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);\\nob_r = ob_r + 1*sin(time*2.26);\\nob_g = ob_g + 1*sin(time*2.46);\\nob_b = ob_b + 1*sin(time*2.66);","pixel_eqs_eel":"zoom = zoom + 0.125*sin(q1);\\nrot = rot + 0.25*sin(fps*100)*q1/2;\\nzoom = zoom - 0.05*sin(rad);\\nrot = rot + 0.05*sin(fps*5);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = fract(uv);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 12.0);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((2.0 * \\n    ((texture (sampler_blur3, (uv_orig + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale3) + bias3)\\n  ) - (2.0 * \\n    ((texture (sampler_blur3, (uv_orig - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale3) + bias3)\\n  )) * 0.5);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (((2.0 * \\n    ((texture (sampler_blur3, (uv_orig + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale3) + bias3)\\n  ) - (2.0 * \\n    ((texture (sampler_blur3, (uv_orig - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale3) + bias3)\\n  )) * 0.5);\\n  ret_1.x = ((texture (sampler_fc_main, tmpvar_2).x - (\\n    (((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3) - texture (sampler_fc_main, tmpvar_2).xyz)\\n  .x * 0.1)) - 0.035);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_5.x;\\n  tmpvar_7.y = tmpvar_6.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.y;\\n  tmpvar_8.y = tmpvar_6.y;\\n  ret_1.y = (((texture (sampler_fc_main, \\n    (((uv_orig + (\\n      ((texture (sampler_noise_lq, tmpvar_3).xy - 0.5) * texsize.zw)\\n     * 4.0)) - ((tmpvar_7 * texsize.zw) * 4.0)) + ((tmpvar_8 * texsize.zw) * 8.0))\\n  ).y + \\n    ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5) * 0.1)\\n  ) - 0.012) + (texture (sampler_pc_main, uv_orig).z * 0.2)).x;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_6.x;\\n  tmpvar_9.y = -(tmpvar_5.x);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = ((uv_orig + (\\n    ((texture (sampler_noise_lq, tmpvar_3).xy - 0.5) * texsize.zw)\\n   * 2.0)) + ((tmpvar_9 * texsize.zw) * 64.0));\\n  ret_1.z = (((\\n    (texture (sampler_fc_main, tmpvar_10).z + ((texture (sampler_fc_main, tmpvar_10).z - (\\n      (texture (sampler_blur2, tmpvar_10).xyz * scale2)\\n     + bias2).z) * 0.2))\\n   + \\n    (texture (sampler_noise_lq, tmpvar_3).xyz * 0.1)\\n  ) - (\\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\\n   + bias3).x) - (clamp (\\n    (1.0 - ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2).x)\\n  , 0.0, 1.0) * 0.04)).x;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_1;\\n  ret = tmpvar_11.xyz;\\n }","comp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  xlat_mutabled = (texsize.zw * 1.5);\\n  xlat_mutabledx = (texture (sampler_main, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz);\\n  xlat_mutabledy = (texture (sampler_main, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = xlat_mutabledx.y;\\n  tmpvar_2.y = xlat_mutabledy.y;\\n  vec2 x_3;\\n  x_3 = (tmpvar_2 * 8.0);\\n  ret_1 = (((texture (sampler_main, uv).x * \\n    (1.0 - sqrt(dot (x_3, x_3)))\\n  ) * pow (hue_shader, vec3(6.0, 6.0, 6.0))) * 1.4);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec2 x_5;\\n  x_5 = (tmpvar_4 * 4.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = mix (ret_1, vec3(1.0, 1.0, 1.0), vec3(sqrt(dot (x_5, x_5))));\\n  ret_1 = tmpvar_6;\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = tmpvar_6;\\n  ret = tmpvar_7.xyz;\\n }"}')},"./presets/converted/TonyMilkdrop - Magellan's Nebula [Flexi - you enter first + multiverse].json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.3,"decay":1,"echo_zoom":1.75,"echo_alpha":0.15,"echo_orient":3,"wave_mode":1,"wave_dots":1,"darken":1,"wave_scale":0.5,"wave_smoothing":0.9,"warp":0.01,"mv_l":5},"shapes":[{"baseVals":{"enabled":1,"sides":100,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 1*sin(time*0.339);\\ng = g + 1*sin(time*0.369);\\nb = b + 1*sin(time*0.399);\\nr2 = r2 + 1*sin(time*0.113);\\ng2 = g2 + 1*sin(time*0.123);\\nb2 = b2 + 1*sin(time*0.133);\\nrad = q1/3;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"q1 = 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\\nmv_a = q1;\\nmv_x = mv_x + 1*sin(time);\\nmv_y = mv_y + 1*cos(time);\\nmv_dx = mv_dx + 1.25*sin(fps*8);\\nmv_dy = mv_dy + 1.35*sin(fps*8);\\nmv_r = mv_r + 1*sin(time*0.565);\\nmv_g = mv_g + 1*sin(time*0.615);\\nmv_b = mv_b + 1*sin(time*0.665);\\nwave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);","pixel_eqs_eel":"zoom = zoom + 0.0125*q1;\\nrot = rot + 0.025*sin(fps*10)*q1;\\nwarp = 0;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = ((640.0 * texsize.z) * ((2.0 * \\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ) - (2.0 * \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  )));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = ((512.0 * texsize.w) * ((2.0 * \\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ) - (2.0 * \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.y;\\n  tmpvar_5.y = tmpvar_4.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.x;\\n  tmpvar_6.y = tmpvar_4.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = -(tmpvar_3.y);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv - ((\\n    ((tmpvar_5 * 0.3) + (tmpvar_6 * 0.1))\\n   + \\n    (tmpvar_7 * 0.01)\\n  ) * 0.01));\\n  ret_2.x = texture (sampler_fw_main, (tmpvar_8 - floor(tmpvar_8))).x;\\n  ret_2.x = (ret_2.x + ((\\n    (2.0 * ret_2.x)\\n   - \\n    (2.0 * ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1).x)\\n  ) * 0.25));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.y;\\n  tmpvar_9.y = tmpvar_4.y;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = -(tmpvar_3.y);\\n  my_uv_1 = ((uv - (tmpvar_9 * 0.01)) + (tmpvar_10 * 0.001));\\n  ret_2.y = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).y;\\n  ret_2.y = (ret_2.y + ((\\n    ((2.0 * ret_2.y) - (2.0 * ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y))\\n   * 0.025) + 0.01));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_2;\\n  ret = tmpvar_11.xyz;\\n }","comp":"vec2 xlat_mutablefactorA;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 dz_2;\\n  vec3 dy_3;\\n  vec3 dx_4;\\n  vec2 d_5;\\n  vec3 ret_6;\\n  xlat_mutablefactorA = (uv - vec2(0.5, 0.5));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = -((xlat_mutablefactorA.y * -1024.0));\\n  tmpvar_7.y = (xlat_mutablefactorA.x * -1024.0);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7.x;\\n  tmpvar_8.y = -(tmpvar_7.y);\\n  uv_1 = (vec2(-100.0, 100.0) * (tmpvar_8 / (\\n    (tmpvar_7.x * tmpvar_7.x)\\n   + \\n    (tmpvar_7.y * tmpvar_7.y)\\n  )).yx);\\n  uv_1 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((mix ((0.5 + \\n        (((0.5 + (\\n          (uv - 0.5)\\n         * vec2(1.1, 0.81))) - 0.5) * 2.0)\\n      ), (uv_1 + 0.5), vec2(0.5, 0.5)) * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.98));\\n  vec2 tmpvar_9;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_9.x = (texture (sampler_main, (uv_1 + tmpvar_10)).xyz - texture (sampler_main, (uv_1 - tmpvar_10)).xyz).y;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_9.y = (texture (sampler_main, (uv_1 + tmpvar_11)).xyz - texture (sampler_main, (uv_1 - tmpvar_11)).xyz).y;\\n  d_5 = (texsize.zw * 2.0);\\n  dx_4 = (((2.0 * \\n    ((texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * d_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * d_5))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  dy_3 = (((2.0 * \\n    ((texture (sampler_blur1, (uv_1 + (vec2(0.0, 1.0) * d_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_1 - (vec2(0.0, 1.0) * d_5))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = dx_4.y;\\n  tmpvar_12.y = dy_3.y;\\n  dz_2 = ((tmpvar_9 * 3.0) + tmpvar_12);\\n  ret_6 = (vec3(((\\n    pow ((sqrt(dot (dz_2, dz_2)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv_1).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = dx_4.x;\\n  tmpvar_13.y = dy_3.x;\\n  vec3 tmpvar_14;\\n  tmpvar_14 = mix (mix (ret_6, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv_1 + ((tmpvar_13 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv_1).zzz);\\n  ret_6 = tmpvar_14;\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = tmpvar_14;\\n  ret = tmpvar_15.xyz;\\n }"}')},"./presets/converted/Unchained - Rewop.json":e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.94,"echo_zoom":0.9998,"echo_alpha":0.4999,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_dots":1,"wave_brighten":0,"wave_a":1.254574,"wave_scale":0.45029,"wave_smoothing":0,"zoomexp":1.008151,"zoom":0.659411,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_r":1,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.9,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0,"mv_g":0.7,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nle=1+.5+2*sin(bass_att);\\nbpulse=band(above(le,bth),above(le-bth,bblock));\\nbblock=le-bth;\\nbth=if(above(le,bth),le+114/(le+10)-7.407,\\nbth+bth*.07/(bth-12)+below(bth,2.7)*.1*(2.7-bth));\\nbth=if(above(bth,6),6,bth);\\nbres=bpulse*sin(pulse+le*.5) + bnot(bpulse)*bres;\\n\\nle=1+.5+2*sin(treb_att);\\ntpulse=band(above(le,tth),above(le-tth,tblock));\\ntblock=le-tth;\\ntth=if(above(le,tth),le+114/(le+10)-7.407,\\ntth+tth*.07/(tth-12)+below(tth,2.7)*.1*(2.7-tth));\\ntth=if(above(tth,6),6,tth);\\ntres=tpulse*sin(pulse+le*.5) + bnot(tpulse)*tres;\\n\\nle=1+.5+2*sin(mid_att);\\nmpulse=band(above(le,mth),above(le-mth,mblock));\\nmblock=le-mth;\\nmth=if(above(le,mth),le+114/(le+10)-7.407,\\nmth+mth*.07/(mth-12)+below(mth,2.7)*.1*(2.7-mth));\\nmth=if(above(mth,6),6,mth);\\nmres=mpulse*sin(pulse+le*.5) + bnot(mpulse)*mres;\\n\\n\\n\\npulse=if(above(abs(pulse),3.14),-3.14,pulse+(bth+mth+tth)*.003);\\nq1=bres;\\nq2=tres;\\nq3=mres;\\nq4=sin(pulse);\\n\\nmod_state=(above(q1,0)+above(q2,0)+above(q3,0))*(1+above(q4,0));\\nccl=ccl+tpulse+mpulse-bpulse;\\nq5=cos(pulse*(.5+.1*mod_state));\\nq6=sin(pulse*(.5+pow(.25,mod_state)));\\nq7=mod_state;\\nq8=ccl;\\nob_r=.5+.5*cos(q1+q7);\\nob_g=.5+.5*cos(q2*3.14+q7);\\nob_b=.5+.5*cos(q3*2+sin(time*.0816));\\nib_size=.025+.02*q2;\\nob_size=.03+.02*q3-.002*q7;\\nwave_r=.5+.5*sin(q1*q7+time*2.183);\\nwave_g=.5+.5*sin(q2*3+time*1.211);\\nwave_b=.5+.5*sin(q3+time*1.541);\\n\\nob_a=.8+.2*q2;\\nzoom=zoom+.01*q4;","pixel_eqs_eel":"grid=pow(sin(rad*q6*q2+x*y*q6*q3)*2,1+q7%5)%2;\\nrot=bnot(grid)+grid*q4;\\nsx=sx+sin((q2+.5)*x)*.003;\\nsy=sy+sin((q1+3.4)*y)*.003;\\nzoom=zoom+.11*cos(rad*3.14)*q4;","warp":"","comp":""}')},"./presets/converted/Unchained - Unified Drag 2.json":e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.96,"echo_zoom":2.216266,"echo_alpha":0.78,"wave_mode":5,"additivewave":1,"wave_dots":1,"wave_brighten":0,"brighten":1,"wave_a":1.254574,"wave_scale":0.931011,"wave_smoothing":0,"zoomexp":1.0081,"fshader":0.4,"zoom":0.820774,"cx":0.4999,"warp":0.01,"sx":0.999998,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_r":1,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.9,"mv_x":0,"mv_y":0,"mv_l":0.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nle=1+.5+2*sin(bass_att);\\nbpulse=band(above(le,bth),above(le-bth,bblock));\\nbblock=le-bth;\\nbth=if(above(le,bth),le+114/(le+10)-7.407,\\nbth+bth*.07/(bth-12)+below(bth,2.7)*.1*(2.7-bth));\\nbth=if(above(bth,6),6,bth);\\nbres=bpulse*sin(pulse+le*.5) + bnot(bpulse)*bres;\\n\\nle=1+.5+2*sin(treb_att);\\ntpulse=band(above(le,tth),above(le-tth,tblock));\\ntblock=le-tth;\\ntth=if(above(le,tth),le+114/(le+10)-7.407,\\ntth+tth*.07/(tth-12)+below(tth,2.7)*.1*(2.7-tth));\\ntth=if(above(tth,6),6,tth);\\ntres=tpulse*sin(pulse+le*.5) + bnot(tpulse)*tres;\\n\\nle=1+.5+2*sin(mid_att);\\nmpulse=band(above(le,mth),above(le-mth,mblock));\\nmblock=le-mth;\\nmth=if(above(le,mth),le+114/(le+10)-7.407,\\nmth+mth*.07/(mth-12)+below(mth,2.7)*.1*(2.7-mth));\\nmth=if(above(mth,6),6,mth);\\nmres=mpulse*sin(pulse+le*.5) + bnot(mpulse)*mres;\\n\\n\\n\\npulse=if(above(abs(pulse),3.14),-3.14,pulse+(bth+mth+tth)*.003);\\nq1=bres;\\nq2=tres;\\nq3=mres;\\nq4=sin(pulse);\\n\\nmod_state=(above(q1,0)+above(q2,0)+above(q3,0))*(1+above(q4,0));\\nccl=ccl+tpulse+mpulse-bpulse;\\nq5=cos(pulse*(.5+.1*mod_state));\\nq6=sin(pulse*(.5+pow(.25,mod_state)));\\nq7=mod_state;\\nq8=ccl;\\nob_r=.5+.5*cos(q1+q7);\\nob_g=.5+.5*cos(q2*3.14+q7);\\nob_b=.5+.5*cos(q3*2+sin(time*.0816));\\nib_size=.025+.02*q2;\\nob_size=.03+.02*q3-.002*q7;\\nwave_r=.5+.5*sin(q1*q7+time*2.183);\\nwave_g=.5+.5*sin(q2*3+time*1.211);\\nwave_b=.5+.5*sin(q3+time*1.541);\\n\\nob_a=.8+.2*q2;\\nrot=1;\\ncx=cx+.05*q4;\\ncy=cy+.05*q5;\\nzoom=.95+.05*q6;","pixel_eqs_eel":"snee=bnot(above(sin(ang)-x,.5)*above(q2,0)+above(y-cos(ang),.5)*above(q1,0));\\nsnur=bnot(below(x,.5)*above(q3,0)+below(y,.5)*below(q7,4));\\ngrid=sin(sigmoid(sin(y*6.28*q2),sin(x*6.28*q6))*(10+q7));\\nzoom=zoom+.02*cos(rad*2+rad*q2)*sign(snee)-.04*sin(rad*3.14*q3-3.14*cos(rad*3.14*snur-3.14*q6));\\nsx=if(below(x,.5)*below(y,.5),sx+.2*q4*snur,1+.1*q2*grid);\\nsy=if(below(x,.5)*below(y,.5),sy+.2*q5*snee,1+.1*q2*grid);","warp":"","comp":""}')},"./presets/converted/Zylot - Paint Spill (Music Reactive Paint Mix).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"wave_mode":2,"wrap":0,"wave_a":0.001,"wave_scale":5.819,"wave_mystery":-0.38,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"rad":0.16446,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = if(above(bass,2.5),1,0);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"y = sample;\\nx = (value1+value2)*.003;\\na = (value1+value2)*.1;\\nr = .5+.3*sin(sample*10+time);\\ng = .5+.3*cos(sample*10-time*1.334);\\nb = .5+.3*sin(sample*10+time*.998);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nwave_r = wave_r + .4*sin(time*.333)+bass_att*.2;\\nwave_g = wave_g + .4*sin(time*.555)+treb_att*.2;\\nwave_b = wave_b + .4*sin(time*.444)+mid_att*.2;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 muv_1;\\n  vec3 ret_2;\\n  float tmpvar_3;\\n  tmpvar_3 = (2.0 * bass_att);\\n  muv_1.x = (uv.x - ((\\n    ((0.01 * cos((\\n      (uv.x * (5.0 + tmpvar_3))\\n     + time))) + (0.01 * cos((\\n      (uv.y * (5.0 + tmpvar_3))\\n     + time))))\\n   * 0.5) * treb_att));\\n  float tmpvar_4;\\n  tmpvar_4 = (2.0 * mid_att);\\n  muv_1.y = (uv.y + ((\\n    ((0.01 * sin((\\n      (uv.x * (5.0 + tmpvar_4))\\n     + time))) - (0.01 * cos((\\n      (uv.y * (5.0 + tmpvar_4))\\n     + time))))\\n   * 0.5) * bass_att));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = ((texture (sampler_blur2, muv_1).xyz * scale2) + bias2);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_pw_main, muv_1);\\n  ret_2.x = (tmpvar_6.x + (tmpvar_5.x * (bass_att * 0.05)));\\n  ret_2.y = (tmpvar_6.y + (tmpvar_5.y * (treb_att * 0.05)));\\n  ret_2.z = (tmpvar_6.z + (tmpvar_5.z * (mid_att * 0.05)));\\n  if ((ret_2.x > 0.9)) {\\n    ret_2.x = 0.0;\\n  };\\n  if ((ret_2.y > 0.9)) {\\n    ret_2.y = 0.0;\\n  };\\n  if ((ret_2.z > 0.9)) {\\n    ret_2.z = 0.0;\\n  };\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_2;\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec3 ret1_1;\\n  vec2 uv1_2;\\n  vec3 ret_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_main, uv);\\n  ret_3 = (tmpvar_4.xyz * (0.6 + (0.3 * \\n    sin(((uv.x * 10.0) + time))\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\\n  uv1_2 = ((0.5 * cos(\\n    (((uv - 0.5) * 1.5) + 1.6)\\n  )) - (3.0 * tmpvar_5));\\n  ret1_1 = ((0.3 * dot (tmpvar_4.xyz, vec3(0.32, 0.49, 0.29))) + ((\\n    clamp ((0.01 / sqrt(dot (uv1_2, uv1_2))), 0.0, 1.0)\\n   * \\n    mix (vec3(dot (((texture (sampler_blur2, uv).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29))), ret_3, pow (ret_3, vec3((0.05 + (mid_att * 0.03)))))\\n  ) * (\\n    (4.0 + bass)\\n   + \\n    (mid + treb_att)\\n  )));\\n  ret_3 = ret1_1;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret1_1;\\n  ret = tmpvar_6.xyz;\\n }"}')},"./presets/converted/Zylot - Star Ornament.json":e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.997,"echo_zoom":0.996629,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001185,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"rad":0.34,"ang":0.53,"r":0.56,"g":0.36,"r2":0.9,"a2":0.5,"border_a":0},"init_eqs_eel":"bassspin = 0;\\nangle = 0;","frame_eqs_eel":"ang = angle;\\nbassspin = if(above(bass*.05,bassspin),bassspin+.001,bassspin-.001);\\nbassspin = bassspin*above(bassspin,0);\\nangle = angle + bassspin;\\n\\nr = bass*.3;\\ng = treb*.3;\\nb = mid*.3;\\nr2 = .8+.2*sin(time*1.2);\\ng2 = .8+.2*sin(time*.9777);\\nb2 = .8+.2*sin(time*.7005);\\n\\nborder_a = 1*above(bass+treb+mid,5);\\n\\nx = .5 + q1;\\ny = .5 + q2;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.108073,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"bassspin = 0;\\nxpos = .25;\\nypos = .25;","frame_eqs_eel":"bassspin = if(above(bass*.05,bassspin),bassspin+.001,bassspin-.001);\\nbassspin = bassspin*above(bassspin,0);\\nxpos = xpos + bassspin;\\nypos = ypos + bassspin;\\nx = .5 + q1 + .13*sin(xpos);\\ny = .5 + q2 + .18*cos(ypos);"},{"baseVals":{"enabled":1,"sides":29,"additive":1,"textured":1,"rad":0.105693,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"bassspin = 0;\\nxpos = 2.3;\\nypos = 2.3;","frame_eqs_eel":"bassspin = if(above(bass*.05,bassspin),bassspin+.001,bassspin-.001);\\nbassspin = bassspin*above(bassspin,0);\\nxpos = xpos + bassspin;\\nypos = ypos + bassspin;\\nx = .5 + q1 +.13*sin(xpos);\\ny = .5 + q2 + .18*cos(ypos);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.091434,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"bassspin = 0;\\nxpos = 4.5;\\nypos = 4.5;","frame_eqs_eel":"bassspin = if(above(bass*.05,bassspin),bassspin+.001,bassspin-.001);\\nbassspin = bassspin*above(bassspin,0);\\nxpos = xpos + bassspin;\\nypos = ypos + bassspin;\\nx = .5 + q1 + .13*sin(xpos);\\ny = .5 + q2 + .18*cos(ypos);"}],"waves":[{"baseVals":{"scaling":0.010576,"enabled":0},"init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\\npulse = pulse*above(pulse,0);\\nt1 = pulse;","point_eqs_eel":"x = sqrt(sample*mid*.05);\\ny = .5 + (.1+t1)*cos(sample*20);"},{"baseVals":{"enabled":0},"init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\\npulse = pulse*above(pulse,0);\\nt1 = pulse;","point_eqs_eel":"x = sqrt(sample*mid*.05);\\ny = .5 + -(.1+t1)*cos(sample*20);"},{"baseVals":{"enabled":0},"init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\\npulse = pulse*above(pulse,0);\\nt1 = pulse;","point_eqs_eel":"x = 1 - sqrt(sample*mid*.05);\\ny = .5 + (.1+t1)*cos(sample*20);"},{"baseVals":{"enabled":0},"init_eqs_eel":"pulse = 0;","frame_eqs_eel":"pulse = if(above(bass*.05,pulse),pulse+.001,pulse-.001);\\npulse = pulse*above(pulse,0);\\nt1 = pulse;","point_eqs_eel":"x = 1 - sqrt(sample*mid*.05);\\ny = .5 + -(.1+t1)*cos(sample*20);"}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\ndecay = .92;\\n\\nvol = (bass+mid+att)/6;\\nxamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxaccel = xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nyamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyaccel = ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\n\\nq1 = ypos;\\nq2 = xpos;","pixel_eqs_eel":"zoom = zoom + (q1*q2)*2;\\nrot = 10+(rad*treb*.1);","warp":"","comp":""}')},"./presets/converted/Zylot - True Visionary (Final Mix).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":0.997,"echo_zoom":0.997,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"rad":0.34,"ang":0.53,"r":0.56,"g":0.36,"r2":0.9,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + time;"},{"baseVals":{"sides":3,"rad":0.41,"r":0,"g":0.8,"b":0.7,"g2":0.4,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang - time*.333;"},{"baseVals":{"sides":3,"rad":0.21,"r":0.84,"r2":1,"g2":0.58,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + time*4;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));\\ny = .5 + (bass*.2)*cos(sample*2*(time*10*treb));\\nr = 1 + .5*sin(sample*.10+(time*10*bass));\\ng = 1 + .5*sin(sample*2+(time*50*treb));\\nb = 1 + .5*sin(sample*5+(time*20*mid));\\na = r;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\ndecay = .92;","pixel_eqs_eel":"zoom = zoom + (.03*(bass_att*bass_att))*rad;\\nrot = rot + rad*(-2.5&(cos(time)*5))*.01;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\\n  uv1_1 = ((0.5 * cos(\\n    (((uv - 0.5) * 1.5) + 1.6)\\n  )) - (3.0 * tmpvar_4));\\n  ret_2 = (0.8 * ((0.3 * \\n    dot (tmpvar_3, vec3(0.32, 0.49, 0.29))\\n  ) + (\\n    (clamp ((0.01 / sqrt(\\n      dot (uv1_1, uv1_1)\\n    )), 0.0, 1.0) * tmpvar_3)\\n   * \\n    ((4.0 + bass) + (mid + treb_att))\\n  )));\\n  ret_2 = (ret_2 * 0.77);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }"}')},"./presets/converted/_Aderrasi - Wanderer in Curved Space - mash0000 - faclempt kibitzing meshuggana schmaltz (Geiss color mix).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.995,"echo_zoom":1,"echo_orient":1,"wave_mode":5,"wave_brighten":0,"wrap":0,"wave_a":100,"wave_scale":0.721,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\n\\nxs = above(sin(12*dx_r*bass),0)*(dy_r*sin(2*rad)) + \\nbelow(sin(12*dx_r*bass),0)*(cos(time)*dx_r*sin(0.6*rad));\\n\\nzoom = zoom + abs(12*xs);\\nrot = rot + 5*xs*cos(1-xs*rad*12*dx_r);\\ndx = dx + dx_r;\\ndy = dy + dy_r;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 * hue_shader);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.5, 1.0, 0.1));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},"./presets/converted/_Geiss - Artifact 01.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.998,"echo_zoom":1.421,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"darken_center":1,"wave_a":1.193,"wave_scale":1.489,"wave_smoothing":0,"modwavealphastart":0.87,"modwavealphaend":1.09,"warpscale":3.138,"zoom":1.003,"warp":0.09218,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.6,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.3650*( 0.60*sin(4.437*time) + 0.40*sin(3.970*time) );\\nwave_g = wave_g + 0.3650*( 0.60*sin(4.344*time) + 0.40*sin(3.841*time) );\\nwave_b = wave_b + 0.3650*( 0.60*sin(4.251*time) + 0.40*sin(3.055*time) );\\nrot = rot + 0.02*( 0.60*sin(0.181*time) + 0.09*sin(-0.279*time) );\\nzoom = zoom + 0.025*( 0.60*sin(0.3131*time+2) + 0.4*sin(-0.479*time+4) );\\n//cx = cx + 0.10*( 0.60*sin(0.374*time) + 0.10*sin(0.294*time) );\\n//cy = cy + 0.10*( 0.60*sin(0.393*time) + 0.10*sin(0.223*time) );\\n//dx = dx + 0.0040*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\n//dy = dy + 0.0040*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\n\\n//wave_x = 0.1 + rand(80)*0.01;\\n//wave_y = 0.1 + rand(80)*0.01;\\nt2 = time*6;\\nwave_x = 0.5 + 0.2*( 0.60*sin(0.374*t2) + 0.40*sin(0.294*t2) );\\nwave_y = 0.5 + 0.2*( 0.60*sin(0.393*t2) + 0.40*sin(0.223*t2) );","pixel_eqs_eel":"dx = 0;\\ndy = 0;\\ndx = dx + cos(y*29.37 - time*1.9) * 1.0/pixelsx * 2;\\ndy = dy + cos(x*33.21 - time*1.7) * 1.0/pixelsy * 2;\\ndx = dx + cos(y*77.55 - time*2.1) * 1.0/pixelsx * 1.5;\\ndy = dy + cos(x*78.32 - time*2.4) * 1.0/pixelsy * 1.5;","warp":" shader_body { \\n  vec2 dxy_1;\\n  dxy_1.x = cos(((154.56 * uv_orig.y) - time));\\n  dxy_1.y = cos(((154.56 * uv_orig.x) - time));\\n  float tmpvar_2;\\n  tmpvar_2 = (time * 5.0);\\n  dxy_1.x = (dxy_1.x + cos((\\n    (412.16 * uv_orig.y)\\n   - tmpvar_2)));\\n  dxy_1.y = (dxy_1.y + cos((\\n    (412.16 * uv_orig.x)\\n   - tmpvar_2)));\\n  dxy_1.y = (dxy_1.y + 0.15);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (max (texture (sampler_fw_main, (uv + \\n    (dxy_1 * texsize.zw)\\n  )).xyz, (texture (sampler_main, uv_orig).xyz * 0.8)) - 0.004);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * 0.8) + ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 0.7));\\n  ret = tmpvar_1.xyz;\\n }"}')},"./presets/converted/_Geiss - Desert Rose 2.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_a":0.274,"wave_scale":2.827,"wave_smoothing":0.09,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpscale":3.138,"zoom":0.993,"warp":0.00054,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ) * 0.2));\\n  ret_1 = (ret_1 - 0.02);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 1.15);\\n  ret = tmpvar_1.xyz;\\n }"}')},"./presets/converted/_Geiss - untitled.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"additivewave":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":30.965,"warpscale":2.572,"zoom":1.00901,"warp":0.00054,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":12.8,"mv_y":9.6,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"rad":0.49138,"r":0,"g":1,"b":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=.5+q4;y=.5+q5;\\na=bass_att+mid_att+treb_att;\\na=a*0.25;\\na=a*a*1.5;"},{"baseVals":{"sides":24,"rad":0.01842,"tex_zoom":0.81954,"g":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_ang=0.01;\\nx=.5-q4;\\ny=.5-q5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\nzoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\nzoom = zoom + max(0,bass_att-1.1)*0.2;\\nwarp = warp + max(0,treb-1.1)*0.5;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.6));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 12.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.04, 0.04, 0.04));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 N_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1.0, 0.0) * texsize.zw);\\n  N_1.x = ((texture (sampler_main, (uv_orig + tmpvar_3)).xyz - texture (sampler_main, (uv_orig - tmpvar_3)).xyz).x * 0.8);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (vec2(0.0, 1.0) * texsize.zw);\\n  N_1.y = ((texture (sampler_main, (uv_orig + tmpvar_4)).xyz - texture (sampler_main, (uv_orig - tmpvar_4)).xyz).x * 0.8);\\n  N_1.x = (N_1.x + ((\\n    ((texture (sampler_blur1, (uv_orig + tmpvar_3)).xyz * scale1) + bias1)\\n   - \\n    ((texture (sampler_blur1, (uv_orig - tmpvar_3)).xyz * scale1) + bias1)\\n  ).x * 0.2));\\n  N_1.y = (N_1.y + ((\\n    ((texture (sampler_blur1, (uv_orig + tmpvar_4)).xyz * scale1) + bias1)\\n   - \\n    ((texture (sampler_blur1, (uv_orig - tmpvar_4)).xyz * scale1) + bias1)\\n  ).x * 0.2));\\n  N_1.z = -0.077;\\n  vec3 tmpvar_5;\\n  tmpvar_5 = normalize(N_1);\\n  N_1 = tmpvar_5;\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = -0.8;\\n  tmpvar_6.x = q9;\\n  tmpvar_6.y = q10;\\n  vec3 tmpvar_7;\\n  tmpvar_7.z = 0.0;\\n  tmpvar_7.xy = ((uv_orig * 2.0) - 1.0);\\n  vec3 tmpvar_8;\\n  tmpvar_8 = normalize((tmpvar_6 - tmpvar_7));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = normalize((tmpvar_7 - vec3(0.0, 0.0, 1.0)));\\n  ret_2 = (vec3(clamp (dot (tmpvar_5, tmpvar_8), 0.0, 1.0)) * vec3(1.2, 0.9, 0.7));\\n  ret_2 = (ret_2 * normalize((\\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\\n   + bias3).yzx));\\n  ret_2 = (ret_2 + (pow (\\n    clamp (dot (normalize((tmpvar_9 + \\n      ((2.0 * tmpvar_5) * dot (tmpvar_9, tmpvar_5))\\n    )), tmpvar_8), 0.0, 1.0)\\n  , 32.0) * 0.5));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_2;\\n  ret = tmpvar_10.xyz;\\n }"}')},"./presets/converted/_Mig_049.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.535239,"wave_smoothing":0,"wave_mystery":-0.48,"modwavealphastart":1,"modwavealphaend":1.1,"warpscale":3.138,"fshader":1,"zoom":1.023,"warp":0.122616,"wave_g":0.65,"wave_b":0,"mv_x":6.4,"mv_y":48,"mv_dx":0.5,"mv_dy":0.5,"mv_l":5,"mv_r":0.013716,"mv_g":0.872347,"mv_b":0.522466,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":0.746302,"tex_zoom":0.942039,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(time)*.5+.5;\\nval=3;\\na2=val*.33;\\na=val*.33;\\nrad=cos(time*.3)*.4+0.65;\\nx=sin(time*.25)*.25+.5;\\ny=cos(time*.45)*.25+.5;\\n\\n\\n"},{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":0.746302,"tex_zoom":0.942039,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=cos(time*.3)*.5+.5;\\nval=3;\\na2=val*.33;\\na=val*.33;\\nrad=sin(time*.3)*.4+0.65;\\nx=cos(time*.25)*.25+.5;\\ny=sin(time*.45)*.25+.5;\\n\\n\\n"},{"baseVals":{"enabled":1,"thickoutline":1,"rad":0.364564,"r":0,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nh2=h2+(above(treb,1.32)*0.8)*.9;\\nvr=sin(h2*.8)*.5+.5;\\nvg=sin(h2*.5)*.5+.5;\\nvb=sin(h2*.1)*.5+.5;\\n\\ng=vg;\\nr=vr;\\nb=vb;\\ng2=g;\\nr2=r;\\nb2=b;\\ndist=(frame%100)*.01;\\nmaat=maat+(above(bass_att,1.5));\\nmaat=below(maat,16)*maat;\\nx=if(below(maat,8),if(below(maat,4),dist,1-dist),x);\\ny=if(above(maat,8),if(above(maat,4),dist,1-dist),y);"},{"baseVals":{"thickoutline":1,"textured":1,"rad":0.364564,"r":0,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nh2=h2+(above(treb,1.32)*0.8)*.9;\\nvr=sin(h2*.8)*.5+.5;\\nvg=sin(h2*.5)*.5+.5;\\nvb=sin(h2*.1)*.5+.5;\\n\\ng=vg;\\nr=vr;\\nb=vb;\\ng2=g;\\nr2=r;\\nb2=b;\\ndist=(frame%100)*.01;\\nmaat=maat+(above(bass_att,1.5));\\nmaat=below(maat,16)*maat;\\ny=if(below(maat,8),if(below(maat,4),dist,1-dist),y);\\nx=if(above(maat,8),if(above(maat,4),dist,1-dist),x);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 1;//0.85 + 0.35*sin(0.437*time+1) + 0.55*sin(0.197*time+4);\\nwave_g = 0;//0.85 + 0.35*sin(0.544*time+2) + 0.55*sin(0.143*time+5);\\nwave_b = 0;//0.85 + 0.35*sin(0.751*time+3) + 0.55*sin(0.117*time+6);\\nwave_r = sqrt(wave_r);\\nwave_g = sqrt(wave_g);\\nwave_b = sqrt(wave_b);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\\n   * 0.03))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},"./presets/converted/_Mig_085.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"echo_zoom":1.16936,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.011726,"wave_smoothing":0.9,"zoom":0.999902,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.0065,"ib_size":0.26,"mv_x":0,"mv_y":43.199997,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":1.06779,"ang":0.753982,"tex_zoom":0.779769,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"rad":0.038091,"g":1,"b":1,"g2":0.6,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm=q1;\\n\\nxp=0;\\nyp=0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n\\n"}],"waves":[{"baseVals":{"enabled":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"r":0.1,"b":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=-xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"r":0.2,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=-xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"}],"init_eqs_eel":"","frame_eqs_eel":"movement = movement + 0.01*(bass+bass_att) + 0.001*pow(bass+1,3);\\nq1 = movement;\\nmonitor =q1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 0.0;\\n  tmpvar_3.xyz = ret_1;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 0.0;\\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv - tmpvar_2)) * 0.9)).xyz;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 0.0;\\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 0.0;\\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \\n    (tmpvar_2 * 2.0)\\n  )) * 0.97)).xyz;\\n  ret_1 = (max (tmpvar_6, (texture (sampler_main, \\n    (uv + (tmpvar_2 * 3.0))\\n  ) * 0.9)).xyz * 0.92);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},"./presets/converted/_Rovastar + Geiss - Hurricane Nightmare (Posterize Mix).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"wave_thick":1,"wrap":0,"darken_center":1,"wave_a":0.3,"wave_scale":0.881,"wave_smoothing":0.5,"wave_mystery":-1,"warpscale":2.853,"zoomexp":3.6,"zoom":1.02109,"rot":-0.16,"warp":0.309,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"wave_y":0.47,"mv_l":1.75},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\\noldq8 = q8;\\nmonitor = q8;\\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\\n//decay = decay - 0.02*equal(frame%40,0);\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx = 0.1*sin(1.1*time);\\nmv_dy = 0.1*cos(1.112*time);","pixel_eqs_eel":"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));","warp":"","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (tmpvar_1.xyz * (1.0 + (\\n    (abs((fract(\\n      (tmpvar_1.xyz * 8.0)\\n    ) - 0.5)) - 0.25)\\n   * 0.4)));\\n  ret = tmpvar_2.xyz;\\n }"}')},"./presets/converted/cope + flexi - colorful marble (ghost mix).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_orient":1,"additivewave":1,"wave_a":0.002,"wave_scale":2.713,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpscale":1.331,"zoom":0.9995,"warp":0.009,"wave_r":0.44,"wave_g":0.4,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":3,"additive":1,"num_inst":347,"rad":0.20065,"ang":0.75398,"tex_ang":3.14159,"tex_zoom":0.99979,"r":0,"g2":0,"border_g":0.5,"border_b":0.15,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//lorenz-attractor calc\\nxx1 = if(equal(instance,0),q11,xx1);\\nyy1 = if(equal(instance,0),q12,yy1);\\nzz1 = if(equal(instance,0),q13,zz1);\\n\\ndx1 = q14*(yy1-xx1);\\ndy1 = xx1*(q15-zz1)-yy1;\\ndz1 = xx1*yy1-q16*zz1;\\ndd = sqrt(dx1*dx1+dy1*dy1+dz1*dz1);\\nxx1 = xx1 + q17*dx1/dd;\\nyy1 = yy1 + q17*dy1/dd;\\nzz1 = zz1 + q17*dz1/dd;\\n\\n\\n// 3D object model coordinates\\nmy_x = xx1*0.1;\\nmy_y = yy1*0.1;\\nmy_z = zz1*0.1 - 3;\\n\\n\\nd = 5; // camera distance\\nzoom = 0.66;\\n\\n// solid angles\\nw3 = -q3;\\nw2 = q4;\\nw1 = q5;\\n\\n// 3D rotation\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nrad = rad/d;\\nang = ang-instance/num_inst*asin(1)*8;"},{"baseVals":{"enabled":1,"sides":52,"rad":0.72136,"tex_zoom":0.7874,"r":0,"a":0.05,"g2":0,"border_a":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":""},{"baseVals":{"sides":12,"additive":1,"num_inst":512,"y":0.55,"rad":0.2667,"tex_zoom":0.7874,"r":0,"g":0.1,"b":0.55,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":"rnd1 = if(equal(instance,0),t1,rnd1);\\nrnd2 = if(equal(instance,0),t2,rnd2);\\nrnd3 = if(equal(instance,0),t3,rnd3);\\nrnd4 = if(equal(instance,0),t4,rnd4);\\nrnd1 = 4*rnd1*(1-rnd1);\\nrnd2 = 4*rnd2*(1-rnd2);\\nrnd3 = 4*rnd3*(1-rnd3);\\nrnd4 = 4*rnd4*(1-rnd4);\\nt = .6;\\nt =  (rnd1+time*t) - int(rnd1+time*t);\\nt = t + rnd2*0.1;\\nwh = rnd4*asin(1)*4;\\nwv = 0.25 + rnd3*0.1;\\n\\nd = 6; // makes the perspective impact\\nzoom = 1;\\nl = 1;\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = t *(cos(wh)*sin(wv)*l)*4;\\nmy_z = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l*4;\\nmy_y = t*(sin(wh)*sin(wv)*l)*4;\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\np = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(atan2(x3,y3))*p;\\nmy_y = zoom*cos(atan2(x3,y3))*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;"},{"baseVals":{"sides":12,"additive":1,"num_inst":512,"y":0.55,"rad":0.05012,"tex_zoom":0.7874,"r":0,"g":0.02,"b":0.11,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":"rnd1 = if(equal(instance,0),t1,rnd1);\\nrnd2 = if(equal(instance,0),t2,rnd2);\\nrnd3 = if(equal(instance,0),t3,rnd3);\\nrnd4 = if(equal(instance,0),t4,rnd4);\\nrnd1 = 4*rnd1*(1-rnd1);\\nrnd2 = 4*rnd2*(1-rnd2);\\nrnd3 = 4*rnd3*(1-rnd3);\\nrnd4 = 4*rnd4*(1-rnd4);\\nt = .6;\\nt =  (rnd1+time*t) - int(rnd1+time*t);\\nt = t + rnd2*0.1;\\nwh = rnd4*asin(1)*4;\\nwv = 0.25 + rnd3*0.1;\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 1;\\nl = 1;\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = t *(cos(wh)*sin(wv)*l);\\nmy_y = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l;\\nmy_z = t*(sin(wh)*sin(wv)*l);\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\np = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(atan2(x3,y3))*p;\\nmy_y = zoom*cos(atan2(x3,y3))*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;"}],"waves":[{"baseVals":{"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"a":0.21,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"","point_eqs_eel":"// lorenz-attractor calc\\nxx1 = if(equal(sample,0),q11,xx1);\\nyy1 = if(equal(sample,0),q12,yy1);\\nzz1 = if(equal(sample,0),q13,zz1);\\ndx1 = q14*(yy1-xx1);\\ndy1 = xx1*(q15-zz1)-yy1;\\ndz1 = xx1*yy1-q16*zz1;\\nxx1 = xx1 + q17*dx1;\\nyy1 = yy1 + q17*dy1;\\nzz1 = zz1 + q17*dz1;\\n\\n// 3D model coordinates\\nmy_x = xx1*0.1;\\nmy_y = yy1*0.1;\\nmy_z = zz1*0.1 - 3;\\n\\n\\nd = 5; // distance of the camera (on the z-axis) to the origin\\nzoom = 0.4;\\n\\n// solid angles\\nw1 = q2;\\nw2 = q3;\\nw3 = q4;\\n\\n// rotations\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xx1 = if(equal(sample,0),q11,xx1);\\nyy1 = if(equal(sample,0),q12,yy1);\\nzz1 = if(equal(sample,0),q13,zz1);\\n\\ndx1 = q14*(yy1-xx1);\\ndy1 = xx1*(q15-zz1)-yy1;\\ndz1 = xx1*yy1-q16*zz1;\\nxx1 = xx1 + q17*dx1;\\nyy1 = yy1 + q17*dy1;\\nzz1 = zz1 + q17*dz1;\\n\\nmy_x = xx1*0.02;\\nmy_y = yy1*0.02;\\nmy_z = zz1*0.02;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"x1 = 2;\\ny1= 2;\\nz1 = 2;","frame_eqs_eel":"// raytraced sphere code\\n\\nd = 20; // distance of the sphere, the farther you\'re away the more you\'ll see on the horizon\\nz = 4; // distance of the pane where the scene is projected on, wider distance = smaller apex angle of the camera, very small distances = fish eyes view\\n\\nzz = 1 + bass_att*0; // linear zoom\\n\\npi = asin(1)*2;\\npi2inv = 0.5/pi;\\nmaskangle = asin( 1/d);\\nq32 = maskangle; // hit = (cameras angle < mask_angle)\\nq31 = d;\\nq30 = z;\\nq29 = pi2inv;\\nq28 = pi;\\nq27 = 1/zz;\\n\\nv = 0.4;\\nj1 = j1*0.95 + sqr(bass*4)*v;\\nj2 = j2*0.95 + sqr(mid*4)*v;\\nj3 = j3*0.95 + sqr(treb*4)*v;\\n\\nn = n + j1*0.0152;\\nn1 = n1 + j2*0.0152;\\nn2 = n2 + j3*0.0152;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol;\\nq3=vol;\\nmtime = mtime+vol*0.01;\\nq1=mtime;\\n\\nzoom = zoom + 0.015*vol;\\n\\nw1 = n*0.01;    // solid angles to rotate the sphere in its origin\\nw2 = n1*0.01;\\nw3 = n2*0.01;\\n\\nq20 = cos(w1);\\nq21 = sin(w1);\\nq22 = cos(w2);\\nq23 = sin(w2);\\nq24 = cos(w3);\\nq25 = sin(w3);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 noise2_1;\\n  vec3 rc_2;\\n  vec3 p_3;\\n  vec2 polar_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = ((q27 * (uv - 0.5)) * aspect.xy);\\n  float tmpvar_7;\\n  tmpvar_7 = sqrt(dot (tmpvar_6, tmpvar_6));\\n  float tmpvar_8;\\n  float tmpvar_9;\\n  tmpvar_9 = (min (abs(\\n    (tmpvar_7 / q30)\\n  ), 1.0) / max (abs(\\n    (tmpvar_7 / q30)\\n  ), 1.0));\\n  float tmpvar_10;\\n  tmpvar_10 = (tmpvar_9 * tmpvar_9);\\n  tmpvar_10 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_10) + 0.05368138) * tmpvar_10) - 0.1173503)\\n     * tmpvar_10) + 0.1938925) * tmpvar_10) - 0.3326756)\\n   * tmpvar_10) + 0.9999793) * tmpvar_9);\\n  tmpvar_10 = (tmpvar_10 + (float(\\n    (abs((tmpvar_7 / q30)) > 1.0)\\n  ) * (\\n    (tmpvar_10 * -2.0)\\n   + 1.570796)));\\n  tmpvar_8 = (tmpvar_10 * sign((tmpvar_7 / q30)));\\n  if ((abs(q30) > (1e-08 * abs(tmpvar_7)))) {\\n    if ((q30 < 0.0)) {\\n      if ((tmpvar_7 >= 0.0)) {\\n        tmpvar_8 += 3.141593;\\n      } else {\\n        tmpvar_8 = (tmpvar_8 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_8 = (sign(tmpvar_7) * 1.570796);\\n  };\\n  bool tmpvar_11;\\n  tmpvar_11 = (q32 >= tmpvar_8);\\n  float tmpvar_12;\\n  float tmpvar_13;\\n  tmpvar_13 = (min (abs(\\n    (tmpvar_6.x / tmpvar_6.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_6.x / tmpvar_6.y)\\n  ), 1.0));\\n  float tmpvar_14;\\n  tmpvar_14 = (tmpvar_13 * tmpvar_13);\\n  tmpvar_14 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_14) + 0.05368138) * tmpvar_14) - 0.1173503)\\n     * tmpvar_14) + 0.1938925) * tmpvar_14) - 0.3326756)\\n   * tmpvar_14) + 0.9999793) * tmpvar_13);\\n  tmpvar_14 = (tmpvar_14 + (float(\\n    (abs((tmpvar_6.x / tmpvar_6.y)) > 1.0)\\n  ) * (\\n    (tmpvar_14 * -2.0)\\n   + 1.570796)));\\n  tmpvar_12 = (tmpvar_14 * sign((tmpvar_6.x / tmpvar_6.y)));\\n  if ((abs(tmpvar_6.y) > (1e-08 * abs(tmpvar_6.x)))) {\\n    if ((tmpvar_6.y < 0.0)) {\\n      if ((tmpvar_6.x >= 0.0)) {\\n        tmpvar_12 += 3.141593;\\n      } else {\\n        tmpvar_12 = (tmpvar_12 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_12 = (sign(tmpvar_6.x) * 1.570796);\\n  };\\n  float x_15;\\n  x_15 = (q31 * sin(tmpvar_8));\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = tmpvar_12;\\n  tmpvar_16.y = ((q28 - tmpvar_8) + (sign(x_15) * (1.570796 - \\n    (sqrt((1.0 - abs(x_15))) * (1.570796 + (abs(x_15) * (-0.2146018 + \\n      (abs(x_15) * (0.08656672 + (abs(x_15) * -0.03102955)))\\n    ))))\\n  )));\\n  polar_4 = tmpvar_16;\\n  vec3 tmpvar_17;\\n  tmpvar_17.x = (sin(tmpvar_12) * sin(tmpvar_16.y));\\n  tmpvar_17.y = (cos(tmpvar_12) * sin(tmpvar_16.y));\\n  tmpvar_17.z = cos(tmpvar_16.y);\\n  vec2 tmpvar_18;\\n  tmpvar_18.x = ((tmpvar_17.z * q20) - (tmpvar_17.y * q21));\\n  tmpvar_18.y = ((tmpvar_17.z * q21) + (tmpvar_17.y * q20));\\n  vec2 tmpvar_19;\\n  tmpvar_19.x = ((tmpvar_18.x * q22) - (tmpvar_17.x * q23));\\n  tmpvar_19.y = ((tmpvar_18.x * q23) + (tmpvar_17.x * q22));\\n  p_3.z = tmpvar_19.x;\\n  vec2 tmpvar_20;\\n  tmpvar_20.x = ((tmpvar_18.y * q24) - (tmpvar_19.y * q25));\\n  tmpvar_20.y = ((tmpvar_18.y * q25) + (tmpvar_19.y * q24));\\n  p_3.xy = tmpvar_20.yx;\\n  float tmpvar_21;\\n  float tmpvar_22;\\n  tmpvar_22 = (min (abs(\\n    (tmpvar_19.x / tmpvar_20.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_19.x / tmpvar_20.y)\\n  ), 1.0));\\n  float tmpvar_23;\\n  tmpvar_23 = (tmpvar_22 * tmpvar_22);\\n  tmpvar_23 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_23) + 0.05368138) * tmpvar_23) - 0.1173503)\\n     * tmpvar_23) + 0.1938925) * tmpvar_23) - 0.3326756)\\n   * tmpvar_23) + 0.9999793) * tmpvar_22);\\n  tmpvar_23 = (tmpvar_23 + (float(\\n    (abs((tmpvar_19.x / tmpvar_20.y)) > 1.0)\\n  ) * (\\n    (tmpvar_23 * -2.0)\\n   + 1.570796)));\\n  tmpvar_21 = (tmpvar_23 * sign((tmpvar_19.x / tmpvar_20.y)));\\n  if ((abs(tmpvar_20.y) > (1e-08 * abs(tmpvar_19.x)))) {\\n    if ((tmpvar_20.y < 0.0)) {\\n      if ((tmpvar_19.x >= 0.0)) {\\n        tmpvar_21 += 3.141593;\\n      } else {\\n        tmpvar_21 = (tmpvar_21 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_21 = (sign(tmpvar_19.x) * 1.570796);\\n  };\\n  float tmpvar_24;\\n  tmpvar_24 = sqrt(dot (p_3.xz, p_3.xz));\\n  float tmpvar_25;\\n  float tmpvar_26;\\n  tmpvar_26 = (min (abs(\\n    (tmpvar_20.x / tmpvar_24)\\n  ), 1.0) / max (abs(\\n    (tmpvar_20.x / tmpvar_24)\\n  ), 1.0));\\n  float tmpvar_27;\\n  tmpvar_27 = (tmpvar_26 * tmpvar_26);\\n  tmpvar_27 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_27) + 0.05368138) * tmpvar_27) - 0.1173503)\\n     * tmpvar_27) + 0.1938925) * tmpvar_27) - 0.3326756)\\n   * tmpvar_27) + 0.9999793) * tmpvar_26);\\n  tmpvar_27 = (tmpvar_27 + (float(\\n    (abs((tmpvar_20.x / tmpvar_24)) > 1.0)\\n  ) * (\\n    (tmpvar_27 * -2.0)\\n   + 1.570796)));\\n  tmpvar_25 = (tmpvar_27 * sign((tmpvar_20.x / tmpvar_24)));\\n  if ((abs(tmpvar_24) > (1e-08 * abs(tmpvar_20.x)))) {\\n    if ((tmpvar_24 < 0.0)) {\\n      if ((tmpvar_20.x >= 0.0)) {\\n        tmpvar_25 += 3.141593;\\n      } else {\\n        tmpvar_25 = (tmpvar_25 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_25 = (sign(tmpvar_20.x) * 1.570796);\\n  };\\n  vec2 tmpvar_28;\\n  tmpvar_28.x = tmpvar_21;\\n  tmpvar_28.y = tmpvar_25;\\n  polar_4 = (((tmpvar_28 * q29) * vec2(1.0, 2.0)) + vec2(0.0, 0.5));\\n  vec3 tmpvar_29;\\n  tmpvar_29.xy = polar_4;\\n  tmpvar_29.z = (time * 0.15);\\n  rc_2 = (texture (sampler_noisevol_hq, tmpvar_29).xyz + (texture (sampler_noisevol_hq, (2.0 * tmpvar_29)) * 0.5).xyz);\\n  rc_2 = (rc_2 + (texture (sampler_noisevol_hq, (4.0 * tmpvar_29)) * 0.25).xyz);\\n  rc_2 = (rc_2 + (texture (sampler_noisevol_hq, (8.0 * tmpvar_29)) * 0.125).xyz);\\n  rc_2 = (rc_2 + (texture (sampler_noisevol_hq, (16.0 * tmpvar_29)) * 0.0625).xyz);\\n  rc_2 = ((rc_2 * rc_2) * (rc_2 * 2.0));\\n  rc_2 = (rc_2 * (q3 * 0.5));\\n  vec4 tmpvar_30;\\n  tmpvar_30 = texture (sampler_fc_main, (0.5 + (uv - 0.5)));\\n  noise2_1 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz + mix ((rc_2 * 2.0), vec3(2.0, 2.0, 2.0), vec3(rad)));\\n  vec3 a_31;\\n  a_31 = (1.0 - tmpvar_30.xyz);\\n  ret_5 = (tmpvar_30.xyz + (vec3(0.3, 0.25, 0.2) * dot (\\n    ((a_31.yzx * noise2_1.zxy) - (a_31.zxy * noise2_1.yzx))\\n  , vec3(0.32, 0.49, 0.29))));\\n  ret_5 = (ret_5 - (0.1 * rad));\\n  ret_5 = (ret_5 + ((0.1 * texture (sampler_noisevol_hq, \\n    ((p_3 + (time * 0.1)) * 0.7)\\n  )) * float(tmpvar_11)).xyz);\\n  vec4 tmpvar_32;\\n  tmpvar_32.w = 1.0;\\n  tmpvar_32.xyz = ret_5;\\n  ret = tmpvar_32.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz - ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 0.5));\\n  ret_1 = (ret_1 * 2.0);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},"./presets/converted/cope + martin - mother-of-pearl.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":6,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":1.17,"wave_scale":0.797,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.9995,"zoom":0.9998,"rot":0.02,"dy":-0.008,"warp":0.01,"sx":1.0098,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.9,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":44.8,"mv_y":38.4,"mv_l":5,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":33,"y":0,"rad":0.11039,"ang":3.4054,"r":0,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//ang = ang + time*2;\\n\\n//x = x + 0.4*sin(time);\\n//y = y + 0.4*sin(-time*1.4);"},{"baseVals":{"sides":34,"y":0.45,"rad":1.62175,"r":0,"a":0.05,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":54,"x":0,"y":0.6,"rad":0.13478,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\\nr=0;\\nb=0;\\ng=0;\\nr2=r;\\nb2=b;\\ng2=g;"},{"baseVals":{"x":0,"y":0.2,"rad":0.20068,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"r":0.2,"g":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.3*sin(vol*50);\\nwave_b = wave_b + 0.3*sin(vol*20);\\nwave_g = wave_g + 0.5*sin(vol*35);\\n\\n\\nq8=wave_r;\\nq7=wave_b;\\nq6=wave_g;\\n\\nwr = 0.5+0.4*(0.6*sin(time*1.1) + 0.4*sin(0.8*time));\\nwb = 0.5+0.4*(0.6*sin(time*1.6) + 0.4*sin(0.5*time));\\nwg = 0.5+0.4*(0.6*sin(time*1.34) + 0.4*sin(0.4*time));\\n\\nmonitor=wg;\\nq10=wr;\\nq11=wb;\\nq12=wg;\\nq18 = 0.007*sin(time*0.1);\\nq17 = -0.007*sin(time*0.254);\\nq2=bass_thresh;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\nq3=vol;\\n\\nwarp=0;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 noise3_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.5 + ((\\n    (uv - vec2(0.0, 1.0))\\n   - 0.5) * (1.0 + \\n    (tmpvar_2.y * 0.03)\\n  )));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (tmpvar_3.x + pow (tmpvar_2.x, 0.0));\\n  tmpvar_4.y = (tmpvar_3.y + pow (tmpvar_2.x, 0.005));\\n  noise3_1 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz * fract(q15));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (noise3_1 * (vec3(1.0, 1.0, 1.0) - vec3(fract(\\n    (q3 * 0.5)\\n  ))));\\n  noise3_1 = tmpvar_5;\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, fract(tmpvar_4));\\n  vec3 tmpvar_7;\\n  tmpvar_7.x = q10;\\n  tmpvar_7.y = q11;\\n  tmpvar_7.z = q12;\\n  vec3 tmpvar_8;\\n  tmpvar_8 = mix (tmpvar_5, tmpvar_7, tmpvar_6.xxx);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = (tmpvar_6.xyz + clamp ((\\n    (tmpvar_6.yzx * tmpvar_8.zxy)\\n   - \\n    (tmpvar_6.zxy * tmpvar_8.yzx)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    ((uv - 0.5) * 2.0)\\n  )) - tmpvar_4);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((0.04 / sqrt(\\n    dot (uv1_1, uv1_1)\\n  )), 0.0, 1.0);\\n  uv1_1 = ((0.3 * cos(\\n    (uv1_1 * 12.0)\\n  )) - (9.0 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (tmpvar_5 + ((texture (sampler_main, uv).xyz * 12.0) * vec3(clamp (\\n    (0.04 / sqrt(dot (uv1_1, uv1_1)))\\n  , 0.0, 1.0))));\\n  ret = tmpvar_6.xyz;\\n }"}')},"./presets/converted/fiShbRaiN + Flexi - witchcraft 2.0.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.28,"decay":0.8,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":3.04777,"zoom":1.0173,"warp":0.01605,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":5,"additive":1,"num_inst":2,"x":0.49,"rad":0.11589,"tex_zoom":4.36077,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %2;\\n\\n\\nd_x = if(is_beat, (rand(2000)-1000)*0.001 , d_x);\\nd_y = if(is_beat, (rand(2000)-1000)*0.001 , d_y);\\nr = if(is_beat, (rand(2000)-1000)*0.001 , r);\\nz = if(is_beat, rand(1000)*0.001 , z);\\nzoom = 1.03 + z*0.06;\\nrot = r*0.06;\\ndx = d_x*0.01;\\ndy = d_y*0.01;\\nq1 = 1;\\n\\nq23 = rand(1000)/1000;\\nq24 = rand(1000)/1000;\\nq25 = (rand(1000)/1000)*6.28;\\nq26 = q25 - 3.14;\\nq27 = (rand(1000)/12000)+0.04;\\n\\nq28 = rand(1000)/1000;\\nq29 = rand(1000)/1000;\\nq30 = (rand(1000)/1000)*6.28;\\nq31 = q30 - 3.14;\\nq32 = (rand(1000)/14000)+0.04;\\n\\ndb = db*0.98 + bass*0.2;\\nbb = bb + db*0.1;\\n\\ndt = dt*0.98 + treb*0.2;\\ntt = tt + dt*0.1;\\n\\ndm = dm*0.98 + mid*0.2;\\nmm = mm + dm*0.1;\\n\\n\\nw = (bb-tt)*0.1;\\nq11 = sin(w);\\nq12 = cos(w);\\nq13 = 0.5 + sin((bb-mm)*0.1)*0.25; // cx\\nq14 = 0.5 + sin((tt-mm)*0.1)*0.25; // cy\\nq15 = 4;\\nq16 = 0.06;\\nq17 = sin(-w);\\nq18 = cos(-w);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = mix (uv_orig, uv, vec2(0.1, 0.1));\\n  tmpvar_6 = (tmpvar_7 + ((tmpvar_5 * texsize.zw) * 2.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_3.y;\\n  tmpvar_8.y = tmpvar_4.y;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (mix (uv_orig, uv, vec2(0.3, 0.3)) + ((tmpvar_8 * texsize.zw) * 2.0));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_3.z;\\n  tmpvar_10.y = tmpvar_4.z;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (tmpvar_7 + ((tmpvar_10 * texsize.zw) * 2.0));\\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \\n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n  ).x * 0.01));\\n  ret_1.y = (texture (sampler_main, tmpvar_9).y - ((texture (sampler_main, tmpvar_9).xyz - \\n    ((texture (sampler_blur3, tmpvar_9).xyz * scale3) + bias3)\\n  ).y * 0.01));\\n  ret_1.z = (texture (sampler_main, tmpvar_11).z - ((texture (sampler_main, tmpvar_11).xyz - \\n    ((texture (sampler_blur3, tmpvar_11).xyz * scale3) + bias3)\\n  ).z * 0.01));\\n  ret_1 = (ret_1 + (-0.004 + (\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)).xyz - 0.5)\\n   * 0.1)));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.z;\\n  tmpvar_5.y = tmpvar_4.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.y;\\n  tmpvar_6.y = tmpvar_4.y;\\n  ret_1 = (mix (vec3(0.2, 0.0, 0.1), vec3(0.8, 0.6, 0.0), texture (sampler_main, (uv - \\n    (tmpvar_5 * 0.2)\\n  )).yyy) * ((\\n    (-(tmpvar_3.y) + tmpvar_4.y)\\n   + 1.0) + (\\n    (-(tmpvar_3.z) + tmpvar_4.z)\\n   * 2.0)));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = mix (mix (ret_1, vec3(0.3, 0.0, 0.8), vec3((\\n    ((texture (sampler_blur1, (uv - (tmpvar_6 * 0.04))).xyz * scale1) + bias1)\\n  .x * 1.4))), vec3(1.0, 0.9, 0.4), texture (sampler_main, uv).zzz);\\n  ret_1 = tmpvar_7;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = tmpvar_7;\\n  ret = tmpvar_8.xyz;\\n }"}')},"./presets/converted/flexi + amandio c - organic [random mashup].json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":1,"wrap":0,"darken_center":1,"brighten":1,"darken":1,"wave_a":0.001,"warpanimspeed":0.141,"warpscale":14.497,"zoom":0.99951,"warp":0.75055,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":6,"rad":0.17809,"ang":0.26,"tex_zoom":0.39711,"g":0.7,"b":0.6,"r2":0.4,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=.11+.22*rand(5);\\ny=.1+.16*(2*time%6);\\n\\nb=.6+.3*q3;\\ng=.7+.2*q3;\\nr= .7;\\n\\ng2=.3*g;\\nr2=.3*r;\\nb2=.3*b;"},{"baseVals":{"enabled":1,"sides":6,"additive":1,"rad":0.17809,"ang":0.26,"tex_zoom":0.99999,"g":1,"b":0.4,"a":0.5,"r2":0.2,"g2":0,"b2":0.3,"a2":0.6,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=.11+.22*rand(5);\\ny=.1+.16*(2*time%6);\\n\\nb=.6+.3*q3;\\ng=.7+.2*q3;\\nr= .7;\\n\\ng2=.3*g;\\nr2=.3*r;\\nb2=.3*b;"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"rad":0.17633,"ang":0.26,"tex_zoom":1.19615,"r2":1,"b2":1,"a2":0.2,"border_r":0,"border_g":0,"border_b":0,"border_a":0.2},"init_eqs_eel":"","frame_eqs_eel":"x=.22*rand(6);\\ny=.18+.16*(2*time%5);\\n\\ng=1.5*q3;\\nr=1.3*q4;\\nb=1.7*q5;\\n\\ntex_ang=-q1;\\ntex_zoom=2+sin(q1);"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"rad":0.16284,"ang":0.26,"r2":0.8,"g2":0.8,"b2":0.8,"a2":0.2,"border_r":0,"border_g":0,"border_b":0,"border_a":0.2},"init_eqs_eel":"","frame_eqs_eel":"x=.11+.22*rand(5);\\ny=.1+.16*(2*time%6);\\n\\nr=.3*q3;\\nb=.2*q2;\\ng=.1*q1;\\n\\ntex_ang=q1;\\ntex_zoom=2+1.2*sin(1.5*q1);"}],"waves":[{"baseVals":{"samples":395,"usedots":1,"r":0.15,"g":0.15,"b":0.15,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"scaling":0.01,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"x1 = 0.5;\\nx2 = 0.51;\\n\\ny2 = 1;\\ny1 = 0.7;\\n\\nx3 = 0.8;\\ny3 = 0.5;\\n\\nx4 = 0.2;\\ny4 = 0.5;\\n\\n\\nax1 = 0;\\nay1 = 0;\\nax2 = 0;\\nay2 = 0;\\nax3 = 0;\\nay3 = 0;\\n\\nvx1 = 0.000;\\nvx2 = 0.000;","frame_eqs_eel":"sx=1+.01*(8*bass%8)*equal(time%(int(24-2*bass)),0);\\nsy=1+.01*(8*mid%8) *equal(time%(12+int(24-2*bass)),0);\\n\\nzoom = 0.99;\\n//warp = 0;\\nwave_a = 0;\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nr = 0.12+ max(bass_att,treb_att)*0.004;\\nbounce = below(y1,r);\\ny1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.00006*60/fps);\\nbounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);\\nbounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);\\nbounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.00006*60/fps);\\nbounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);\\nbounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);\\nbounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.00006*60/fps);\\nbounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);\\nbounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);\\nbounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.00006*60/fps);\\nbounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);\\nbounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = x1;\\nq4 = y1;\\nq5 = r;\\nq6 = x2;\\nq7 = y2;\\nq8 = r;\\nq9 = x3;\\nq10 = y3;\\nq11 = r;\\nq12 = x4;\\nq13 = y4;\\nq14 = r;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1.z = (texture (sampler_main, uv).z * 0.5);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv_orig * texsize.xy) * texsize_noise_lq.zw);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_4.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  ret_1.y = texture (sampler_fw_main, clamp ((uv_orig + (\\n    (tmpvar_4 * texsize.zw)\\n   * 4.0)), 0.0, 1.0)).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1 - ((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1))\\n  .y * 0.025) + -0.014));\\n  ret_1.y = (ret_1.y + ((texture (sampler_noise_lq, tmpvar_2).y - 0.5) * 0.02));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  tmpvar_5.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  ret_1.x = ((texture (sampler_main, (uv - \\n    ((tmpvar_5 * texsize.zw) * 4.0)\\n  )).x - (ret_1.y * 0.01)) + 0.004);\\n  ret_1.x = (ret_1.x + ((\\n    (texture (sampler_noise_lq, tmpvar_2).x - 0.5)\\n   * 0.01) + (ret_1.z * 0.14)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q3;\\n  tmpvar_1.y = q4;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = q6;\\n  tmpvar_2.y = q7;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q9;\\n  tmpvar_3.y = q10;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q12;\\n  tmpvar_4.y = q13;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 1.2);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (texture (sampler_main, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz - texture (sampler_main, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz);\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (texture (sampler_main, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz - texture (sampler_main, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_9;\\n  x_9 = ((uv - (tmpvar_8 * 8.0)) - (1.0 - tmpvar_1));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_10.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_11;\\n  x_11 = ((uv - (tmpvar_10 * 8.0)) - (1.0 - tmpvar_2));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_12.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_13;\\n  x_13 = ((uv - (tmpvar_12 * 8.0)) - (1.0 - tmpvar_3));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_14.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_15;\\n  x_15 = ((uv - (tmpvar_14 * 8.0)) - (1.0 - tmpvar_4));\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = (mix (texture (sampler_main, uv).xyz, max (\\n    max ((vec3((1.0 - pow (\\n      sqrt(dot (x_9, x_9))\\n    , 0.2))) * vec3(2.0, 1.0, -1.0)), (vec3((1.0 - pow (\\n      sqrt(dot (x_11, x_11))\\n    , 0.2))) * vec3(2.0, -1.0, 1.0)))\\n  , \\n    max ((vec3((1.0 - pow (\\n      sqrt(dot (x_13, x_13))\\n    , 0.2))) * vec3(-1.0, 1.0, 2.0)), (vec3((1.0 - pow (\\n      sqrt(dot (x_15, x_15))\\n    , 0.2))) * vec3(1.0, -1.0, 2.0)))\\n  ), vec3(0.5, 0.5, 0.5)) * 1.25);\\n  ret = tmpvar_16.xyz;\\n }"}')},"./presets/converted/flexi + amandio c - organic12-3d-2.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.958,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.05,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":25.6,"mv_y":9.6,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.09,"y":0.9,"rad":0.22437,"tex_zoom":1.76002,"r2":1,"g2":0,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":6.19589,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"additive":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.49981,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"thick":1,"additive":1,"scaling":3.91581,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//******** INITIALIZATION *********\\n//---------- some global vars, do not change -------------\\navg = 0.01;\\nq7 = .25; //MyZoom\\nq8 =  rand(2.0)-1.0; //fractal modifier\\n//q8 = 1; //#\\nq16 = 1 + rand(2); //Tele ; rather fish eye\\n//q16 = 1; //#\\nq18 = rand(0.8)+.1; //brightness balance back/front\\nq30 = 1; //logarithmic Z-Dist storage; unused\\nq31 =128;\\nstart = 1; travel = 0; RotZ = 0; look = 0; slow = 0; t0 = time+3; lampx = .5; lampy = .5;\\ncran0 = rand(1);\\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; ); \\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; ); \\ntrelx = 0;  trely = 0; trelz = 0;\\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\\n\\n//Find random starting point\\nwhile (exec2(\\n  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;\\n  PosX = rand(5)-2;   PosY = rand(5)-2;   PosZ = rand(5)-2; \\n\\n//  PosX = 3.3; PosY = 2; PosZ = -2; ran1 = 0; ran2 = 0; ran3 = 0; //#\\n\\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); \\n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\\n\\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.001;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.05;\\n  ,(dist < 0.6)*(len > 30)));\\n,(dist < .06))); //end while","frame_eqs_eel":"fps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25)); \\ndec_s = 1-.06*30/fps_;\\nbeat = (time >  t0+3); t0 = if(beat, time, t0);\\n\\nspeed = min(0.2,dist_-.02) * (1+2*avg) *(1-slow*.0)*.7/q7; //#\\nds = ds * dec_s + (1-dec_s)*speed*.25/fps_; \\nRotZ = if (RotZ==0,beat*(rand(100)<20*travel)*(rand(10)/10-.3),\\n                   bnot(beat*(rand(100)<30))*RotZ);\\nslow = if (bnot(slow), beat*(rand(1000*avg)<6), bnot(beat*(rand(100)<50)));\\nlook = if (bnot(look), beat*(rand(1000*speed)<12), bnot(beat*(rand(100)<50)));\\n\\n//Lamp View\\nlx = if (beat,rand(150)/200+.15,lx);\\nly = if (beat,rand(150)/200+.15,ly);\\nlampx = lampx * dec_s + (1-dec_s)*if (look,lx,0.5);\\nlampy = lampy * dec_s + (1-dec_s)*if (look,ly,0.5);\\nq1 = lampx; q2 = lampy;\\n\\n//Position \\nDirX= reg26; DirY= reg27; DirZ = reg28;\\nPosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ; \\nq4 = PosX; q5 = PosY; q6 = PosZ;\\n\\nangchg = (.2-dist_)*(dist_ < .2)*2;\\ntravel = if (angchg > 0,0,travel+ds);\\nv1 = v1 * dec_s + (1-dec_s)* RotZ * ds;\\nv2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;\\nv3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + 2*v1*sin(time*.1));\\n//v2 = .008;\\n//push old RotMat\\nreg30 =reg20; reg31 =reg21; reg32 =reg22; \\nreg33 =reg23; reg34 =reg24; reg35 =reg25; \\nreg36 =reg26; reg37 =reg27; reg38 =reg28; \\n\\nn = 0; avg = 0;\\nloop (5,\\n  n = n+1;\\n  //new Rot. Mat for infinitesimal angles\\n  ran1 = rand(100)/100;\\n  ran2 = rand(100)/200-.25;\\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); \\n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\\n\\n  //pop old RotMat\\n  reg20 =reg30; reg21 =reg31; reg22 =reg32; \\n  reg23 =reg33; reg24 =reg34; reg25 =reg35; \\n  reg26 =reg36; reg27 =reg37; reg28 =reg38; \\n\\n  //Multiply new RotMat by old one\\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\\n\\n  reg20 =q20; reg21 =q21; reg22 =q22;\\n  reg23 =q23; reg24 =q24; reg25 =q25;\\n  reg26 =q26; reg27 =q27; reg28 =q28;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.002;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.1;\\n  ,(dist < 0.6)*(len > 30)));\\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\\n  avg = avg+abs(megabuf(n)/5);\\n); //end loop 5\\n\\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\\n\\nxslope = min(max(2/avg*(megabuf(1)-megabuf(3)),-3),3);\\nyslope = min(max(2/avg*(megabuf(4)-megabuf(2)),-3),3);\\nmonitor = avg;\\ndist_ = dist_*dec_s + (1-dec_s)*dist;\\n\\nq10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv\\nq14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + 1.0/255 + start*.05; \\nq19 = .6 + .4*sin(time*.02+cran0*6); //brightness backgd\\nstart = start * .9;\\nq11 = v1; q12 = v2; q13 = v3;\\n//forward comp. of Rotation\\nmonitor = q16;\\n\\n\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nh1 = (bb-mn)/(mx-mn);\\nh2 = (mm-mn)/(mx-mn);\\nh3 = (tt-mn)/(mx-mn);\\n\\nv = 0.1333/fps;\\nbm = bm + (h1-h2)*v;\\nmt = mt + (h2-h3)*v;\\nbt = bt + (h1-h3)*v;\\n\\nw = bm*2;\\nq3 = sin(w);\\nq9 = cos(w);\\n\\n\\nq17 = bm;\\nq18 = mt;\\nq19 = bt;","pixel_eqs_eel":"warp = 0.0; zoom = 1; dx = -q12/q16*(1+0*pow(x-.5,2)); dy = q13/q16*(1+0*pow(y-.5,2)); rot =q11;","warp":"float sustain;\\nfloat xlat_mutabledist;\\nfloat xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\nvec3 xlat_mutableuv2;\\n shader_body { \\n  mat3 tmpvar_1;\\n  tmpvar_1[uint(0)].x = q20;\\n  tmpvar_1[uint(0)].y = q23;\\n  tmpvar_1[uint(0)].z = q26;\\n  tmpvar_1[1u].x = q21;\\n  tmpvar_1[1u].y = q24;\\n  tmpvar_1[1u].z = q27;\\n  tmpvar_1[2u].x = q22;\\n  tmpvar_1[2u].y = q25;\\n  tmpvar_1[2u].z = q28;\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  tmpvar_2.z = q6;\\n  sustain = (1.0123 - q14);\\n  vec2 uv_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - 0.5);\\n  xlat_mutableuv1 = ((tmpvar_5 * aspect.xy) * q16);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_pc_main, uv);\\n  uv_3 = ((tmpvar_5 * (1.0 - \\n    (q10 / (1.0 - ((tmpvar_6.z + \\n      (0.003921569 * tmpvar_6.y)\\n    ) + (q10 * 0.7))))\\n  )) + 0.5);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\\n  xlat_mutabledist = tmpvar_7.x;\\n  if ((tmpvar_7.y > 0.2)) {\\n    vec3 tmpvar_8;\\n    tmpvar_8 = (tmpvar_7.xyz - vec3(0.4, 0.5, 0.5));\\n    vec2 uvi_9;\\n    uvi_9 = ((tmpvar_8.zy * 0.003) + uv_3);\\n    vec2 pix_10;\\n    vec4 nb2_11;\\n    vec4 nb_12;\\n    vec2 x_13;\\n    x_13 = (uvi_9 - 0.5);\\n    pix_10 = (texsize.zw * (1.0 + (\\n      sqrt(dot (x_13, x_13))\\n     * 8.0)));\\n    float tmpvar_14;\\n    tmpvar_14 = (q10 * 0.7);\\n    vec4 tmpvar_15;\\n    tmpvar_15 = texture (sampler_pc_main, (uvi_9 - pix_10));\\n    nb_12.x = (1.0 - ((tmpvar_15.z + \\n      (0.003921569 * tmpvar_15.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_16;\\n    tmpvar_16 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(1.0, -1.0))));\\n    nb_12.y = (1.0 - ((tmpvar_16.z + \\n      (0.003921569 * tmpvar_16.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_17;\\n    tmpvar_17 = texture (sampler_pc_main, (uvi_9 + pix_10));\\n    nb_12.z = (1.0 - ((tmpvar_17.z + \\n      (0.003921569 * tmpvar_17.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_18;\\n    tmpvar_18 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(-1.0, 1.0))));\\n    nb_12.w = (1.0 - ((tmpvar_18.z + \\n      (0.003921569 * tmpvar_18.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_19;\\n    tmpvar_19 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(0.0, -1.0))));\\n    nb2_11.x = (1.0 - ((tmpvar_19.z + \\n      (0.003921569 * tmpvar_19.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_20;\\n    tmpvar_20 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(1.0, 0.0))));\\n    nb2_11.y = (1.0 - ((tmpvar_20.z + \\n      (0.003921569 * tmpvar_20.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_21;\\n    tmpvar_21 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(0.0, 1.0))));\\n    nb2_11.z = (1.0 - ((tmpvar_21.z + \\n      (0.003921569 * tmpvar_21.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_22;\\n    tmpvar_22 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(-1.0, 0.0))));\\n    nb2_11.w = (1.0 - ((tmpvar_22.z + \\n      (0.003921569 * tmpvar_22.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_23;\\n    tmpvar_23 = min (nb_12, nb2_11);\\n    nb_12.zw = tmpvar_23.zw;\\n    nb_12.xy = min (tmpvar_23.xy, tmpvar_23.zw);\\n    xlat_mutabledist = (min (nb_12.x, nb_12.y) + ((0.008 * tmpvar_8.x) * abs(tmpvar_8.y)));\\n  };\\n  vec4 tmpvar_24;\\n  tmpvar_24 = texture (sampler_pc_main, uv_3);\\n  float tmpvar_25;\\n  tmpvar_25 = min (xlat_mutabledist, (1.0 - (\\n    (tmpvar_24.z + (0.003921569 * tmpvar_24.y))\\n   + \\n    (q10 * 0.7)\\n  )));\\n  xlat_mutabledist = tmpvar_25;\\n  float tmpvar_26;\\n  tmpvar_26 = (tmpvar_25 + pow (tmpvar_25, 3.0));\\n  vec3 tmpvar_27;\\n  tmpvar_27.xy = (xlat_mutableuv1 * tmpvar_26);\\n  tmpvar_27.z = tmpvar_26;\\n  xlat_mutableuv2 = (((tmpvar_27 / q7) * tmpvar_1) + tmpvar_2);\\n  xlat_mutableuv2 = ((fract(\\n    ((xlat_mutableuv2 / 8.0) + 0.5)\\n  ) - 0.5) * 8.0);\\n  float li_28;\\n  vec3 zz0_29;\\n  vec3 zz_30;\\n  zz0_29 = (xlat_mutableuv2 + q8);\\n  li_28 = 0.0;\\n  zz_30 = ((2.0 * clamp (xlat_mutableuv2, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - xlat_mutableuv2);\\n  float tmpvar_31;\\n  tmpvar_31 = dot (zz_30, zz_30);\\n  if ((tmpvar_31 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_31 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_31);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_32;\\n  tmpvar_32 = dot (zz_30, zz_30);\\n  if ((tmpvar_32 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_32 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_32);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_33;\\n  tmpvar_33 = dot (zz_30, zz_30);\\n  if ((tmpvar_33 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_33 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_33);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_34;\\n  tmpvar_34 = dot (zz_30, zz_30);\\n  if ((tmpvar_34 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_34 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_34);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_35;\\n  tmpvar_35 = dot (zz_30, zz_30);\\n  if ((tmpvar_35 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_35 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_35);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_36;\\n  tmpvar_36 = dot (zz_30, zz_30);\\n  if ((tmpvar_36 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_36 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_36);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_37;\\n  tmpvar_37 = dot (zz_30, zz_30);\\n  if ((tmpvar_37 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_37 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_37);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_38;\\n  tmpvar_38 = dot (zz_30, zz_30);\\n  if ((tmpvar_38 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_38 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_38);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  vec4 tmpvar_39;\\n  tmpvar_39.xyz = zz_30;\\n  tmpvar_39.w = li_28;\\n  float tmpvar_40;\\n  tmpvar_40 = sqrt(dot (zz_30, zz_30));\\n  xlat_mutablestruc = (sqrt(dot (tmpvar_39.xyw, tmpvar_39.xyw)) / 24.0);\\n  vec4 tmpvar_41;\\n  tmpvar_41 = texture (sampler_pc_main, uv_3);\\n  float tmpvar_42;\\n  float tmpvar_43;\\n  tmpvar_43 = (q10 * 0.7);\\n  tmpvar_42 = ((log(\\n    (1.0 + (tmpvar_40 / 24.0))\\n  ) * 0.02) * (1.0 - (1.0 - \\n    ((tmpvar_41.z + (0.003921569 * tmpvar_41.y)) + tmpvar_43)\\n  )));\\n  float tmpvar_44;\\n  vec4 tmpvar_45;\\n  tmpvar_45 = texture (sampler_pc_main, uv_3);\\n  tmpvar_44 = (1.0 - ((tmpvar_45.z + \\n    (0.003921569 * tmpvar_45.y)\\n  ) + tmpvar_43));\\n  if ((((tmpvar_25 <= tmpvar_44) && (tmpvar_40 < 24.0)) && (tmpvar_25 > 0.005))) {\\n    ret_4.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * mix (texture (sampler_main, uv_3).xyz, \\n      ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1)\\n    , vec3(\\n      (q14 * 4.0)\\n    )).x));\\n    float x_46;\\n    x_46 = ((1.0 - tmpvar_25) * 255.0);\\n    float ip_47;\\n    ip_47 = float(int(x_46));\\n    vec2 tmpvar_48;\\n    tmpvar_48.x = (x_46 - ip_47);\\n    tmpvar_48.y = (ip_47 / 255.0);\\n    ret_4.yz = tmpvar_48;\\n  } else {\\n    vec3 tmpvar_49;\\n    tmpvar_49.y = 0.0;\\n    tmpvar_49.x = sustain;\\n    tmpvar_49.z = (1.0 - tmpvar_42);\\n    vec3 tmpvar_50;\\n    tmpvar_50.xy = vec2(0.003921569, 0.0);\\n    tmpvar_50.z = (q14 / 6.0);\\n    ret_4 = ((texture (sampler_fc_main, uv_3).xyz * tmpvar_49) - tmpvar_50);\\n  };\\n  vec4 tmpvar_51;\\n  tmpvar_51.w = 1.0;\\n  tmpvar_51.xyz = ret_4;\\n  ret = tmpvar_51.xyz;\\n }","comp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  xlat_mutabled = (texsize.zw * 1.5);\\n  xlat_mutabledx = (texture (sampler_main, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz);\\n  xlat_mutabledy = (texture (sampler_main, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = xlat_mutabledx.y;\\n  tmpvar_2.y = xlat_mutabledy.y;\\n  vec2 x_3;\\n  x_3 = (tmpvar_2 * 8.0);\\n  ret_1 = (((texture (sampler_main, uv).x * \\n    (1.0 - sqrt(dot (x_3, x_3)))\\n  ) * pow (hue_shader, vec3(6.0, 6.0, 6.0))) * 1.4);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec2 x_5;\\n  x_5 = (tmpvar_4 * 4.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = mix (ret_1, vec3(1.0, 1.0, 1.0), vec3(sqrt(dot (x_5, x_5))));\\n  ret_1 = tmpvar_6;\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = tmpvar_6;\\n  ret = tmpvar_7.xyz;\\n }"}')},"./presets/converted/flexi + fishbrain - neon mindblob grafitti.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.955,"echo_zoom":0.997,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.49,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":16.016,"zoomexp":11.56276,"fshader":1,"zoom":1.05971,"warp":0.13126,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"additive":1,"num_inst":126,"rad":0.0303,"tex_ang":0.62832,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"sides":14,"additive":1,"num_inst":128,"rad":0.03,"tex_ang":0.62832,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"sides":14,"additive":1,"num_inst":32,"rad":0.0297,"tex_ang":0.62832,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"sides":14,"additive":1,"num_inst":16,"rad":0.0303,"tex_ang":0.62832,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*4;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"xx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.0005*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1; q2 = x2; q3 = x3; q4 = x4;\\nq5 = y1; q6 = y2; q7 = y3; q8 = y4;\\nq9 =1/ aspectX;\\nq10 = 1/aspectY;\\n\\nzoom = 1;\\nr = r*0.96 +(x1-0.5);\\nrot = (r*0.1);\\n\\nq12 = atan2(vx4,vy4);\\nq11 = sqrt(vx4*vx4 + vy4*vy4);\\n\\nzoom = 1.001;\\nrot = 0.00;\\nwarp = 0.2;\\nwave_a = 0;","pixel_eqs_eel":"dir = -q12*1 + asin(1)*1;\\n\\nb1 = 0.1; // distance\\nm1 = q11*25;//-0.6 + q5*200; // size\\nt1 = 0.05; // velocity\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*b1;\\ny1 = yy -sin(dir+1.5708)*b1;\\n\\nx2 = xx   -cos(dir+1.5708)*b1;\\ny2 = yy +sin(dir+1.5708)*b1;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nsi1 = 1- 1/(1+pow(2,-d1*1000));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi2 = 1- 1/(1+pow(2,-d2*1000));\\n\\nsi3 = -pow(q5,3)*00;\\n\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*2;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*2;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.z;\\n  tmpvar_5.y = tmpvar_4.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\\n  ret_1.z = (((texture (sampler_main, tmpvar_6).z - \\n    ((texture (sampler_main, tmpvar_6).z - ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3).z) * 0.02)\\n  ) - 0.008) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.1)).x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.x;\\n  tmpvar_7.y = tmpvar_4.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = ((0.5 + (uv - 0.5)) - (tmpvar_7 * texsize.zw));\\n  ret_1.x = texture (sampler_main, tmpvar_8).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3))\\n  .x * 0.4) + 0.006));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.x;\\n  tmpvar_9.y = tmpvar_4.x;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_3.y;\\n  tmpvar_10.y = tmpvar_4.y;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_3.z;\\n  tmpvar_11.y = tmpvar_4.z;\\n  ret_1.y = texture (sampler_fc_main, (((uv - \\n    ((tmpvar_9 * texsize.zw) * 8.0)\\n  ) + (\\n    (tmpvar_10 * texsize.zw)\\n   * 4.0)) + ((tmpvar_11 * texsize.zw) * 8.0))).y;\\n  ret_1.y = (ret_1.y * (1.0 + (ret_1.x * 0.1)));\\n  ret_1.y = (ret_1.y - (0.004 + (\\n    clamp (ret_1.z, 0.0, 1.0)\\n   * 0.012)));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.z;\\n  tmpvar_5.y = tmpvar_4.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.y;\\n  tmpvar_6.y = tmpvar_4.y;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv - (tmpvar_5 * 0.1)) + (tmpvar_6 * 0.06));\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_main, uv);\\n  ret_1 = (((\\n    ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)\\n  .x * \\n    clamp ((1.0 - tmpvar_8.z), 0.0, 1.0)\\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\\n  ret_1 = (mix (ret_1, (\\n    pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0))\\n   * 1.4), vec3((\\n    (texture (sampler_main, tmpvar_7).x * 0.8)\\n   + \\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\\n  .x))) * clamp ((1.0 - \\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).y * 4.0)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.y;\\n  tmpvar_9.y = tmpvar_4.y;\\n  vec3 tmpvar_10;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = pow (hue_shader, vec3(8.0, 8.0, 8.0));\\n  tmpvar_10 = mix (mix (ret_1, vec3(1.0, 1.0, 1.0), (\\n    (tmpvar_11 * texture (sampler_main, clamp ((uv - (tmpvar_9 * 2.0)), 0.0, 1.0)).z)\\n   * 1.2)), (tmpvar_11.zxy * 1.8), tmpvar_8.yyy);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_10;\\n  ret = tmpvar_12.xyz;\\n }"}')},"./presets/converted/flexi + geiss - pogo cubes vs. tokamak vs. game of life [stahls jelly 4.5 finish].json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.626,"warpscale":1.331,"zoomexp":1.00001,"zoom":0.99951,"warp":0.08925,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"g":1,"r2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q6;\\nang = an*0.5;\\nx = q4;\\ny = q5;\\nrad = q3*sqrt(2);\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"g":1,"r2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q9;\\nang = an*0.5;\\nx = q7;\\ny = q8;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q12;\\nang = an*0.5;\\nx = q10;\\ny = q11;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"num_inst":4,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"an = an + 0.5*q16/num_inst;\\nw = asin(1)*4*instance/num_inst + an;\\nx = q6 + sin(w)*q5*0.5;\\ny = q7 + cos(w)*q5*0.5;\\nrad = q5*0.25;\\n\\n\\n//x = 0.5 + (x-0.5)/q2;\\n//y = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// the velocity vector\\n\\nx = q3 + sample*sin(q14)*q13*40;\\ny = q4 + sample*cos(q14)*q13*40;\\n\\n// tangential velocity of rotation\\n//x = q3 + sample*q16*40;\\n//y = q4 - q5/2;\\n\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// tangential property of velocity vector\\n\\nx = q3 + sample*sin(q10)*cos(q14-q10)*q13*40;\\ny = q4 + sample*cos(q10)*cos(q14-q10)*q13*40;\\n\\n// vx\\n//x = q3 + sample*q11*40;\\n//y = q4;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// orthogonal property of velocity vector\\n\\nx = q3 + sample*sin(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\ny = q4 + sample*cos(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\n\\n// vy\\n//x = q3;\\n//y = q4 + sample*q12*40;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"}],"init_eqs_eel":"x1 = 0.5;\\ny1 = 0.6;\\n\\nx2 = 0.5;\\ny2 = 0.4;\\n\\nx3 = 0.5;\\ny3 = 0.2;\\n\\nvr1 = 0.0001;\\nvr2 = 0.0;\\nvr3 = 0.0;\\n\\nvx1 = 0;\\nvx2 = 0;\\nvx3 = 0;","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\nr = 0.03+ (bass_att+treb_att)*0.004;\\nmonitor = aspecty;\\nvr = sin(vr1)*r;\\nbounce = below(y1,r-(aspectx-1)*0.5);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.96 + (r-y1-(aspectx-1)*0.5)*0.1, vy1-0.0003*60/fps);\\nvx1 = if(bounce, vx1 + (vr-vx1)*0.15, vx1);vr = if(bounce, vr + (vx1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = above(x1,1-r+(aspecty-1)*0.5);vx1 = if(bounce, - abs(vx1)*0.96 + (1-r-x1+(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (vr-vy1)*0.15, vy1);vr = if(bounce, vr + (vy1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = below(x1,r-(aspecty-1)*0.5);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.96 + (r-x1-(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (-vr-vy1)*0.15, vy1);vr = if(bounce, vr - (vy1+vr)*0.85 , vr);vr1 = asin(vr/r);\\n\\nvr = sin(vr2)*r;\\nbounce = below(y2,r-(aspectx-1)*0.5);y2 = y2+vy2;vy2 = if(bounce, abs(vy2)*0.96 + (r-y2-(aspectx-1)*0.5)*0.1, vy2-0.0003*60/fps);\\nvx2 = if(bounce, vx2 + (vr-vx2)*0.15, vx2);vr = if(bounce, vr + (vx2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = above(x2,1-r+(aspecty-1)*0.5);vx2 = if(bounce, - abs(vx2)*0.96 + (1-r-x2+(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (vr-vy2)*0.15, vy2);vr = if(bounce, vr + (vy2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = below(x2,r-(aspecty-1)*0.5);x2 = x2+vx2;vx2 = if(bounce, abs(vx2)*0.96 + (r-x2-(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (-vr-vy2)*0.15, vy2);vr = if(bounce, vr - (vy2+vr)*0.85 , vr);vr2 = asin(vr/r);\\n\\nvr = sin(vr3)*r;\\nbounce = below(y3,r-(aspectx-1)*0.5);y3 = y3+vy3;vy3 = if(bounce, abs(vy3)*0.96 + (r-y3-(aspectx-1)*0.5)*0.1, vy3-0.0003*60/fps);\\nvx3 = if(bounce, vx3 + (vr-vx3)*0.15, vx3);vr = if(bounce, vr + (vx3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = above(x3,1-r+(aspecty-1)*0.5);vx3 = if(bounce, - abs(vx3)*0.96 + (1-r-x3+(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (vr-vy3)*0.15, vy3);vr = if(bounce, vr + (vy3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = below(x3,r-(aspecty-1)*0.5);x3 = x3+vx3;vx3 = if(bounce, abs(vx3)*0.96 + (r-x3-(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (-vr-vy3)*0.15, vy3);vr = if(bounce, vr - (vy3+vr)*0.85 , vr);vr3 = asin(vr/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)),sqrt( sqr(x1-x2) + sqr(y1-y2)));\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvr = sin(vr1)*r; v2r=sin(vr2)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)),sqrt( sqr(x1-x3) + sqr(y1-y3)));\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvr = sin(vr1)*r; v2r=sin(vr3)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr3 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x3+vx3-x2-vx2) + sqr(y3+vy3-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)),sqrt( sqr(x2-x3) + sqr(y2-y3)));\\nref_ang = atan2(x2-x3,y2-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx3,vy3);w2 = atan2(vx2,vy2);\\nvr = sin(vr3)*r; v2r=sin(vr2)*r;\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr3 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\n\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = r*2;\\n\\nq4  = x1;  q5 = y1;  q6 = vr1;\\nq7  = x2;  q8 = y2;  q9 = vr2;\\nq10 = x3; q11 = y3; q12 = vr3;\\n\\nq13 = atan2( (x1+x2+x3)/3 - 0.5, (y1+y2+y3)/3-0.5);\\nq14 = sigmoid(sqrt( sqr((x1+x2+x3)/3 - 0.5) + sqr((y1+y2+y3)/3-0.5) ),2)*0.2;","pixel_eqs_eel":"du = (x*2-1) - (q4+q7+q10-1.5)*2/3;\\ndv = (y*2-1) + (q5+q8+q11-1.5)*2/3;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv);\\nmult = sin(dist*0.05)*0.4*q14;\\ndx = mult*sin(ang2*2+q13)*aspectx;\\ndy = mult*cos(ang2*2+q13)*aspecty;","warp":" shader_body { \\n  float n_1;\\n  vec3 ret_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_pw_main, uv);\\n  ret_2 = tmpvar_3.xyz;\\n  n_1 = (clamp ((texture (sampler_pw_main, \\n    (uv + texsize.zw)\\n  ).x * 999.0), 0.0, 1.0) + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(1.0, 0.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(1.0, -1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(0.0, 1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(0.0, -1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(-1.0, 1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(-1.0, 0.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv - texsize.zw)\\n  ).x * 999.0), 0.0, 1.0));\\n  if ((n_1 < 1.9)) {\\n    ret_2 = (tmpvar_3.xyz - 0.4);\\n  };\\n  if ((n_1 > 3.1)) {\\n    ret_2 = (ret_2 - 0.4);\\n  };\\n  bool tmpvar_4;\\n  if ((ret_2.x < 0.1)) {\\n    tmpvar_4 = (abs((n_1 - 3.0)) < 0.5);\\n  } else {\\n    tmpvar_4 = bool(0);\\n  };\\n  if (tmpvar_4) {\\n    ret_2 = (ret_2 + 0.4);\\n  };\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 8.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1)).y;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + (tmpvar_4 * 0.55));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (vec3((0.25 * dot (\\n    clamp ((2.0 * ((tmpvar_6.xyz * scale3) + bias3)), 0.0, 1.0)\\n  , vec3(0.32, 0.49, 0.29)))) - (0.8 * dot (\\n    clamp (((20.0 * (\\n      (0.6 * ((texture (sampler_blur2, uv).xyz * scale2) + bias2))\\n     - 0.01)) - 2.0), 0.0, 1.0)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = (ret_2 + dot (clamp (\\n    ((30.0 * ((texture (sampler_main, uv).xyz + \\n      (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\\n    ) - 0.01)) - 2.0)\\n  , 0.0, 1.0), vec3(0.32, 0.49, 0.29)));\\n  ret_2 = (ret_2 + 1.0);\\n  vec3 tmpvar_8;\\n  tmpvar_8 = mix (ret_2, (ret_2 * (\\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\\n   - \\n    ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1)\\n  )), pow (hue_shader, ret_2));\\n  ret2_1 = (vec3((-0.5 * dot (\\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\\n  , vec3(0.32, 0.49, 0.29)))) + (0.8 * (\\n    (texture (sampler_blur1, tmpvar_5).xyz * scale1)\\n   + bias1)));\\n  ret2_1 = (ret2_1 - (0.9 * texture (sampler_main, tmpvar_5).xyz));\\n  ret2_1 = (ret2_1 - 1.5);\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (ret2_1, (ret2_1 * (\\n    ((tmpvar_6.xyz * scale3) + bias3)\\n   - \\n    ((tmpvar_7.xyz * scale1) + bias1)\\n  )), pow (hue_shader.zxy, tmpvar_8));\\n  ret2_1 = tmpvar_9;\\n  vec3 tmpvar_10;\\n  tmpvar_10 = abs((tmpvar_8 - tmpvar_9));\\n  ret_2 = (tmpvar_10 * tmpvar_10);\\n  ret_2 = (ret_2 * 1.15);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_2;\\n  ret = tmpvar_11.xyz;\\n }"}')},"./presets/converted/flexi - bouncing balls [double mindblob neon mix].json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.626,"warpscale":8.642,"zoomexp":7.10084,"zoom":0.99951,"warp":0.09014,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":48,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q3;\\ny = q4;\\nrad = q5;\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"sides":48,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q6;\\ny = q7;\\nrad = q8;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q9;\\ny = q10;\\nrad = q11;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"thickoutline":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q12;\\ny = q13;\\nrad = q14;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"g":0,"b":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t4)*t3*20;\\ny = t2 + sample*cos(t4)*t3*20;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10 + asin(1), ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"}],"init_eqs_eel":"x1 = 0.5;\\nx2 = 0.51;\\n\\ny2 = 0.9;\\ny1 = 0.7;\\n\\nx3 = 0.8;\\ny3 = 0.5;\\n\\nx4 = 0.2;\\ny4 = 0.5;\\n\\n\\nax1 = 0;\\nay1 = 0;\\nax2 = 0;\\nay2 = 0;\\nax3 = 0;\\nay3 = 0;\\n\\nvx1 = 0.000;\\nvx2 = 0.000;","frame_eqs_eel":"zoom = 1.002;\\nwarp = 0.2;\\nwave_a = 0;\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nr = 0.04+ max(bass_att,treb_att)*0.008;\\nbounce = below(y1,r);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.0003*60/fps);\\nbounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);\\nbounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);\\nbounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.0003*60/fps);\\nbounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);\\nbounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);\\nbounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.0003*60/fps);\\nbounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);\\nbounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);\\nbounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.0003*60/fps);\\nbounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);\\nbounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = x1;\\nq4 = y1;\\nq5 = r*2;\\nq6 = x2;\\nq7 = y2;\\nq8 = r*2;\\nq9 = x3;\\nq10 = y3;\\nq11 = r*2;\\nq12 = x4;\\nq13 = y4;\\nq14 = r*2;\\nq15 = atan2(vx4,vy4);\\nq16 = sqrt(vx4*vx4+vy4*vy4);\\nq17 = atan2(vx3,vy3);\\nq18 = sqrt(vx3*vx3+vy3*vy3);","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q2;\\ny = 0.5 + (y-0.5)*q1;\\n\\n\\ndir = -q15 + asin(1);\\nb1 = 0.075;\\nm1 = q16*25;\\nxx = q12;\\nyy = 1-q13;\\nx1 = xx  -sin(dir)*b1;\\ny1 = yy  -cos(dir)*b1;\\nx2 = xx  +sin(dir)*b1;\\ny2 = yy  +cos(dir)*b1;\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi1 = sigmoid(-d1,1000);\\nsi2 = sigmoid(-d2,1000);\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2)*3*q1;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2)*3*q2;\\n\\ndir = -q17 + asin(1);\\nm1 = q18*25;\\nxx = q9;\\nyy = 1-q10;\\nx1 = xx  -sin(dir)*b1;\\ny1 = yy  -cos(dir)*b1;\\nx2 = xx  +sin(dir)*b1;\\ny2 = yy  +cos(dir)*b1;\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi1 = sigmoid(-d1,1000);\\nsi2 = sigmoid(-d2,1000);\\ndx = dx + (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2)*3*q1;\\ndy = dy + (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2)*3*q2;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.z;\\n  tmpvar_5.y = tmpvar_4.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\\n  ret_1.z = (((texture (sampler_main, tmpvar_6).z - \\n    ((texture (sampler_main, tmpvar_6).z - ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3).z) * 0.02)\\n  ) - 0.008) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.1)).x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.x;\\n  tmpvar_7.y = tmpvar_4.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = ((0.5 + (uv - 0.5)) - (tmpvar_7 * texsize.zw));\\n  ret_1.x = texture (sampler_main, tmpvar_8).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3))\\n  .x * 0.4) + 0.006));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.x;\\n  tmpvar_9.y = tmpvar_4.x;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_3.y;\\n  tmpvar_10.y = tmpvar_4.y;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_3.z;\\n  tmpvar_11.y = tmpvar_4.z;\\n  ret_1.y = texture (sampler_fc_main, (((uv - \\n    ((tmpvar_9 * texsize.zw) * 8.0)\\n  ) + (\\n    (tmpvar_10 * texsize.zw)\\n   * 4.0)) + ((tmpvar_11 * texsize.zw) * 8.0))).y;\\n  ret_1.y = (ret_1.y * (1.0 + (ret_1.x * 0.1)));\\n  ret_1.y = (ret_1.y - (0.004 + (\\n    clamp (ret_1.z, 0.0, 1.0)\\n   * 0.04)));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.z;\\n  tmpvar_5.y = tmpvar_4.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.y;\\n  tmpvar_6.y = tmpvar_4.y;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv - (tmpvar_5 * 0.1)) + (tmpvar_6 * 0.06));\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_main, uv);\\n  ret_1 = (((\\n    ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)\\n  .x * \\n    clamp ((1.0 - tmpvar_8.z), 0.0, 1.0)\\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\\n  ret_1 = (mix (ret_1, (\\n    pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0))\\n   * 1.4), vec3((\\n    (texture (sampler_main, tmpvar_7).x * 0.8)\\n   + \\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\\n  .x))) * clamp ((1.0 - \\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).y * 4.0)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.y;\\n  tmpvar_9.y = tmpvar_4.y;\\n  vec3 tmpvar_10;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = pow (hue_shader, vec3(8.0, 8.0, 8.0));\\n  tmpvar_10 = mix (mix (ret_1, vec3(1.0, 1.0, 1.0), (\\n    (tmpvar_11 * texture (sampler_main, clamp ((uv - (tmpvar_9 * 2.0)), 0.0, 1.0)).z)\\n   * 1.2)), (tmpvar_11.zxy * 1.8), tmpvar_8.yyy);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_10;\\n  ret = tmpvar_12.xyz;\\n }"}')},"./presets/converted/flexi - mom, why the sky looks different today.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":0.267,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpscale":16.016,"zoomexp":11.56276,"zoom":1.05971,"warp":0.13126,"wave_y":0.04,"ob_size":0,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.01,"tex_ang":0.12566,"tex_zoom":1.51878,"g":0.99,"b":1,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.80013,"ang":4.64954,"tex_zoom":1.24471,"g":1,"b":1,"r2":1,"b2":1,"a2":0.77,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"scaling":2.0231,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*4;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"scaling":2.0231,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*4;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"q11 = 0.5/asin(1);","frame_eqs_eel":"zoom = 1;\\nv = v*0.9 + (bass-treb)*0.04;\\nt = t+ v*0.01;\\nq12 = time*0.1 + t;\\nq13 = 0.25 + (bass_att-treb_att)*0.01;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec2 d_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 4.0);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    fract((uv + (vec2(1.0, 0.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    fract((uv - (vec2(1.0, 0.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (((texture (sampler_blur1, \\n    fract((uv + (vec2(0.0, 1.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    fract((uv - (vec2(0.0, 1.0) * tmpvar_4)))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  d_2 = -(tmpvar_4);\\n  float tmpvar_8;\\n  tmpvar_8 = (d_2 * 4.0).x;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_5.y;\\n  tmpvar_9.y = tmpvar_6.y;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_5.x;\\n  tmpvar_10.y = tmpvar_6.x;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = ((uv - (tmpvar_9 * d_2)) - (tmpvar_10 * tmpvar_8));\\n  ret_3.y = texture (sampler_fc_main, (tmpvar_11 - floor(tmpvar_11))).y;\\n  ret_3.y = (ret_3.y + ((\\n    (ret_3.y - tmpvar_7.y)\\n   * 0.042) + -0.0075));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_5.x;\\n  tmpvar_12.y = tmpvar_6.x;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.z;\\n  tmpvar_13.y = tmpvar_6.z;\\n  my_uv_1 = ((uv - (tmpvar_12 * d_2)) - (tmpvar_13 * tmpvar_8));\\n  ret_3.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\\n  ret_3.x = (ret_3.x + ((\\n    (ret_3.x - tmpvar_7.x)\\n   * 0.042) + -0.0075));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = tmpvar_5.z;\\n  tmpvar_14.y = tmpvar_6.z;\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = tmpvar_5.y;\\n  tmpvar_15.y = tmpvar_6.y;\\n  my_uv_1 = ((uv - (tmpvar_14 * d_2)) - (tmpvar_15 * tmpvar_8));\\n  ret_3.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_3.z = (ret_3.z + ((\\n    (ret_3.z - tmpvar_7.z)\\n   * 0.042) + -0.0075));\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = ret_3;\\n  ret = tmpvar_16.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  vec3 ret_2;\\n  float tmpvar_3;\\n  tmpvar_3 = -(q12);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.wz);\\n  float tmpvar_5;\\n  float tmpvar_6;\\n  tmpvar_6 = (min (abs(\\n    (tmpvar_4.x / tmpvar_4.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_4.x / tmpvar_4.y)\\n  ), 1.0));\\n  float tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 * tmpvar_6);\\n  tmpvar_7 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_7) + 0.05368138) * tmpvar_7) - 0.1173503)\\n     * tmpvar_7) + 0.1938925) * tmpvar_7) - 0.3326756)\\n   * tmpvar_7) + 0.9999793) * tmpvar_6);\\n  tmpvar_7 = (tmpvar_7 + (float(\\n    (abs((tmpvar_4.x / tmpvar_4.y)) > 1.0)\\n  ) * (\\n    (tmpvar_7 * -2.0)\\n   + 1.570796)));\\n  tmpvar_5 = (tmpvar_7 * sign((tmpvar_4.x / tmpvar_4.y)));\\n  if ((abs(tmpvar_4.y) > (1e-08 * abs(tmpvar_4.x)))) {\\n    if ((tmpvar_4.y < 0.0)) {\\n      if ((tmpvar_4.x >= 0.0)) {\\n        tmpvar_5 += 3.141593;\\n      } else {\\n        tmpvar_5 = (tmpvar_5 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_5 = (sign(tmpvar_4.x) * 1.570796);\\n  };\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = ((tmpvar_5 * q11) - tmpvar_3);\\n  tmpvar_8.y = (((q13 * \\n    log(sqrt(dot (tmpvar_4, tmpvar_4)))\\n  ) + (tmpvar_5 * q11)) + tmpvar_3);\\n  uv_1 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_8 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  vec4 tmpvar_9;\\n  tmpvar_9 = texture (sampler_main, uv_1);\\n  ret_2 = (vec3(dot (tmpvar_9.xyz, vec3(0.32, 0.49, 0.29))) * mix (vec3(1.0, 1.0, 1.0), vec3(0.2, 0.5, 1.0), tmpvar_9.xxx));\\n  ret_2 = (ret_2 * 2.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_2;\\n  ret = tmpvar_10.xyz;\\n }"}')},"./presets/converted/flexi - patternton, district of media, capitol of the united abstractions of fractopia.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.242,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.88,"warpscale":9.181,"zoomexp":0.65309,"zoom":0.87866,"warp":0.04914,"wave_y":0.04,"ob_size":0.05,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"y":0.04,"rad":0.01,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"a":0,"g2":0,"b2":0.01,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.49,"rad":1.32907,"tex_zoom":0.49831,"g":1,"b":1,"a":0.99,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"r = 1; g = 0; b = 1;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.6 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"zoom = 1;\\n//warp = 0;\\nscale = 1;\\nangle = time*.1;\\ntranslation_x = 0;\\ntranslation_y = 0.12;\\n\\na_r = cos(angle)*scale;\\na_i = sin(angle)*scale;\\nb_r = translation_x;\\nb_i = translation_y;\\n\\n//complex inverted\\nscale = 1.6;\\nangle = 0;\\ntranslation_u = 0;\\ntranslation_v = 0;\\n\\n// c\\nq15 = cos(angle)*scale;\\nq16 = sin(angle)*scale;\\n\\n// d\\nq17 = translation_u;\\nq18 = translation_v;\\n\\n// c^(-1)\\nc_inv_r = q15/(q15*q15+q16*q16);\\nc_inv_i = q16/(q15*q15+q16*q16);\\n\\n// a*c^(-1)\\nq11 = (a_r*c_inv_r - a_i*c_inv_i);\\nq12 = (a_r*c_inv_i - a_i*c_inv_r);\\n\\n// (bc-ad)\\nbcad_r = (b_r*q15 - b_i*q16)-(a_r*q17-a_i*q18);\\nbcad_i = (b_r*q16 - b_i*q15)-(a_r*q18-a_i*q17);\\n\\n// mu*c^(-1)\\nq13 = bcad_r*c_inv_r - bcad_i*c_inv_i;\\nq14 = bcad_r*c_inv_i - bcad_i*c_inv_r;","pixel_eqs_eel":"","warp":" shader_body { \\n  float conway_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_3.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_2.y = texture (sampler_pc_main, (uv - (tmpvar_3 * 0.004))).y;\\n  ret_2.y = (ret_2.y + ((\\n    ((ret_2.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y) - 0.1)\\n   * 0.1) + 0.02));\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (vec2(0.0, 1.0) * texsize.zw);\\n  ret_2.z = (texture (sampler_fc_main, (uv - tmpvar_4)).z - 0.004);\\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).x + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + tmpvar_4)).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).x);\\n  conway_1 = (conway_1 - fract(conway_1));\\n  float tmpvar_5;\\n  tmpvar_5 = clamp (texture (sampler_pc_main, uv_orig).x, 0.0, 1.0);\\n  ret_2.x = (clamp ((1.0 - \\n    abs((conway_1 - 3.0))\\n  ), 0.0, 1.0) * (1.0 - tmpvar_5));\\n  ret_2.x = (ret_2.x + (clamp (\\n    max ((1.0 - abs((conway_1 - 2.0))), (1.0 - abs((conway_1 - 3.0))))\\n  , 0.0, 1.0) * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 moebius_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q11;\\n  tmpvar_3.y = q12;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q17;\\n  tmpvar_4.y = q18;\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  tmpvar_5 = (tmpvar_6 * aspect.xy);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((tmpvar_5.x * q15) - (tmpvar_5.y * q16));\\n  tmpvar_7.y = ((tmpvar_5.x * q16) - (tmpvar_5.y * q15));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 + tmpvar_4);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = ((q13 * tmpvar_8.x) + (q14 * tmpvar_8.y));\\n  tmpvar_9.y = ((q14 * tmpvar_8.x) - (q13 * tmpvar_8.y));\\n  moebius_1 = (((tmpvar_9 / \\n    ((tmpvar_8.x * tmpvar_8.x) + (tmpvar_8.y * tmpvar_8.y))\\n  ) + tmpvar_3) * 0.5);\\n  float tmpvar_10;\\n  tmpvar_10 = sqrt(dot (moebius_1, moebius_1));\\n  moebius_1 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((moebius_1 * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.95));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (0.5 + (tmpvar_6 * 0.2));\\n  ret_2 = (texture (sampler_main, tmpvar_11).z * vec3(0.4, 0.0, 0.7));\\n  ret_2 = (mix (ret_2, vec3(0.0, 1.0, 1.0), vec3(clamp (texture (sampler_fc_main, moebius_1).y, 0.0, 1.0))) * (1.4 - pow (\\n    (tmpvar_10 * 0.8)\\n  , 0.3)));\\n  vec3 tmpvar_12;\\n  tmpvar_12 = mix (mix (mix (ret_2, vec3(4.0, 1.0, 0.0), vec3(\\n    ((clamp ((texture (sampler_fc_main, tmpvar_11).y - texture (sampler_pc_main, tmpvar_11).y), 0.0, 1.0) * 4.0) * (tmpvar_10 * tmpvar_10))\\n  )), vec3(-4.0, -4.0, -4.0), texture (sampler_main, tmpvar_11).xxx), vec3(2.0, 2.0, 2.0), vec3((texture (sampler_pc_main, tmpvar_11).x * 0.75)));\\n  ret_2 = tmpvar_12;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = tmpvar_12;\\n  ret = tmpvar_13.xyz;\\n }"}')},"./presets/converted/flexi - swing out on the spiral.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.99996,"g":1,"b":1,"r2":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*0.618)*0.2;\\ny = 0.5+cos(time*1.618)*0.2;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"g":1,"b":1,"g2":0,"b2":1,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*2.618)*0.3;\\ny = 0.5+cos(time*3.14)*0.3;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\\n"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.9998,"g":1,"b":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(-time*2.618)*0.4;\\ny = 0.5+cos(-time*1.14)*0.4;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.16188,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"scaling":25.12601,"smoothing":1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q11 = 0.5/asin(1);","frame_eqs_eel":"//zoom = 0.99;\\nib_r = sin(time*1.25*4)*0.3+0.7;\\nib_g = sin(time*4)*0.3+0.3;\\nib_b = sin(time/3*4)*0.5+0.5;\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*3;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 25;\\ngrav = 1.1;\\nresist = 1;\\nbounce = 0.85;\\ndt = 0.0002*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\nq4 = x4;\\nq8 = y4;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\n\\nzoom = 1;\\nwarp = 0;\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nob_r = (bb-mn)/(mx-mn);\\nob_b = (mm-mn)/(mx-mn);\\nob_g = (tt-mn)/(mx-mn);\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\na = a*0.95 + q5;\\n\\ns = s*0.9 + a;\\nq3 = s*0.1;\\nt = t + 0.1/fps;\\nt = if(above(t,2),t-2,t);\\nq12 = -t;\\nmonitor = t;\\nwave_a = 0;","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 + (y-0.5)*q2;\\n\\ndir = -q6*1 + asin(1)*0;\\n\\nxx = q4;\\nyy = 1-q8;\\n\\ndx = 0; dy = 0;\\n\\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\\n\\nr = 0.08;\\nv = -15*q5;\\ndx = v*sin(dir)*(r-d)*(1-sigmoid(d-r,200))*q2;\\ndy = v*cos(dir)*(r-d)*(1-sigmoid(d-r,200))*q1;","warp":" shader_body { \\n  vec3 tmpvar_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  tmpvar_1 = vec3((((tmpvar_2.x + tmpvar_2.y) + tmpvar_2.z) * 0.33333));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, clamp (\\n    (uv - ((vec2(0.0, 0.0168) * (tmpvar_1 - 0.35).xy) * (tmpvar_1 - 0.4).xy))\\n  , 0.0, 1.0)).xyz - 0.001) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 2.0)) + rand_frame.xy)\\n  ) - 0.5) * 0.04).xyz);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv - 0.5).yx * aspect.zw);\\n  float tmpvar_2;\\n  float tmpvar_3;\\n  tmpvar_3 = (min (abs(\\n    (tmpvar_1.x / tmpvar_1.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_1.x / tmpvar_1.y)\\n  ), 1.0));\\n  float tmpvar_4;\\n  tmpvar_4 = (tmpvar_3 * tmpvar_3);\\n  tmpvar_4 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_4) + 0.05368138) * tmpvar_4) - 0.1173503)\\n     * tmpvar_4) + 0.1938925) * tmpvar_4) - 0.3326756)\\n   * tmpvar_4) + 0.9999793) * tmpvar_3);\\n  tmpvar_4 = (tmpvar_4 + (float(\\n    (abs((tmpvar_1.x / tmpvar_1.y)) > 1.0)\\n  ) * (\\n    (tmpvar_4 * -2.0)\\n   + 1.570796)));\\n  tmpvar_2 = (tmpvar_4 * sign((tmpvar_1.x / tmpvar_1.y)));\\n  if ((abs(tmpvar_1.y) > (1e-08 * abs(tmpvar_1.x)))) {\\n    if ((tmpvar_1.y < 0.0)) {\\n      if ((tmpvar_1.x >= 0.0)) {\\n        tmpvar_2 += 3.141593;\\n      } else {\\n        tmpvar_2 = (tmpvar_2 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_2 = (sign(tmpvar_1.x) * 1.570796);\\n  };\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (tmpvar_2 * q11);\\n  tmpvar_5.y = (((0.5 * \\n    log(sqrt(dot (tmpvar_1, tmpvar_1)))\\n  ) - (tmpvar_2 * q11)) + q12);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = pow (texture (sampler_main, (0.5 + (\\n    (0.5 - abs(((\\n      fract((tmpvar_5 * 0.5))\\n     * 2.0) - 1.0)))\\n   * vec2(0.96, 1.0)))).xyz, vec3(0.618034, 0.618034, 0.618034));\\n  ret = tmpvar_6.xyz;\\n }"}')},"./presets/converted/flexi - what is the matrix.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.242,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.397,"warpscale":15.099,"zoomexp":0.65309,"zoom":0.87866,"warp":0.04027,"wave_y":0.04,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"y":0.04,"rad":0.01,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"a":0,"g2":0,"b2":0.01,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.49,"rad":1.32907,"tex_zoom":0.49831,"g":1,"b":1,"a":0.99,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"r = 1; g = 0; b = 1;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.6 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"zoom = 0.998;\\n//warp = 0;\\nscale = 1;\\nangle = time*.02;\\ntranslation_x = 0;\\ntranslation_y = 0.12;\\n\\na_r = cos(angle)*scale;\\na_i = sin(angle)*scale;\\nb_r = translation_x;\\nb_i = translation_y;\\n\\n//complex inverted\\nscale = 1;\\nangle = sin(time*0.1337)*0.3*0;\\ntranslation_u = 0;\\ntranslation_v = -0.2;\\n\\n// c\\nq15 = cos(angle)*scale;\\nq16 = sin(angle)*scale;\\n\\n// d\\nq17 = translation_u;\\nq18 = translation_v;\\n\\n// c^(-1)\\nc_inv_r = q15/(q15*q15+q16*q16);\\nc_inv_i = q16/(q15*q15+q16*q16);\\n\\n// a*c^(-1)\\nq11 = (a_r*c_inv_r - a_i*c_inv_i);\\nq12 = (a_r*c_inv_i - a_i*c_inv_r);\\n\\n// (bc-ad)\\nbcad_r = (b_r*q15 - b_i*q16)-(a_r*q17-a_i*q18);\\nbcad_i = (b_r*q16 - b_i*q15)-(a_r*q18-a_i*q17);\\n\\n// mu*c^(-1)\\nq13 = bcad_r*c_inv_r - bcad_i*c_inv_i;\\nq14 = bcad_r*c_inv_i - bcad_i*c_inv_r;","pixel_eqs_eel":"","warp":" shader_body { \\n  float conway_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_3.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_2.y = texture (sampler_pc_main, (uv - (tmpvar_3 * 0.004))).y;\\n  ret_2.y = (ret_2.y + ((\\n    ((ret_2.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y) - 0.1)\\n   * 0.1) + 0.02));\\n  ret_2.z = (texture (sampler_fc_main, (0.5 + (\\n    (uv - 0.5)\\n   * 0.992))).z - 0.004);\\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).x + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(0.0, 1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).x);\\n  conway_1 = (conway_1 - fract(conway_1));\\n  float tmpvar_4;\\n  tmpvar_4 = clamp (texture (sampler_pc_main, uv_orig).x, 0.0, 1.0);\\n  ret_2.x = (clamp ((1.0 - \\n    abs((conway_1 - 3.0))\\n  ), 0.0, 1.0) * (1.0 - tmpvar_4));\\n  ret_2.x = (ret_2.x + (clamp (\\n    max ((1.0 - abs((conway_1 - 2.0))), (1.0 - abs((conway_1 - 3.0))))\\n  , 0.0, 1.0) * tmpvar_4));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec2 moebius_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q11;\\n  tmpvar_3.y = q12;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q17;\\n  tmpvar_4.y = q18;\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  tmpvar_5 = (tmpvar_6 * aspect.xy);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((tmpvar_5.x * q15) - (tmpvar_5.y * q16));\\n  tmpvar_7.y = ((tmpvar_5.x * q16) - (tmpvar_5.y * q15));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 + tmpvar_4);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = ((q13 * tmpvar_8.x) + (q14 * tmpvar_8.y));\\n  tmpvar_9.y = ((q14 * tmpvar_8.x) - (q13 * tmpvar_8.y));\\n  moebius_1 = (((tmpvar_9 / \\n    ((tmpvar_8.x * tmpvar_8.x) + (tmpvar_8.y * tmpvar_8.y))\\n  ) + tmpvar_3) * 0.5);\\n  float tmpvar_10;\\n  tmpvar_10 = sqrt(dot (moebius_1, moebius_1));\\n  moebius_1 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((moebius_1 * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.99));\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (mix (mix (\\n    mix (mix ((mix (ret_2, vec3(0.2, 0.6, 1.0), vec3(\\n      (texture (sampler_pc_main, moebius_1).y * 2.0)\\n    )) * (vec3(1.0, 1.0, 1.0) - vec3(\\n      ((((texture (sampler_blur1, \\n        (0.5 + (tmpvar_6 * 0.5))\\n      ).xyz * scale1) + bias1).y * 2.0) * tmpvar_10)\\n    ))), vec3(1.0, 1.0, 1.0), texture (sampler_pc_main, moebius_1).xxx), vec3(4.0, 1.0, 0.0), vec3(clamp (((texture (sampler_pc_main, \\n      (0.5 + (tmpvar_6 * 0.2))\\n    ).y * 2.0) * (\\n      (tmpvar_10 * tmpvar_10)\\n     * tmpvar_10)), 0.0, 1.0)))\\n  , vec3(0.1, 0.0, 0.0), vec3(\\n    clamp ((((texture (sampler_blur1, \\n      (0.5 + (tmpvar_6 * 0.2))\\n    ).xyz * scale1) + bias1).x * 12.0), 0.0, 1.0)\\n  )), (vec3(0.5, 0.8, 1.0) * texture (sampler_pc_main, uv).z), vec3((\\n    clamp ((((texture (sampler_blur1, \\n      (0.5 + (tmpvar_6 * 0.2))\\n    ).xyz * scale1) + bias1).x * 4.0), 0.0, 1.0)\\n   * 1.4))), vec3(1.0, 1.0, 1.0), texture (sampler_pc_main, (0.5 + (tmpvar_6 * 0.2))).xxx);\\n  ret_2 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }"}')},"./presets/converted/gunthry is out back bloodying up the pine trees - adm atomising (v) the disintigrate (n).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.7,"decay":1,"echo_zoom":1.002,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.157,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.2,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":512,"rad":0.1026,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/100;\\na=(above(bass+mid+treb,.8));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"enabled":1,"sides":23,"num_inst":1024,"rad":0.10262,"ang":0.43982,"tex_ang":0.62832,"a":0.5,"r2":1,"g2":0,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/75;\\na=(above(bass+mid+treb,.1));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.20269,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.22389,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"bass_tick = above(bass_att,bass_tick)*2 + (1-above(bass_att,bass_tick))*\\n((bass_tick-1.3)*0.96+1.3);\\ntreb_tick = above(treb_att,treb_tick)*2 + (1-above(treb_att,treb_tick))*\\n((treb_tick-1.3)*0.96+1.3);\\nmid_tick = above(mid_att,mid_tick)*2 + (1-above(mid_att,mid_tick))*\\n((mid_tick-1.3)*0.96+1.3);\\nbass_shift = equal(bass_tick,2)*0.95*sin(time*5) + (1-equal(bass_tick,2))*bass_shift;\\ntreb_shift = equal(treb_tick,2)*0.95*sin(time*5) + (1-equal(treb_tick,2))*treb_shift;\\nmid_shift = equal(mid_tick,2)*0.95*sin(time*5) + (1-equal(mid_tick,2))*mid_shift;\\n\\n//wave_x = wave_x + 0.12*sin(time);\\n//wave_y =wave_y + 0.12*cos(time);\\nwave_r = wave_r + bass_shift;\\nwave_g = wave_g + mid_shift;\\nwave_b = wave_b + treb_shift;\\nq1 = bass_shift;\\nq2= mid_shift;\\nq3 = treb_shift;\\nzoom = zoom + abs(0.05*(treb/2*cos(bass_att*treb_shift)*bass_shift));\\nq4=sin(time);\\nq5=tan(time);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nrot = rot - 0.25*abs(((bass_att*q3)+0.55*q1)*(0.5*sin(time)-cos(0.5-2*(2.5*rad))));\\nrot = rot - 0.5*if (above(bass_att,((q1*q2*q3)/3)),(sin(12*rad))*(6.5*rad)*2*dy-r,dx_r);\\nzoom = zoom + equal(zoom,0)*dy_r;\\nrot = rot + 0.25*(q1/6+(q2*q1));\\ncx = cx - 0.25*(cos(time)-0.5*sin(time*1.2));\\ncy = cy - 0.25*(sin(time)+0.5*cos(1.22*time));\\ndx = dx + dx_r;\\ndy = dy + dy_r;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  ret_2 = ((1.25 * (\\n    (texture (sampler_blur3, uv).xyz * scale3)\\n   + bias3)) - (0.25 * (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)));\\n  vec3 theta_3;\\n  theta_3 = (1.33 * ((texture (sampler_blur1, \\n    clamp (ret_2.xy, 0.0, 1.0)\\n  ).xyz * scale1) + bias1));\\n  uv_1 = (uv * (1.0 + (0.15 * \\n    (sin(theta_3) / cos(theta_3))\\n  )).xy);\\n  vec3 theta_4;\\n  theta_4 = (1.33 * ((texture (sampler_blur1, \\n    clamp (ret_2.xy, 0.0, 1.0)\\n  ).xyz * scale1) + bias1));\\n  uv_1 = (uv_1 - (0.075 * (\\n    sin(theta_4)\\n   / \\n    cos(theta_4)\\n  )).xy);\\n  float tmpvar_5;\\n  tmpvar_5 = dot (texsize.zw, texsize.zw);\\n  ret_2 = (max (max (texture (sampler_main, uv_1).xyz, texture (sampler_main, \\n    (((uv_1 - 0.5) * (1.0 - (8.0 * \\n      sqrt(tmpvar_5)\\n    ))) + 0.5)\\n  ).xyz), texture (sampler_main, (\\n    ((uv_1 - 0.5) * (1.0 + (8.0 * sqrt(tmpvar_5))))\\n   + 0.5)).xyz) - 0.024);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret3_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (((uv - 0.5) * vec2(-1.0, 1.0)) + 0.5);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = abs(((texture (sampler_main, uv).xyz * \\n    clamp ((((\\n      (texture (sampler_blur2, uv).xyz * scale2)\\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\\n  ) - (texture (sampler_main, tmpvar_4).xyz * \\n    clamp ((((\\n      (texture (sampler_blur2, tmpvar_4).xyz * scale2)\\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\\n  )));\\n  ret3_2 = (tmpvar_5 * sqrt(tmpvar_5));\\n  ret3_2 = (ret3_2 * vec3(0.9, 1.6, 2.3));\\n  ret3_2 = (ret3_2 * 3.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = pow (ret3_2, (1.0 - ret3_2));\\n  ret3_2 = tmpvar_6;\\n  uv_1 = (uv * 2.0);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = floor((fract(\\n    (uv_1 * 0.5)\\n  ) * 2.0));\\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_7)) + (tmpvar_7 * fract(\\n    (1.0 - uv_1)\\n  )));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = rad;\\n  tmpvar_8.y = uv_1.y;\\n  uv_1 = tmpvar_8;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((0.5 - tmpvar_8.yx) + 0.5);\\n  ret_3 = (texture (sampler_main, tmpvar_8.yx).xyz * clamp ((\\n    (((texture (sampler_blur2, tmpvar_8.yx).xyz * scale2) + bias2) * 2.8)\\n   - 0.13), 0.0, 1.0));\\n  vec3 tmpvar_10;\\n  tmpvar_10 = mix (ret_3, (texture (sampler_main, tmpvar_9).xyz * clamp (\\n    ((((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2) * 2.8) - 0.13)\\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\\n  ret_3 = (tmpvar_10 * tmpvar_10);\\n  ret_3 = (ret_3 * vec3(0.9, 1.6, 2.3));\\n  ret_3 = (ret_3 * 3.0);\\n  vec3 tmpvar_11;\\n  tmpvar_11 = max (tmpvar_6, (0.8 * vec3((0.5 * \\n    dot (ret_3, vec3(0.32, 0.49, 0.29))\\n  ))));\\n  ret_3 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }"}')},"./presets/converted/high-altitude basket unraveling - singh grooves nitrogen argon nz+.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0.995,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpscale":1.331,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":64,"thickoutline":1,"textured":1,"rad":0.53526,"tex_zoom":1.35028,"g":1,"b":1,"a":0.4,"r2":1,"b2":1,"a2":0.5,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":14,"num_inst":78,"x":0.6,"rad":0.02217,"tex_zoom":60.80383,"g":1,"b":1,"a":0.9,"g2":0,"a2":1,"border_g":0.59,"border_a":1},"init_eqs_eel":"t1 = int(rand(10))/10;\\nt2 = .2 + int(rand(8))/10;","frame_eqs_eel":"speed = .02;\\ntrel = int(time*speed)- time*speed+1;\\nk1 = instance/num_inst; \\nk1 = k1 - int(k1);\\ndist = 1.4-k1; //################# soll 1 sein\\n//dist = dist - int(dist);\\n\\n\\nfov = .1;\\narg = dist-.02*time;\\nposx = fov/dist * (sin(arg*13) + .2*sin(dist*332));\\nposy = fov/dist * (cos(arg*36)+ .2*sin(dist*332));\\n\\nxl = .5 + posx;\\nyl = .5 + posy;\\n\\ntime2 = time/4 + cos(instance) ;\\nxw = .5 + .5 * (sin(arg*14) + .02*cos(arg*1131)) ;\\nyw = time2 - int(time2);\\n\\nx = if(bnot(q19),xl,xw);\\ny = if(bnot(q19),yl,yw);\\n\\nang = time * sin(k1*44)*12;\\na = t1; border_a = 0; a2 = t2;\\nrad = .01/dist;\\n\\nr = .5 + .3* sin(instance+arg); \\nb = .5 + .3* sin(instance-2+arg); \\ng = .5 + .3* sin(instance*2+arg);\\n\\n"},{"baseVals":{"sides":63,"x":0.503,"y":0.67,"rad":0.05033,"tex_zoom":0.49981,"r":0,"g":1,"b":1,"g2":0,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":0.4,"a":0.7,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":128,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":100,"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q8=0;","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\n\\nwarp=0;\\nq8 =oldq8+ 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\nwave_r = 0.5+0.5*sin(1.123*q8);\\nwave_g = 0.5+0.5*sin(q8*1.576);\\nwave_b = 0.5+0.5*cos(q8*1.465);\\nib_a =0.2*bass;","pixel_eqs_eel":"dx=dx+0.008*sin((y*2-1)*meshx)+0.008*sin((y*2-1)*meshx*1.3333);\\ndy=dy+0.008*cos((x*2-1)*meshx*1.3333)+0.008*cos((x*2-1)*meshx);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = tmpvar_2.xyz;\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((tmpvar_2.x > (q21 * q13)) && (tmpvar_2.x <= (q24 * q11)))) {\\n    ret_1.y = (tmpvar_2.y - (tmpvar_3.x * 0.5));\\n  };\\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\\n    ret_1.z = (tmpvar_2.z - (tmpvar_3.y * 0.5));\\n  };\\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\\n    ret_1.x = (tmpvar_2.x - (tmpvar_3.z * 0.5));\\n  };\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ) * 0.2));\\n  ret_1 = (ret_1 - 0.02);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, uv_1);\\n  ret_2 = tmpvar_3.xyz;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_3.x > (q26 * q13)) && (tmpvar_3.x <= (q23 * q11)))) {\\n    ret_2.z = (tmpvar_3.z - (tmpvar_4.x * 0.5));\\n  };\\n  if (((tmpvar_3.y > (q25 * q11)) && (tmpvar_3.y <= (q22 * q12)))) {\\n    ret_2.x = (tmpvar_3.x - (tmpvar_4.y * 0.5));\\n  };\\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\\n    ret_2.y = (tmpvar_3.y - (tmpvar_4.z * 0.5));\\n  };\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - ret_2)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }"}')},"./presets/converted/martin + flexi - diamond cutter [prismaticvortex.com] - camille - i wish i wish i wish i was constrained.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.157,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.9995,"warp":0.009,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":512,"rad":0.1026,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/100;\\na=(above(bass+mid+treb,.8));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"enabled":1,"sides":23,"num_inst":1024,"rad":0.10262,"ang":0.43982,"tex_ang":0.62832,"a":0.5,"r2":1,"g2":0,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/75;\\na=(above(bass+mid+treb,.1));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.20269,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.22389,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"x1 = 2;\\ny1= 2;\\nz1 = 2;","frame_eqs_eel":"// raytraced sphere code\\n\\nd = 20; // distance of the sphere, the farther you\'re away the more you\'ll see on the horizon\\nz = 4; // distance of the pane where the scene is projected on, wider distance = smaller apex angle of the camera, very small distances = fish eyes view\\n\\nzz = 1 + bass_att*0; // linear zoom\\n\\npi = asin(1)*2;\\npi2inv = 0.5/pi;\\nmaskangle = asin( 1/d);\\nq32 = maskangle; // hit = (cameras angle < mask_angle)\\nq31 = d;\\nq30 = z;\\nq29 = pi2inv;\\nq28 = pi;\\nq27 = 1/zz;\\n\\nv = 0.4;\\nj1 = j1*0.95 + sqr(bass*4)*v;\\nj2 = j2*0.95 + sqr(mid*4)*v;\\nj3 = j3*0.95 + sqr(treb*4)*v;\\n\\nn = n + j1*0.0152;\\nn1 = n1 + j2*0.0152;\\nn2 = n2 + j3*0.0152;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol;\\nq3=vol;\\nmtime = mtime+vol*0.01;\\nq1=mtime;\\n\\nzoom = zoom + 0.015*vol;\\n\\nw1 = n*0.01;    // solid angles to rotate the sphere in its origin\\nw2 = n1*0.01;\\nw3 = n2*0.01;\\n\\nq20 = cos(w1);\\nq21 = sin(w1);\\nq22 = cos(w2);\\nq23 = sin(w2);\\nq24 = cos(w3);\\nq25 = sin(w3);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, (\\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \\n      mix (uv_orig, uv, vec2(4.0, 4.0))\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\\n      ((texture (sampler_blur2, mix (uv_orig, uv, vec2(-12.0, -12.0))).xyz * scale2) + bias2)\\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\\n   + \\n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\\n  )).xyz + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.006).xyz) + -0.0006);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret2_2;\\n  vec2 uv2_3;\\n  vec3 ret_4;\\n  uv2_3.y = uv.y;\\n  uv2_3.x = (1.0 - uv.x);\\n  uv2_3 = (0.5 + ((uv2_3 - 0.5) * 0.98));\\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 4.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_8;\\n  tmpvar_8.z = 0.0;\\n  tmpvar_8.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_9;\\n  tmpvar_9 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\\n    ((uv_1.xyy + (tmpvar_8 * 0.5)) * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_10.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  uv_1 = (uv_1 - (tmpvar_10 * 0.04));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = dot (((\\n    (texture (sampler_blur1, (uv2_3 + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv2_3 - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_11.y = dot (((\\n    (texture (sampler_blur1, (uv2_3 + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv2_3 - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  uv2_3 = (uv2_3 - (tmpvar_11 * 0.04));\\n  ret_4 = (abs((\\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\\n   - \\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\\n  )) * (dot (tmpvar_9, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\\n  ret2_2 = (abs((\\n    ((texture (sampler_main, uv2_3).xyz + ((texture (sampler_blur1, uv2_3).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv2_3).xyz * scale2) + bias2))\\n   - \\n    ((texture (sampler_blur3, uv2_3).xyz * scale3) + bias3)\\n  )) * (dot (tmpvar_9, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\\n  ret2_2 = (0.5 - pow (ret2_2, vec3(0.5, 0.5, 0.5)));\\n  ret_4 = (pow (ret_4, vec3(0.5, 0.5, 0.5)) - (0.3 - ret2_2));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_4;\\n  ret = tmpvar_12.xyz;\\n }"}')},"./presets/converted/martin - The Bridge of Khazad-Dum.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":33,"additive":1,"num_inst":81,"rad":0.04896,"tex_ang":1.00531,"tex_zoom":1.53117,"g":1,"b":1,"a":0,"g2":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/8;\\nk1 = instance/num_inst;\\nk2 = k1 + trel - int(k1+trel);\\n\\ny0 = k2+.01 ;\\n\\nxwidth = .1*(cos(6*k1)+3); //breite\\nxofs = .1*cos(k2*6+trel)*y0;\\nx = .5 + .4*xwidth*(.2+y0)*sin(k1*1383*xwidth) + xofs;\\n//xwidth in der letzten Klammer : Test\\n\\ny = y0;\\n\\nbright = 1-sqr(y0); \\na = max(bright,0); a2 = 0;\\nrad = .4*y0+.1 - .0*sin(k1*954);\\n\\nr = .0; g = 0; b = .0;\\nr2 = 0; g2 = 0; b2= .48; //## rot mit ampl. mod !\\nadditive = 1; ///sonst andere farben im warp-s gestoert"},{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":571,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g2":0,"a2":0.2,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"mov1 = q1;\\nRotMode = q3;\\nburst = q10;\\ncopies = q14;\\ncopy = (instance%copies)/copies;\\nk1 = int(instance/copies)*copies/num_inst;\\nk1 = int(k1*burst)/burst+k1/burst;\\n\\nmov1 = mov1 + k1 -copy*q2;//dt\\nmov1 = mov1 - int(mov1);\\n\\nRotMode = RotMode - copy*q4;\\nrota = mov1 * RotMode*q5*2 ;\\nmov1 = mov1*(1-RotMode) + RotMode*(.5+.025*k1);\\n\\nmov1 = pow(mov1,.9); //Schneller bei t=0;\\n\\nTht = sin(k1*k1*123.2)*(.2 + RotMode*.0);\\nPhi = k1*1613.3+rota;\\nv0 = (1.0 + .3*cos(k1*13234.7))*q5;\\n\\nz0 = q18/q5; //proximity\\n\\nt0 = .4;\\nspur = (mov1-t0) * above(mov1-t0,0)*q15 ;\\npy = spur*sin(copy*6.28);\\npx = spur*cos(copy*6.28);\\n\\nfov = z0*2; //kein vol hier, sonst y-skal daneben\\nox = (mov1-q19)*v0*sin(Tht) * cos(Phi); //### -.5 bis .5\\noy = mov1*v0*(1-mov1)*cos(2*Tht) -.25;\\noz = mov1*v0*sin(Tht)*sin(Phi); \\n\\nox = ox +  (k1-.5)*q17 +px; \\noy = oy -py;\\noz = oz +py*3;\\n\\n//flim = below(((ox+oy+oz)*800)%32,q13-.1); //ctrl\\n//flim = q13/(((ox+oy+oz)*600)%16+1); //ctrl\\nrad = .025*z0/(oz+z0)*(1-mov1*.5);\\n\\nx = .5 + fov*ox/(oz+z0);\\ny = .5 + fov*oy/(oz+z0);\\nvis = above(mov1,q11)*below(mov1,q12)*above(oz,-z0);\\n\\na = vis*.7/sqrt(copies)*(1+above(spur,0));\\na2 = 0.;\\ng = flim;"},{"baseVals":{"enabled":1,"sides":13,"additive":1,"num_inst":212,"x":0.65,"y":0.38,"rad":1.26467,"tex_zoom":0.73678,"g":1,"a":0.3,"r2":1,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//q25 = time/4;\\n//trel = 2* (q25/2-int(q25/2));\\ntrel = q25;\\ncopies = 1;\\ncopy = (instance%copies)/copies;\\nk1 = int(instance/copies)*copies/num_inst;\\nk2 = k1 + .5;\\ntrel = trel ;\\nt0 = .5; //do not change\\n\\nphase = above(trel,t0);\\nmov1 = bnot(phase)* (t0-trel + .01*k1);\\nmov2 = phase * (trel-t0); //####\\n//mov2 = pow(mov2,.8);\\nstray = 1.2-phase;\\n\\nTht = 3.14*sin(1234.2*k1+time*bnot(phase)) * stray ;\\nPhi = 3245.1*k1;\\n\\nsize0 = .02;\\nox = mov1*q27 + sin(Tht)*cos(phi)* (size0+mov2*(2+k1));\\noy = mov1*12 + cos(Tht)* (size0+4*mov2*k2)*(1-mov2*k2)/2;\\noz = mov1*8 + sin(Tht)*sin(phi)* (size0+mov2*2*(2+k1));\\n\\nz0 = 1;\\nrad = .03 / (oz+z0)/(1+trel*rand(100)/50);\\n\\nx = .5 + ox/(oz+z0);\\ny = q29+.2+ oy/(oz+z0);\\n\\na = .1*bnot(phase)+phase*max(0,1-mov2*0)*above(oz+z0,0)*.8; "},{"baseVals":{"sides":14,"additive":1,"thickoutline":1,"textured":1,"num_inst":31,"x":0.75,"y":0.6,"rad":0.01,"tex_zoom":0.3357,"g":1,"a":0.5,"r2":1,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":75,"sep":20,"usedots":1,"additive":1,"scaling":7.858,"smoothing":0.1,"g":0,"b":0,"a":0.2,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"t0a = time; t0 = time+.5;\\nspb_ = .5; ;\\nvolb = .5; volx = .5;\\nvol_= 1; index = 0; mov1 = 0;","frame_eqs_eel":"dec_med = pow (0.85, 30/fps); dec_slow = pow (0.95, 30/fps);\\nvol = (bass+med+treb)/1.5; vol_ = vol_*dec_slow + (1-dec_slow)*vol;\\n\\nis_beat = above(vol, .1+vol_+2*peak) * above (time, t0+spb_*.45);\\nt0a  = if(is_beat,t0,t0a); t0 = if(is_beat,time,t0);\\npeak = if(is_beat,vol,peak*dec_med);\\nindex = (index + is_beat) %128;\\nspb_ = if(is_beat,spb_ *.9 +.1*min(t0-t0a + .01,2), spb_);\\n\\nq20 = vol_;\\nq21 = above(vol,2.7*vol_);\\nq22 = max(0,peak-.0)+.01;\\nhpeak = hpeak*dec_med + (1-dec_med)*q21;\\nq23 = hpeak * (1+rand(8));\\nq24 = is_beat;\\nvolb = bnot(q24)*volb + q24*vol_; //# vol oder vol_ ?\\nvolx = volx + .2/fps*max(min(volb-volx,1),-1)*bnot(RotMode);\\n\\n// *********** CENTRAL TIMELINE **************\\nrotmode = max(min(sin(mov1/2.4-1.5)*4-3,1),0); //####\\nstop = if(bnot(stop),bnot(index%24),below(lo,1))*bnot(rotmode);\\n//tmp = status%16;\\nspread = if (below(lo,1),spread,rand(2)*rand(12)/20);\\ncopies = if (below(lo,1),copies,3+rand(2)*rand(8));\\nspur  = if (below(lo,1),spur, above(copies,5)*.1);\\nbursts = if (below(lo,1),bursts,1+rand(2)*rand(6));\\nxbase = if (below(lo,1),xbase,rand(2)*(rand(10)/10-.5));\\nvs0 = if (is_beat * bnot(index%77),rand(5)/4-.7,vs0);\\nvshift =  vshift + 3/fps*max(min((vs0-vshift),.04),-.04);\\n//*********** SMOOTH MOVEMENTS q1 - q8 for SHAPE2 ********\\n//FONTAENE\\nspeed = .15/fps/spb_;\\ntmp = mov1; mov1 = mov1+speed; q2 = mov1-tmp; q1 = mov1;\\n\\n//ROTATION\\n//evtl q5 mit rotmode fixieren statt volx blockieren\\ntmp = RotMode; q3 = RotMode; q4 = RotMode-tmp;\\n\\n//VOLUME\\ntmp = volx; q5 = volx; q6 = q5-tmp; //nicht aendern waehrend Rotation\\n\\n//********* SWITCHES SHAPE2 *************\\nq10 = bursts; //num bursts\\nlo = if(stop,lo+speed,0); //ident. wie bei mov 1!!\\nhi = if(above(lo,1),0,hi+speed); //ident. wie bei mov 1!!\\nq11 = lo; //fade out\\nq12 = hi;\\nq13 = sqrt(q22)*0; //blink effect, ca. 0..16\\nq14 = copies; //copies - noch implementieren\\nq15 = spur*(1-RotMode); //Ampl. multiple spurs; nur mit >8 copies !\\nq16 = 0; //reserved for spur start\\nq17 = spread * (1-rotmode); //hor. spread, max. ca. 0.4\\nq18 = 1/min(max(sin(mov1/2)*10,1),4); //proximity - smaller values: closer;\\nq19 = xbase;\\n//********* CONTROL PARAMETERS SHAPE3 *************\\nxtime = if (stop*q21*above(xtime,2),0,xtime+.2/fps); //impact\\nq25 = xtime;\\nq26 = if (below(xtime,.55),pow(32,-sqr(xtime-.55)*512),pow(2,-sqr(xtime-.55)*3));\\nq27 = sin(time/29)*4; //x-direction impact\\n\\n//********* GENERAL CONTROL PARAMETERS ***************\\nwind = wind+.5/fps * (volx-1.5);\\nq28 = wind;//wind direction - warp shader\\nq29 = vshift ;// in warp+comp+impact shape\\nq30 = max(sin(mov1/2.2)*sin(time/7),0)+q26;// front cloud dens. - comp.\\nq31 = q5*2-2 + sin(time/17); //back cloud lighting - comp shader\\nq32 = 3+2*sin(time/27); //back cloud density - comp shader\\n\\nmonitor = vshift;;","pixel_eqs_eel":"zoom = 1;\\ndy = -.00;\\nwarp =.0;","warp":"mat2 ofs;\\nfloat xlat_mutablegreen;\\nfloat xlat_mutablek1;\\nfloat xlat_mutablered;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablewave;\\nfloat xlat_mutablezv;\\n shader_body { \\n  mat2 tmpvar_1;\\n  tmpvar_1[uint(0)].x = texsize.z;\\n  tmpvar_1[uint(0)].y = 0.0;\\n  tmpvar_1[1u].x = 0.0;\\n  tmpvar_1[1u].y = texsize.w;\\n  ofs = (tmpvar_1 * 4.0);\\n  float delta_2;\\n  float ky_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (uv.x - 0.5);\\n  tmpvar_4.y = ((uv.y - 0.5) + q29);\\n  vec2 v_5;\\n  v_5.x = ofs[0].x;\\n  v_5.y = ofs[1].x;\\n  vec2 v_6;\\n  v_6.x = ofs[0].x;\\n  v_6.y = ofs[1].x;\\n  vec2 v_7;\\n  v_7.x = ofs[0].y;\\n  v_7.y = ofs[1].y;\\n  vec2 v_8;\\n  v_8.x = ofs[0].y;\\n  v_8.y = ofs[1].y;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (texture (sampler_main, (uv + v_5)) - texture (sampler_main, (uv - v_6))).x;\\n  tmpvar_9.y = (texture (sampler_main, (uv + v_7)) - texture (sampler_main, (uv - v_8))).x;\\n  xlat_mutablered = (0.5 * texture (sampler_main, (uv - (0.004 * tmpvar_9))).x);\\n  xlat_mutablered = (xlat_mutablered + (0.5 * texture (sampler_main, uv).x));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = (0.0078125 * (float(\\n    int((tmpvar_4.y * 128.0))\\n  ) + abs(\\n    (fract((tmpvar_4.y * 128.0)) - 0.5)\\n  )));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (tmpvar_10 * 4.0);\\n  ky_3 = clamp ((-0.5 - tmpvar_11.y), 0.0, 1.0);\\n  xlat_mutablek1 = (abs((\\n    fract((tmpvar_11.x * 2.0))\\n   - 0.5)) * 8.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - sign(xlat_mutablek1));\\n  delta_2 = (0.1 + (rand_preset * 0.05)).x;\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (4.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (8.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (12.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (16.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  float tmpvar_12;\\n  tmpvar_12 = clamp (xlat_mutablek1, -1.6, 1.6);\\n  xlat_mutablek1 = tmpvar_12;\\n  xlat_mutablegreen = (cos((tmpvar_12 * 2.0)) - 0.1);\\n  xlat_mutablewave = ((sin(\\n    ((q1 * 8.0) - (uv.x * 6.0))\\n  ) / 2.0) * q3);\\n  xlat_mutablewave = ((xlat_mutablewave * float(\\n    (xlat_mutablewave >= 0.0)\\n  )) + (q30 * 0.02));\\n  xlat_mutablered = (xlat_mutablered + ((\\n    (xlat_mutablewave / abs(sin((\\n      (1.0/(tmpvar_12))\\n     + \\n      (q1 / 8.0)\\n    ))))\\n   * xlat_mutablegreen) * ky_3));\\n  xlat_mutablezv = ((time * 0.08) + (0.2 * sin(\\n    ((uv * 16.0) + time)\\n  ))).x;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = q28;\\n  tmpvar_13.y = (0.2 * time);\\n  xlat_mutableuv2 = ((tmpvar_4 * 2.0) + tmpvar_13);\\n  vec3 tmpvar_14;\\n  tmpvar_14.xy = xlat_mutableuv2;\\n  tmpvar_14.z = xlat_mutablezv;\\n  vec3 tmpvar_15;\\n  tmpvar_15.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\\n  tmpvar_15.z = (xlat_mutablezv * 2.0);\\n  vec3 tmpvar_16;\\n  tmpvar_16.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\\n  tmpvar_16.z = (xlat_mutablezv * 3.0);\\n  vec3 tmpvar_17;\\n  tmpvar_17.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\\n  tmpvar_17.z = (xlat_mutablezv * 7.0);\\n  xlat_mutableuv2 = (tmpvar_4 + ((\\n    ((texture (sampler_noisevol_hq, tmpvar_14).z + (texture (sampler_noisevol_hq, tmpvar_15).z / 2.0)) + (texture (sampler_noisevol_hq, tmpvar_16).z / 4.0))\\n   + \\n    (texture (sampler_noisevol_hq, tmpvar_17).z / 8.0)\\n  ) * 0.1));\\n  vec3 tmpvar_18;\\n  tmpvar_18.x = xlat_mutablered;\\n  tmpvar_18.y = xlat_mutablegreen;\\n  tmpvar_18.z = ((1.0 + xlat_mutableuv2.y) * sqrt(dot (xlat_mutableuv2, xlat_mutableuv2)));\\n  vec4 tmpvar_19;\\n  tmpvar_19.w = 1.0;\\n  tmpvar_19.xyz = ((tmpvar_18 * 0.8) - 0.005);\\n  ret = tmpvar_19.xyz;\\n }","comp":"float trel;\\nfloat vshift;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nfloat xlat_mutablesmoke;\\nfloat xlat_mutablesmoke2;\\nvec2 xlat_mutableuv_l;\\nfloat xlat_mutablew;\\nfloat xlat_mutablez;\\n shader_body { \\n  trel = (time / 2.0);\\n  vshift = (0.5 - q29);\\n  vec2 tmpvar_1;\\n  tmpvar_1.x = rand_preset.x;\\n  tmpvar_1.y = ((-0.1 - (rand_preset.y / 2.0)) + vshift);\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = (0.005 * time);\\n  xlat_mutableuv_l = (uv + tmpvar_2);\\n  vec2 tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  tmpvar_3 = sin(((\\n    (tmpvar_4 * aspect.xy)\\n   + 0.5) - (tmpvar_1 * aspect.xy)));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = fract(uv);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = vec3((texture (sampler_fc_main, tmpvar_5).x + (2.0 * (\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2).x)));\\n  vec3 tmpvar_7;\\n  tmpvar_7.x = tmpvar_6.x;\\n  tmpvar_7.y = pow (tmpvar_6.x, 2.1);\\n  tmpvar_7.z = pow (tmpvar_6.x, 4.0);\\n  xlat_mutablew = ((uv.y - (\\n    ((dot (texture (sampler_noise_hq, vec2((xlat_mutableuv_l.x / 6.0))), vec4(0.32, 0.49, 0.29, 0.0)) + uv.x) - 0.5)\\n   / 4.0)) - vshift);\\n  xlat_mutablez = (0.2 / xlat_mutablew);\\n  float tmpvar_8;\\n  tmpvar_8 = clamp ((-0.2 - (\\n    (8.0 * q5)\\n   * xlat_mutablew)), 0.0, 1.0);\\n  xlat_mutablers0.x = (((uv.x - 0.5) * (1.0 + \\n    abs(xlat_mutablez)\\n  )) * 2.0);\\n  xlat_mutablers0.y = xlat_mutablez;\\n  xlat_mutablers0 = (xlat_mutablers0 * ((4.0 * \\n    float((xlat_mutablez <= 0.0))\\n  ) + 1.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = 0.0;\\n  tmpvar_9.y = (1.5 + xlat_mutablew);\\n  vec2 x_10;\\n  x_10 = (xlat_mutablers0 - tmpvar_9);\\n  float tmpvar_11;\\n  tmpvar_11 = ((q26 / sqrt(\\n    dot (x_10, x_10)\\n  )) / 4.0);\\n  xlat_mutablers0 = (xlat_mutablers0 * (1.0 + (tmpvar_11 * tmpvar_11)));\\n  xlat_mutablers.x = (xlat_mutablers0 * 2.0).x;\\n  xlat_mutablers.y = (xlat_mutablers0.y + (trel * 0.5));\\n  float tmpvar_12;\\n  tmpvar_12 = (texture (sampler_main, uv).y * tmpvar_8);\\n  vec3 tmpvar_13;\\n  tmpvar_13.xy = (xlat_mutablers * 2.0);\\n  tmpvar_13.z = (0.2 * trel);\\n  float tmpvar_14;\\n  tmpvar_14 = dot (((\\n    ((2.0 * clamp ((texture (sampler_noisevol_hq, \\n      (tmpvar_13 * float((xlat_mutablez >= 0.0)))\\n    ) - 0.2), 0.0, 1.0)).xyz * clamp ((texture (sampler_noise_hq, (xlat_mutablers / 16.0)) - 0.5), 0.0, 1.0).x)\\n   / \\n    sqrt(abs(xlat_mutablez))\\n  ) + tmpvar_11), vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_15;\\n  tmpvar_15.x = tmpvar_14;\\n  tmpvar_15.y = pow (tmpvar_14, 2.1);\\n  tmpvar_15.z = pow (tmpvar_14, 6.0);\\n  xlat_mutableret1 = (((\\n    ((uv.y * (1.0 + q23)) + (0.1 / sqrt(dot (tmpvar_3, tmpvar_3))))\\n   * vec3(0.1, 0.1, 0.2)) * tmpvar_8) + (clamp (tmpvar_15, 0.0, 1.0) * (1.0 - \\n    clamp ((-1.0 - (12.0 * xlat_mutablew)), 0.0, 1.0)\\n  )));\\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((1.0 - \\n    (tmpvar_12 * 8.0)\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_16;\\n  tmpvar_16 = texture (sampler_main, fract((tmpvar_4 + 0.5)));\\n  xlat_mutablesmoke = (tmpvar_16.z * (tmpvar_16.z * q5));\\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((1.0 - \\n    ((xlat_mutablesmoke * q32) * tmpvar_8)\\n  ), 0.0, 1.0));\\n  xlat_mutablesmoke2 = (texture (sampler_main, ((tmpvar_4 / 2.0) + 0.5)).z * q30);\\n  xlat_mutableret1 = (xlat_mutableret1 + (clamp (tmpvar_7, 0.0, 1.0) - (\\n    ((xlat_mutablez * clamp ((xlat_mutablesmoke + \\n      (xlat_mutablew * q31)\\n    ), 0.0, 1.0)) * vec3(1.0, 0.4, 0.1))\\n   * tmpvar_8)));\\n  float tmpvar_17;\\n  tmpvar_17 = clamp (((\\n    (tmpvar_12 * xlat_mutablez)\\n   * xlat_mutablez) / 16.0), 0.0, 1.0);\\n  vec3 tmpvar_18;\\n  tmpvar_18.x = tmpvar_17;\\n  tmpvar_18.y = pow (tmpvar_17, 2.1);\\n  tmpvar_18.z = pow (tmpvar_17, 6.0);\\n  xlat_mutableret1 = (xlat_mutableret1 + clamp (tmpvar_18, 0.0, 1.0));\\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((\\n    (((dot (texture (sampler_noise_mq, vec2(\\n      ((xlat_mutableuv_l.x / 4.0) + (0.02 * trel))\\n    )), vec4(0.32, 0.49, 0.29, 0.0)) / 6.0) - uv.y) + 0.8)\\n   * 32.0), 0.0, 1.0));\\n  vec3 tmpvar_19;\\n  tmpvar_19.x = xlat_mutablesmoke2;\\n  tmpvar_19.y = pow (xlat_mutablesmoke2, 2.1);\\n  tmpvar_19.z = pow (xlat_mutablesmoke2, 6.0);\\n  xlat_mutableret1 = ((xlat_mutableret1 * clamp (\\n    (1.0 - xlat_mutablesmoke2)\\n  , 0.0, 1.0)) + clamp (tmpvar_19, 0.0, 1.0));\\n  vec4 tmpvar_20;\\n  tmpvar_20.w = 1.0;\\n  tmpvar_20.xyz = (1.0 - exp((\\n    -(xlat_mutableret1)\\n   * 2.0)));\\n  ret = tmpvar_20.xyz;\\n }"}')},"./presets/converted/martin - angel flight.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.39158,"wave_scale":0.01,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.7,"wave_g":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.3,"rad":0.379365,"tex_ang":0.628319,"tex_zoom":4.141529,"r":0.3,"g":0.7,"b":1,"r2":1,"b2":1,"a2":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q1/6 + .5;\\ny = q2/6 + .5;"},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"x":0.9,"rad":0.22613,"g":0.6,"g2":0,"b2":0.4,"a2":0.3,"border_a":0},"init_eqs_eel":"t_rel = 5*time;\\nt1 = int(t_rel);","frame_eqs_eel":"dx =  rand(1000)/1000-.5;\\ndy =  rand(1000)/1000-.5;\\n\\nx = .5 + dx*(1-q22/4);\\ny = .5 + dy*(1-q22/4);\\n\\nang = time;\\n\\na = 1;\\nrad = .1*q24+0.08 +q22/40;"},{"baseVals":{"additive":1,"textured":1,"x":0.51,"rad":0.249779,"tex_ang":0.125664,"tex_zoom":5.536972,"r":0.6,"g":0.3,"b":0.4,"a":0.6,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = max(q22-2,0);"}],"waves":[{"baseVals":{"enabled":1,"samples":256,"spectrum":1,"usedots":1,"scaling":0.5033,"g":0.6,"b":0.4},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\\nt_abs = sample;\\nt_rel = sample-time/1;\\nampl = time;\\n\\nox = ampl*10*sin (t_abs*68);\\noy = ampl*10*cos (t_abs*28);\\noz = ampl*10*cos (t_abs*128);\\n\\n\\nr = 1;\\ng = .5 ;\\nb = 1 ;\\na=q26/18;\\n\\nxang = t1 ;\\nyang = t1*2;\\nzang = t1;\\nfov = 0.12;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;"},{"baseVals":{"enabled":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"a = max(sin(time/8)-.5,0);\\nr = .4; g = .2; b = .7;\\n\\nx = sample + .01*cos(sample*243+time);\\ny = .5+.5*sin(time/13) + .02*sin(sample*143);\\na = .7 ;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_slow * p2+ (1-dec_slow)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = 8-index;\\nq28 = .5 + sin(time/7)/10;\\nq29 = index4;\\n\\nmv_a = 0.2;\\nt_rel = time/3;\\nwave_a = max(sin(time/8)-.5,0);\\nwave_a = 0;\\nwave_x = .5+.5*sin(time/13);\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovez = movez + .01 * 30/fps ;\\nq29 = movez;\\n\\n\\nzoom = 1;\\nrot = .0;\\ndx = .003","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv - vec2(0.5, 0.5)) * texsize.xy) * 0.03);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((0.99 * texture (sampler_main, (uv + \\n    (((clamp (\\n      (sin(tmpvar_1) / cos(tmpvar_1))\\n    , vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos(\\n      (tmpvar_1.yx * tmpvar_1.yx)\\n    )) * texsize.zw) * 12.0)\\n  )).xyz) - 0.01);\\n  ret = tmpvar_2.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  dist_3 = (1.0 - fract((0.25 + q29)));\\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, fract(\\n    (((2.0 * uv_1) * dist_3) + 0.5)\\n  )).xyz * inten_2));\\n  xlat_mutableuv2.x = -(uv_1.y);\\n  xlat_mutableuv2.y = uv_1.x;\\n  dist_3 = (1.0 - fract((0.5 + q29)));\\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, fract(\\n    (((2.0 * xlat_mutableuv2) * dist_3) + 0.5)\\n  )).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.75 + q29)));\\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, fract(\\n    (((2.0 * uv_1) * dist_3) + 0.5)\\n  )).xyz * inten_2));\\n  xlat_mutableuv2.x = -(uv_1.y);\\n  xlat_mutableuv2.y = uv_1.x;\\n  dist_3 = (1.0 - fract((1.0 + q29)));\\n  inten_2 = (sqrt(dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, fract(\\n    (((2.0 * xlat_mutableuv2) * dist_3) + 0.5)\\n  )).xyz * inten_2));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (xlat_mutableret1 * 3.0);\\n  ret = tmpvar_4.xyz;\\n }"}')},"./presets/converted/martin - another kind of groove.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.952379,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.391579,"wave_scale":1.575857,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.79,"ob_size":0,"ob_a":0.8,"ib_size":0.26,"mv_x":31.999998,"mv_y":24.000004,"mv_l":0.05,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":0.545996,"ang":2.199115,"tex_ang":0.502655,"tex_zoom":2.02311,"g":1,"b":0.9,"a":0.6,"r2":0.8,"g2":0.8,"b2":0.8,"a2":0.6,"border_b":0,"border_a":0.7},"init_eqs_eel":"","frame_eqs_eel":"tex_ang =  1 + sin(time/9);\\nrad = q29;\\ntex_zoom = (2 + sin(time/17));\\nadditive = q22/6;\\ntextured = 1-bnot(q23)*q24;"},{"baseVals":{"sides":34,"thickoutline":1,"rad":0.728634,"tex_zoom":0.9355,"r":0.5,"g":0.55,"b":0.5,"a":0.0999,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"x":0.503,"rad":0.01,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5 + rand(10)/25;\\ny = .5 + rand(10)/25;\\nang = rand(6);\\nr = rand(4)/3;\\ng = rand(4)/3;\\nb = rand(4)/3;\\nr2 = b;\\ng2 = r;\\nb2 = g;\\na = min(q21/2 ,.9);\\nrad = a/9 ;\\n\\na = .5;a2 = .8;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":142,"sep":120,"usedots":1,"additive":1,"scaling":0.01,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"\\nt_abs = sample;\\nt_rel = sample-time/8;\\n\\nox =  sin (sample*110) ;\\noy =  cos (sample*110);\\n\\noz = 4+1/(t_rel - int(t_rel));\\n\\nr = .3;\\ng = 0.7;\\nb = 1;\\n\\na = .8;\\n\\nxang = 0;\\nyang = 0;\\nzang = 0;\\nfov = .5;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nx = ox*fov/oz +0.45;\\ny = oy*fov/oz + 0.45;"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = max(peak,4);\\nq23 = index;\\nq24 = is_beat;\\nq26 = max(bass + mid + treb,3);\\n\\ngo = go*dec_slow + (1-dec_slow) * equal(index2,2);\\n\\nmovez = movez + .1*(1+.3*q26)*30/fps * go;\\nq30 = movez;\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3*3.1416/2;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nstr = str * dec_slow + (1-dec_slow) * index3;\\nq27 = 4 - str;\\n\\ngrid = grid*(dec_med) + (1-dec_med)* equal(index2,2)*bnot(index);\\nmv_a = grid * .6;\\n\\nrot1 = dec_med * rot1 + (1-dec_med) * bnot(index2) ;\\nq28 = rot1 ;\\n\\ncopy = copy * dec_slow + (1-dec_slow)*index3;\\nq29 = .3*copy;","pixel_eqs_eel":"dx = 0.02*q28;\\nrot = .04*q2;\\nzoom = .96 + .1*sin(time/7);\\n//zoom = 1.04;","warp":" shader_body { \\n  vec2 zz_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qa.xy;\\n  tmpvar_2[1u] = _qa.zw;\\n  zz_1 = (((\\n    (uv - vec2(0.5, 0.5))\\n   * texsize.xy) * 0.01) * tmpvar_2);\\n  zz_1 = -(zz_1.yx);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, (uv + \\n    (((clamp (\\n      (sin(zz_1.yx) / cos(zz_1.yx))\\n    , vec2(-8.0, -8.0), vec2(8.0, 8.0)) * cos(\\n      (4.0 * zz_1)\\n    )) * texsize.zw) * 16.0)\\n  )).xyz * 0.99) - 0.01);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv3_1;\\n  vec2 uv2_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (0.1 / (sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  ) + 0.1));\\n  vec2 tmpvar_5;\\n  float tmpvar_6;\\n  tmpvar_6 = (ang / 3.14);\\n  tmpvar_5.x = tmpvar_6;\\n  tmpvar_5.y = (q27 * tmpvar_4);\\n  uv2_2.y = (tmpvar_5.y + (0.1 * q30));\\n  uv2_2.x = (tmpvar_6 + (0.2 * time));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_6;\\n  tmpvar_7.y = (4.0 * tmpvar_4);\\n  uv3_1.y = (tmpvar_7.y - (0.2 * q30));\\n  uv3_1.x = tmpvar_7.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = fract(uv3_1);\\n  uv3_1 = tmpvar_8;\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = (((\\n    (3.0 * max (((2.0 * texture (sampler_main, uv2_2).xyz) + texture (sampler_main, tmpvar_8).xyz), ((2.0 * \\n      ((texture (sampler_blur2, fract(uv2_2)).xyz * scale2) + bias2)\\n    ) + (\\n      (texture (sampler_blur2, fract(tmpvar_8)).xyz * scale2)\\n     + bias2))))\\n   * rad) + (\\n    ((uv.y * pow ((1.0 - rad), 8.0)) * roam_cos)\\n  .xyz * tmpvar_9)) + ((tmpvar_9 * 2.0) * (\\n    (texture (sampler_blur1, fract(uv)).xyz * scale1)\\n   + bias1)));\\n  ret = tmpvar_10.xyz;\\n }"}')},"./presets/converted/martin - bombyx mori.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":0.236,"wave_smoothing":0,"wave_mystery":-0.64,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_b":0.6,"ob_size":0.005,"ob_a":0.8,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":18,"num_inst":4,"x":0.83,"rad":0.14349,"tex_ang":3.76991,"tex_zoom":5.27784,"r":0,"g":1,"b":1,"a":0.5,"r2":1,"g2":0.2,"b2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"d = .3+(frame%8)/8*.2;\\n//d = .3;\\nk1 = instance/num_inst*6.28;\\nd = .3 + q22/8 ;\\n\\nx = .5 + d*cos(k1);\\ny = .5 + d*sin(k1);\\n\\na = min(1, .2+ .8*q22/2*((q27)%2));\\na2 = 0;\\nr = .6 + .4*sin(time/4+1.56);\\nb = .6 + .4*sin(time/4+3.14);\\ng = .6 + .4*sin(time/4);\\n\\nr0 = r0 * bnot(q24) + (.5+.5*sin(time))*q24;\\ng0 = g0 * bnot(q24) + (.5+.5*sin(time*1.7))*q24;\\nb0 = (2-r0-g0)/2;\\n\\nr = r0;\\nb = b0;\\ng = g0;\\n\\nr2 = 1-g;\\ng2 = 1-b;\\nb2 = 1-r;"},{"baseVals":{"sides":32,"num_inst":4,"rad":0.16218,"tex_zoom":1.8315,"g":1,"b":1,"a":0.9,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = q24/2; a2 = 0;\\na = min(1, .2+ .8*q22/2*((q27)%2));\\n\\nr = rand(10)/10;\\ng = rand(10)/10;\\nb = rand(10)/10;\\n\\nrad = .06*q22;\\n\\n\\n\\n\\nd = .3+(frame%8)/8*.2;\\nd = .3 + q22/12;\\n\\nx = .5 + d*cos(6.28*instance/num_inst);\\ny = .5 + d*sin(6.28*instance/num_inst);\\na = min(1, .2+ .8*q22/2*((q27)%2));\\nb = 1; g = 1;"},{"baseVals":{"sides":63,"textured":1,"rad":8.85459,"tex_zoom":0.03204,"g":1,"b":1,"a":0.4,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"x":0.4,"rad":0.14741,"tex_zoom":1.59918,"g":0.4,"r2":1,"g2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = q24*.3;"}],"waves":[{"baseVals":{"enabled":1,"samples":128,"scaling":0.89152,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = t1 * bnot(q24) + (.5+.5*sin(time))*q24;\\nt2 = t2 * bnot(q24) + (.5+.5*sin(time*1.7))*q24;","point_eqs_eel":"x = sample ;\\ny = .5;\\n\\na = q22*((q27+1)%2);\\n//a = 1;\\na = q24*((q27+1)%2)/2+.0;\\n\\nr = t1; b = t2; g = (2-r0-g0)/2;\\n;"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"speed_=1;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, 0.2+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %12;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nvol = (bass_att + mid_att + treb_att)/2;\\nvol_ = dec_med * vol_ + (1-dec_med)* vol;\\nvol__ = dec_med * vol__ + (1-dec_med)* vol_;\\nq27 = index + 1;\\nq28 = index2 + 2;\\n\\nk1 =  is_beat*equal(index%4,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrig = q24 * bnot(index%8);\\nvx = vx*bnot(trig) + trig* (rand(100)/100-.5);\\nvy = vy*bnot(trig) + trig* (rand(100)/100-.5);\\nvz = vz*bnot(trig) + trig* (rand(100)/100-.5);\\n\\nspeed = min(vol_-vol__+.5,1);\\nspeed = max(speed,-.5);\\nspeed_ = bnot(trig)*speed_ + trig*speed;\\nspg = dec_med*spg + (1-dec_med)*speed_;\\nmovz = movz + 1/fps*(speed_+0*vol_/6);\\nq9 = movz;\\nq12 = min(q22,6)*2;\\n\\n//puls = puls*dec_med + (1-dec_med)*q22;\\n\\nq13 = 2* sin(movz/3-time/11);\\n\\ntrig = bnot(index%4) * q24;\\ndir = bnot(trig)*dir + trig*(rand(10)-5);\\ntrel = trel + .1/fps*dir;\\nq5 = cos(trel-movz);\\nq6 = sin(trel/2-movz);\\nq7 = -q6;\\nq8 = q5;\\n\\nang0 = ang0*dec_med + vz*(1-dec_med);\\nq17 = ang0*2;\\nq30 = .2*sin(time/8);\\n\\nq31 = .5 + .5*sin(time/3.3);\\n\\nzoom = 1;\\nrot = .0;\\ndx = .00;\\nmonitor = q28;","pixel_eqs_eel":"","warp":"vec3 xlat_mutablemus;\\n shader_body { \\n  vec2 d_1;\\n  vec2 uv6_2;\\n  vec2 uv1_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  uv1_3 = tmpvar_4;\\n  uv6_2 = tmpvar_4;\\n  float x_5;\\n  x_5 = (abs(tmpvar_4.x) - abs(tmpvar_4.y));\\n  float tmpvar_6;\\n  tmpvar_6 = (12.0 * sqrt((x_5 * x_5)));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = normalize(tmpvar_4);\\n  d_1 = tmpvar_7;\\n  float tmpvar_8;\\n  tmpvar_8 = (float(mod (q28, 2.0)));\\n  if ((tmpvar_8 == 0.0)) {\\n    d_1 = ((q1 * tmpvar_7) - (q2 / tmpvar_7));\\n  };\\n  uv1_3 = (tmpvar_4 + ((-0.06 * \\n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * normalize(tmpvar_4)));\\n  uv1_3 = (uv1_3 - (clamp (\\n    ((sin(tmpvar_6) / cos(tmpvar_6)) * d_1)\\n  , vec2(-4.0, -4.0), vec2(4.0, 4.0)) / 60.0));\\n  uv6_2 = (0.4 * cos((\\n    (uv1_3 * 2.0)\\n   * q28)));\\n  xlat_mutablemus = (clamp (vec3((0.0006 / \\n    (sqrt(dot (uv6_2, uv6_2)) - (0.002 * (q27 + (8.0 * q28))))\\n  )), 0.0, 1.0) * q31);\\n  xlat_mutablemus = (xlat_mutablemus * (1.0 + roam_cos).xyz);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ((0.4 * (\\n    ((texture (sampler_main, ((uv1_3 * \\n      (0.8 + (0.2 * tmpvar_6))\\n    ) + 0.5)).xyz + xlat_mutablemus) * 0.95)\\n   - 0.025)) + (0.6 * texture (sampler_main, uv_orig)).xyz);\\n  ret = tmpvar_9.xyz;\\n }","comp":"vec3 xlat_mutableneu;\\nvec3 xlat_mutableret2;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablerss;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 ofs_2;\\n  vec3 ret1_3;\\n  vec2 uv5_4;\\n  uv_1 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q5;\\n  tmpvar_5.y = q6;\\n  uv_1 = (uv_1 + (tmpvar_5 / 4.0));\\n  uv5_4 = uv_1;\\n  mat2 tmpvar_6;\\n  tmpvar_6[uint(0)] = _qb.xy;\\n  tmpvar_6[1u] = _qb.zw;\\n  uv_1 = (uv_1 * tmpvar_6);\\n  float tmpvar_7;\\n  float tmpvar_8;\\n  tmpvar_8 = (min (abs(\\n    (uv5_4.y / uv5_4.x)\\n  ), 1.0) / max (abs(\\n    (uv5_4.y / uv5_4.x)\\n  ), 1.0));\\n  float tmpvar_9;\\n  tmpvar_9 = (tmpvar_8 * tmpvar_8);\\n  tmpvar_9 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_9) + 0.05368138) * tmpvar_9) - 0.1173503)\\n     * tmpvar_9) + 0.1938925) * tmpvar_9) - 0.3326756)\\n   * tmpvar_9) + 0.9999793) * tmpvar_8);\\n  tmpvar_9 = (tmpvar_9 + (float(\\n    (abs((uv5_4.y / uv5_4.x)) > 1.0)\\n  ) * (\\n    (tmpvar_9 * -2.0)\\n   + 1.570796)));\\n  tmpvar_7 = (tmpvar_9 * sign((uv5_4.y / uv5_4.x)));\\n  if ((abs(uv5_4.x) > (1e-08 * abs(uv5_4.y)))) {\\n    if ((uv5_4.x < 0.0)) {\\n      if ((uv5_4.y >= 0.0)) {\\n        tmpvar_7 += 3.141593;\\n      } else {\\n        tmpvar_7 = (tmpvar_7 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_7 = (sign(uv5_4.y) * 1.570796);\\n  };\\n  xlat_mutablers0.x = (((tmpvar_7 / 3.1416) * 6.0) * q28);\\n  float tmpvar_10;\\n  tmpvar_10 = (1.5 / sqrt(dot (uv_1, uv_1)));\\n  xlat_mutablers0.y = tmpvar_10;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (xlat_mutablers0.x + (q9 * 4.0));\\n  tmpvar_11.y = (tmpvar_10 + ((q9 * q28) * 4.0));\\n  xlat_mutablerss = (tmpvar_11 / 12.0);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = q5;\\n  tmpvar_12.y = q6;\\n  ofs_2 = (0.1 * tmpvar_12.yx);\\n  float tmpvar_13;\\n  float tmpvar_14;\\n  tmpvar_14 = -(q9);\\n  tmpvar_13 = fract(tmpvar_14);\\n  mat2 tmpvar_15;\\n  tmpvar_15[uint(0)].x = 1.0;\\n  tmpvar_15[uint(0)].y = -0.0;\\n  tmpvar_15[1u].x = 0.0;\\n  tmpvar_15[1u].y = 1.0;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_13)\\n   * tmpvar_15)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * (1.0 - \\n    (tmpvar_13 * tmpvar_13)\\n  )));\\n  float tmpvar_16;\\n  tmpvar_16 = fract((tmpvar_14 + 0.3333333));\\n  mat2 tmpvar_17;\\n  tmpvar_17[uint(0)].x = -0.4990803;\\n  tmpvar_17[uint(0)].y = -0.8665558;\\n  tmpvar_17[1u].x = 0.8665558;\\n  tmpvar_17[1u].y = -0.4990803;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_16)\\n   * tmpvar_17)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \\n    (tmpvar_16 * tmpvar_16)\\n  )));\\n  float tmpvar_18;\\n  tmpvar_18 = fract((tmpvar_14 + 0.6666667));\\n  mat2 tmpvar_19;\\n  tmpvar_19[uint(0)].x = -0.5018377;\\n  tmpvar_19[uint(0)].y = 0.8649619;\\n  tmpvar_19[1u].x = -0.8649619;\\n  tmpvar_19[1u].y = -0.5018377;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_18)\\n   * tmpvar_19)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \\n    (tmpvar_18 * tmpvar_18)\\n  )));\\n  float tmpvar_20;\\n  tmpvar_20 = fract((tmpvar_14 + 1.0));\\n  mat2 tmpvar_21;\\n  tmpvar_21[uint(0)].x = 0.9999949;\\n  tmpvar_21[uint(0)].y = 0.003185092;\\n  tmpvar_21[1u].x = -0.003185092;\\n  tmpvar_21[1u].y = 0.9999949;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_20)\\n   * tmpvar_21)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \\n    (tmpvar_20 * tmpvar_20)\\n  )));\\n  vec2 tmpvar_22;\\n  tmpvar_22.x = (ret1_3.x + ret1_3.z);\\n  tmpvar_22.y = (ret1_3.x - ret1_3.y);\\n  xlat_mutableret2 = (((\\n    (texture (sampler_blur1, fract((xlat_mutablerss + (tmpvar_22 / 2.0)))).xyz * scale1)\\n   + bias1) / tmpvar_10) * 12.0);\\n  vec4 tmpvar_23;\\n  tmpvar_23.w = 1.0;\\n  tmpvar_23.xyz = ((ret1_3 + (\\n    ((bass_att * 0.004) / sqrt(dot (uv_1, uv_1)))\\n   * roam_sin).xyz) + (sqrt(xlat_mutableret2.zxy) * clamp (\\n    (1.0 - (ret1_3 * 4.0))\\n  , 0.0, 1.0)));\\n  ret = tmpvar_23.xyz;\\n }"}')},"./presets/converted/martin - castle in the air.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.958,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":25.6,"mv_y":9.6,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.09,"y":0.9,"rad":0.22437,"tex_zoom":1.76002,"r2":1,"g2":0,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":6.19589,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"additive":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.49981,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"thick":1,"additive":1,"scaling":3.91581,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//******** INITIALIZATION *********\\n//---------- some global vars, do not change -------------\\navg = 0.01;\\nq7 = .2; //MyZoom\\nq8 =  rand(200)/100-1; //fractal modifier\\n//q8 = -0; //#\\nq16 = 1.2; //Tele\\nq18 = rand(0.8)+.1; //brightness balance back/front\\nq17 = 2.6; //fractal density factor ffac\\nstart = 1; travel = 0; RotZ = 0; look = 0; slow = 0; t0 = time+3; lampx = .5; lampy = .5;\\ncran0 = rand(1);\\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; ); \\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; ); \\ntrelx = 0;  trely = 0; trelz = 0;\\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\\n\\n//Find random starting point\\nwhile (exec2(\\n  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;\\n  PosX = rand(10)-5;   PosY = rand(10)-5;   PosZ = rand(10)-5; \\n\\n//  PosX = 3.3; PosY = 2; PosZ = -2; ran1 = 0; ran2 = 0; ran3 = 0; //#\\n\\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); \\n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\\n\\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.001;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *q17 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *q17 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *q17 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.05;\\n  ,(dist < 0.6)*(len > 30)));\\n,(dist < .06))); //end while","frame_eqs_eel":"fps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25)); \\ndec_s = 1-.03*30/fps_;\\ndec_m = 1-.1*30/fps_;\\nbeat = (time >  t0+3); t0 = if(beat, time, t0);\\n\\nspeed = min(0.2,dist_-.02) * (1+2*avg) *(1-slow*.0)*.1/q7; //#\\nds = ds * dec_s + (1-dec_s)*speed*.4/fps_; \\nRotZ = if (travel > 2,.5,0);\\nvol = vol*dec_m + (1-dec_m)*(bass_att +mid_att + treb_att)/4;\\nq1 = vol/2+.3;\\n//Position \\nDirX= reg26; DirY= reg27; DirZ = reg28;\\nPosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ; \\nq4 = PosX; q5 = PosY; q6 = PosZ;\\n\\nangchg = (.1-dist_)*(dist_ < .1);\\ntravel = if (angchg > 0,0,travel+ds);\\nv1 = v1 * dec_s + (1-dec_s)* RotZ * ds/2;\\nv2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;\\nv3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + 2*v1*sin(time*.1));\\n//v1 = 0.00;\\n//push old RotMat\\nreg30 =reg20; reg31 =reg21; reg32 =reg22; \\nreg33 =reg23; reg34 =reg24; reg35 =reg25; \\nreg36 =reg26; reg37 =reg27; reg38 =reg28; \\n\\nn = 0; avg = 0;\\nloop (5,\\n  n = n+1;\\n  //new Rot. Mat for infinitesimal angles\\n  ran1 = rand(100)/100;\\n  ran2 = rand(100)/200-.25;\\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); \\n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\\n\\n  //pop old RotMat\\n  reg20 =reg30; reg21 =reg31; reg22 =reg32; \\n  reg23 =reg33; reg24 =reg34; reg25 =reg35; \\n  reg26 =reg36; reg27 =reg37; reg28 =reg38; \\n\\n  //Multiply new RotMat by old one\\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\\n\\n  reg20 =q20; reg21 =q21; reg22 =q22;\\n  reg23 =q23; reg24 =q24; reg25 =q25;\\n  reg26 =q26; reg27 =q27; reg28 =q28;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.002;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *q17 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *q17 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *q17 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.1;\\n  ,(dist < 0.6)*(len > 30)));\\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\\n  avg = avg+abs(megabuf(n)/5);\\n); //end loop 5\\n\\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\\n\\nxslope = min(max(2/avg*(megabuf(1)-megabuf(3)),-3),3);\\nyslope = min(max(2/avg*(megabuf(4)-megabuf(2)),-3),3);\\nmonitor = avg;\\ndist_ = dist_*dec_s + (1-dec_s)*dist;\\n\\nq10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv\\nq14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + start*.05; \\nq19 = .6 + .4*sin(time*.02+cran0*6); //brightness backgd\\nstart = start * .9;\\n\\nwarp = 0.0; zoom = 1; \\ndx = -v2/q16; dy = v3/q16; rot = v1;\\nvx = vx -v2/q16; vy = vy +v3/q16; vz = vz + v1;\\nq11 = vx;  q12 = vy;\\nmovz = movz + ds;\\nq13 = movz;\\nmonitor = q13;","pixel_eqs_eel":"","warp":"float sustain;\\nfloat ffac;\\nfloat xlat_mutabledist;\\nfloat xlat_mutablelimit;\\nfloat xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\nvec3 xlat_mutableuv2;\\n shader_body { \\n  mat3 tmpvar_1;\\n  tmpvar_1[uint(0)].x = q20;\\n  tmpvar_1[uint(0)].y = q23;\\n  tmpvar_1[uint(0)].z = q26;\\n  tmpvar_1[1u].x = q21;\\n  tmpvar_1[1u].y = q24;\\n  tmpvar_1[1u].z = q27;\\n  tmpvar_1[2u].x = q22;\\n  tmpvar_1[2u].y = q25;\\n  tmpvar_1[2u].z = q28;\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  tmpvar_2.z = q6;\\n  sustain = (0.98 - q14);\\n  ffac = q17;\\n  vec2 uv_3;\\n  uv_3 = (((uv - 0.5) * (1.0 - \\n    (q10 / (1.0 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z))\\n  )) + 0.5);\\n  xlat_mutableuv1 = (((uv_orig - 0.5) * aspect.xy) * q16);\\n  vec4 tmpvar_4;\\n  tmpvar_4 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = tmpvar_4.xyz;\\n  if ((tmpvar_4.y > (0.4 * rad))) {\\n    vec3 tmpvar_6;\\n    tmpvar_6 = (tmpvar_4.xyz - vec3(0.5, 0.5, 0.5));\\n    vec4 nb2_7;\\n    vec4 nb_8;\\n    vec2 tmpvar_9;\\n    tmpvar_9 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 - texsize.zw)).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_8.x = (1.0 - (tmpvar_9.y + (0.015625 * \\n      (tmpvar_9.x - 0.5)\\n    )));\\n    vec2 tmpvar_10;\\n    tmpvar_10 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(1.0, -1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_8.y = (1.0 - (tmpvar_10.y + (0.015625 * \\n      (tmpvar_10.x - 0.5)\\n    )));\\n    vec2 tmpvar_11;\\n    tmpvar_11 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 + texsize.zw)).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_8.z = (1.0 - (tmpvar_11.y + (0.015625 * \\n      (tmpvar_11.x - 0.5)\\n    )));\\n    vec2 tmpvar_12;\\n    tmpvar_12 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(-1.0, 1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_8.w = (1.0 - (tmpvar_12.y + (0.015625 * \\n      (tmpvar_12.x - 0.5)\\n    )));\\n    vec2 tmpvar_13;\\n    tmpvar_13 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(0.0, -1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_7.x = (1.0 - (tmpvar_13.y + (0.015625 * \\n      (tmpvar_13.x - 0.5)\\n    )));\\n    vec2 tmpvar_14;\\n    tmpvar_14 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(1.0, 0.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_7.y = (1.0 - (tmpvar_14.y + (0.015625 * \\n      (tmpvar_14.x - 0.5)\\n    )));\\n    vec2 tmpvar_15;\\n    tmpvar_15 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(0.0, 1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_7.z = (1.0 - (tmpvar_15.y + (0.015625 * \\n      (tmpvar_15.x - 0.5)\\n    )));\\n    vec2 tmpvar_16;\\n    tmpvar_16 = (0.0078125 * floor((\\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(-1.0, 0.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_7.w = (1.0 - (tmpvar_16.y + (0.015625 * \\n      (tmpvar_16.x - 0.5)\\n    )));\\n    vec4 tmpvar_17;\\n    tmpvar_17 = min (nb_8, nb2_7);\\n    nb_8.zw = tmpvar_17.zw;\\n    nb_8.xy = min (tmpvar_17.xy, tmpvar_17.zw);\\n    xlat_mutabledist = (min (nb_8.x, nb_8.y) + ((0.006 * tmpvar_6.x) * abs(tmpvar_6.y)));\\n  } else {\\n    xlat_mutabledist = tmpvar_5.x;\\n  };\\n  vec2 tmpvar_18;\\n  tmpvar_18 = (0.0078125 * floor((\\n    (128.0 * texture (sampler_pc_main, uv_3).yz)\\n   + vec2(0.5, 0.5))));\\n  xlat_mutabledist = (min (xlat_mutabledist, (1.0 - \\n    (tmpvar_18.y + (0.015625 * (tmpvar_18.x - 0.5)))\\n  )) - (q10 * 0.8));\\n  xlat_mutablelimit = (15.0 + (10.0 * xlat_mutabledist));\\n  vec3 tmpvar_19;\\n  tmpvar_19.xy = (xlat_mutableuv1 * xlat_mutabledist);\\n  tmpvar_19.z = xlat_mutabledist;\\n  xlat_mutableuv2 = (((tmpvar_19 / q7) * tmpvar_1) + tmpvar_2);\\n  xlat_mutableuv2 = ((fract(\\n    ((xlat_mutableuv2 / 8.0) + 0.5)\\n  ) - 0.5) * 8.0);\\n  int iterations_21;\\n  vec3 zz0_22;\\n  vec3 zz_23;\\n  zz_23 = xlat_mutableuv2;\\n  zz0_22 = (xlat_mutableuv2 + q8);\\n  iterations_21 = int((8.0 - float(\\n    (xlat_mutabledist > 0.8)\\n  )));\\n  for (int n_20 = 0; n_20 <= iterations_21; n_20++) {\\n    zz_23 = ((2.0 * clamp (zz_23, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_23);\\n    zz_23 = (zz_23 * (clamp (\\n      max ((0.25 / dot (zz_23, zz_23)), 0.25)\\n    , 0.0, 1.0) * 4.0));\\n    zz_23 = ((ffac * zz_23) + zz0_22);\\n  };\\n  xlat_mutablestruc = (sqrt(dot (zz_23.xz, zz_23.xz)) / xlat_mutablelimit);\\n  vec2 tmpvar_24;\\n  tmpvar_24 = (0.0078125 * floor((\\n    (128.0 * vec2((1.0 - xlat_mutabledist)))\\n   + vec2(0.5, 0.5))));\\n  vec2 tmpvar_25;\\n  tmpvar_25.x = ((64.0 * (\\n    (1.0 - xlat_mutabledist)\\n   - tmpvar_24.x)) + 0.5);\\n  tmpvar_25.y = tmpvar_24.x;\\n  vec3 tmpvar_26;\\n  float tmpvar_27;\\n  tmpvar_27 = (q14 * 2.0);\\n  tmpvar_26.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * mix (texture (sampler_main, uv_3).xyz, \\n    ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1)\\n  , vec3(tmpvar_27)).x));\\n  tmpvar_26.yz = tmpvar_25;\\n  vec3 tmpvar_28;\\n  tmpvar_28.y = 1.0;\\n  tmpvar_28.x = sustain;\\n  tmpvar_28.z = 1.0;\\n  vec3 tmpvar_29;\\n  tmpvar_29.y = 0.0;\\n  tmpvar_29.x = 0.003921569;\\n  tmpvar_29.z = (0.01568628 * (0.2 + rad));\\n  vec4 tmpvar_30;\\n  tmpvar_30.w = 1.0;\\n  tmpvar_30.xyz = mix (tmpvar_26, ((\\n    mix (texture (sampler_main, uv_3).xyz, ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1), vec3(tmpvar_27))\\n   * tmpvar_28) - tmpvar_29), vec3(clamp ((\\n    sqrt(dot (zz_23, zz_23))\\n   - xlat_mutablelimit), 0.0, 1.0)));\\n  ret = tmpvar_30.xyz;\\n }","comp":"float xlat_mutableinten;\\nfloat xlat_mutabletmp;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablez;\\n shader_body { \\n  float t_rel_2;\\n  vec3 ret1_3;\\n  float struc_4;\\n  xlat_mutableuv1 = ((uv * aspect.xy) - vec2(0.5, 0.5));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv);\\n  float tmpvar_6;\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  tmpvar_6 = mix (min ((1.0 - tmpvar_5.z), (1.0 - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  .z)), (1.0 - (\\n    (tmpvar_7.xyz * scale1)\\n   + bias1).z), 0.5);\\n  struc_4 = ((mix (tmpvar_5.xyz, \\n    ((tmpvar_7.xyz * scale1) + bias1)\\n  , vec3(tmpvar_6)).x * (1.0 - tmpvar_6)) * tmpvar_6);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = q11;\\n  tmpvar_8.y = q12;\\n  xlat_mutableuv2 = ((xlat_mutableuv1 * 0.2) - (tmpvar_8 * 0.2));\\n  vec2 uvi_9;\\n  uvi_9 = (xlat_mutableuv2 * 4.0);\\n  float zv_10;\\n  zv_10 = (0.008 * time);\\n  xlat_mutabletmp = clamp (dot ((texture (sampler_noise_hq, \\n    (xlat_mutableuv2 + (0.03 * ((\\n      (dot (texture (sampler_noise_hq, uvi_9), vec4(0.32, 0.49, 0.29, 0.0)) + (dot (texture (sampler_noise_hq, (\\n        (uvi_9 * 2.0)\\n       + zv_10)), vec4(0.32, 0.49, 0.29, 0.0)) / 2.0))\\n     + \\n      (dot (texture (sampler_noise_hq, ((uvi_9 * 4.0) + (2.0 * zv_10))), vec4(0.32, 0.49, 0.29, 0.0)) / 4.0)\\n    ) + (\\n      dot (texture (sampler_noise_hq, ((uvi_9 * 8.0) + (4.0 * zv_10))), vec4(0.32, 0.49, 0.29, 0.0))\\n     / 8.0))))\\n  ) - 0.4), vec4(0.32, 0.49, 0.29, 0.0)), 0.0, 1.0);\\n  float tmpvar_11;\\n  tmpvar_11 = clamp ((pow (xlat_mutabletmp, 1.2) * sign(xlat_mutabletmp)), 0.0, 1.0);\\n  xlat_mutabletmp = tmpvar_11;\\n  vec3 tmpvar_12;\\n  tmpvar_12.xy = vec2(0.1, 0.1);\\n  tmpvar_12.z = (1.2 - uv.y);\\n  ret1_3 = ((tmpvar_12 + 0.07) + ((\\n    clamp (((tmpvar_6 * 2.0) - 1.5), 0.0, 1.0)\\n   * tmpvar_11) * 4.0));\\n  t_rel_2 = (q13 * 6.0);\\n  for (int n_1 = 1; n_1 <= 3; n_1++) {\\n    xlat_mutablez = (1.0 - fract((\\n      (float(n_1) / 3.0)\\n     - \\n      (fract(-(t_rel_2)) / 3.0)\\n    )));\\n    xlat_mutableinten = (((1.0 - xlat_mutablez) * xlat_mutablez) * 2.0);\\n    vec2 tmpvar_13;\\n    tmpvar_13.x = q11;\\n    tmpvar_13.y = q12;\\n    xlat_mutableuv2 = (((xlat_mutablez * xlat_mutableuv1) / 4.0) - (tmpvar_13 / 6.0));\\n    vec2 uvi_14;\\n    uvi_14 = (xlat_mutableuv2 * 4.0);\\n    float zv_15;\\n    zv_15 = (0.008 * time);\\n    xlat_mutabletmp = clamp (dot ((\\n      (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.03 * (\\n        ((dot (texture (sampler_noise_hq, uvi_14), vec4(0.32, 0.49, 0.29, 0.0)) + (dot (texture (sampler_noise_hq, \\n          ((uvi_14 * 2.0) + zv_15)\\n        ), vec4(0.32, 0.49, 0.29, 0.0)) / 2.0)) + (dot (texture (sampler_noise_hq, (\\n          (uvi_14 * 4.0)\\n         + \\n          (2.0 * zv_15)\\n        )), vec4(0.32, 0.49, 0.29, 0.0)) / 4.0))\\n       + \\n        (dot (texture (sampler_noise_hq, ((uvi_14 * 8.0) + (4.0 * zv_15))), vec4(0.32, 0.49, 0.29, 0.0)) / 8.0)\\n      )))) - (xlat_mutablez * 0.5))\\n     - 0.3), vec4(0.32, 0.49, 0.29, 0.0)), 0.0, 1.0);\\n    xlat_mutabletmp = (((\\n      clamp ((xlat_mutabletmp * sign(xlat_mutabletmp)), 0.0, 1.0)\\n     * xlat_mutableinten) * q1) * 2.0);\\n    ret1_3 = (((ret1_3 + \\n      ((vec3(4.0, 3.0, 0.8) * q1) * struc_4)\\n    ) * clamp (\\n      (1.0 - xlat_mutabletmp)\\n    , 0.0, 1.0)) + xlat_mutabletmp);\\n  };\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = (1.0 - exp((-1.6 * ret1_3)));\\n  ret = tmpvar_16.xyz;\\n }"}')},"./presets/converted/martin - chain breaker.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0,"wave_mystery":0.6,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0.49,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.6,"b3x":0.4,"b1ed":0},"shapes":[{"baseVals":{"sides":8,"additive":1,"num_inst":256,"rad":0.03632,"tex_ang":1.00531,"tex_zoom":1.53117,"g":1,"b":1,"a":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":5,"additive":1,"num_inst":256,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g2":0,"a2":0.2,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"n = (instance);\\nFLen = reg00;\\nSLen = reg00/2;\\n\\nz0 = 10;\\ny0 = gmegabuf(2000+n+FLen)/z0;\\nx0 = gmegabuf(2000+n)/z0;\\n\\na0 = (gmegabuf(n+10000));\\n\\nk1 = instance/num_inst-.5;\\nx = .5 + x0 + sin(k1*8*sin(q12*.07)) * sin(q11*.13)*q3*.7; \\ny = .5 + q32*(y0 + sin(k1*8*sin(q14*.1)) * sin(q13*.2)*q3*.7); \\n\\narg = q2/8;\\nhigh = exp(-500*pow(arg+.5-instance/num_inst,2));\\nhigh += exp(-500*pow(-arg+.5-instance/num_inst,2));\\n\\nexc = sqrt((pow(x-.5,2)+pow(y-.5,2)));\\nrad0 = above(z0,0)*min (.1, a0/60)+.005;\\nrad0 = rad0 * (1+2*exc) * (1+high);\\n\\np1 = .5 + sin(q12)/2;\\np2 = .5 + sin(q13*1.4)/2;\\n//p1 = rand(1)-.5;\\n//p2 = rand(1)-.5;\\nexc = ((pow(x-p1,2)+pow(y-p2,2)));\\nrad = min(rad0 * (1 + .004*q3/abs(exc)),1) ;\\n\\na = min(a0*8+.4,1);\\n\\nk1 = instance/num_inst*5 + high;\\nw = 1-exp(-treb_att/2-.5);\\ng = w + (1-w)*sin(k1);\\nr = w + (1-w)*sin(k1-6.28/3);\\nb = w + (1-w)*sin(k1-6.28*2/3);\\n\\na2 = a/4;\\ng2 = g*0; b2 = b*0; r2 = r*0;"},{"baseVals":{"sides":13,"additive":1,"num_inst":5,"x":0.65,"y":0.38,"rad":0.57049,"tex_zoom":0.73678,"a":0.7,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst;\\nx = .5 + .3*sin(instance*k1*413);\\ny = .5 + .3 * sin(instance*k1*113);\\n\\nrad = .1 + .4*sin(k1*333);\\n\\nr =  .5*sin(k1*234);\\nb =  .5*sin(k1*534);\\ng =  .5*sin(k1*34);"},{"baseVals":{"sides":14,"additive":1,"thickoutline":1,"textured":1,"x":0.6,"y":0.55,"rad":0.97237,"ang":1.25664,"tex_zoom":0.34933,"g":0.6,"g2":0,"b2":1,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":120,"spectrum":1,"additive":1,"scaling":7.52386,"smoothing":0,"r":0,"a":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"FLen = reg00;\\n\\nn = int(sample*FLen);\\nvol = (value1+value2) * (1+ .1 / (sample+.03));\\n\\nchg = min(max(vol- gmegabuf(n),-1),1);\\ndec = if (chg>0, 1-chg*0.3, 1+chg*0.2);\\n\\nchg = q1 -q2;\\ndec = .94 - abs(chg) * if (chg> 0, .2,.1);\\n\\ndec = min(max(dec,0),1);\\ngmegabuf(n) = gmegabuf(n)*dec + vol*(1-dec);\\n\\ndec = q2/4;\\n//dec = .90;\\ndec = max(min(dec,1),.1);\\n\\ngmegabuf(n) = gmegabuf(n)*dec + gmegabuf(n+(q2<.8))*(1-dec);\\ngmegabuf(n+10000) = gmegabuf(n+10000)*.2 + .8* vol/3;\\na = .0;\\nx = sample;\\ny = .2 + gmegabuf(n+0)*.23;"},{"baseVals":{"samples":256,"usedots":1,"scaling":0.89152,"smoothing":0.82,"a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":32,"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"n = 0;\\nloop (50000,\\ngmegabuf(n) = 0;\\nmegabuf(n) = 0;\\nn = n+1;\\n);\\n\\nsw1 = rand(8);\\nsw2 = rand(8);\\nsw3 = rand(8);\\nsw4 = rand(8);","frame_eqs_eel":"flen = 512; //Wave Punkte\\nreg00 = FLen;\\nSLen = FLen/2;\\ndec_m = pow(.94, 30/fps);\\n\\n//Volume\\nn = 0; vol = 0;\\nloop (SLen,\\n  vol = vol + pow(gmegabuf(n),2)/FLen;  \\n  n = n+1;\\n);\\nvol = sqrt(vol)/2;\\nvol_ = vol_*dec_m + (1-dec_m)* (vol);\\n\\n//switches\\nlev1 = lev1 * dec_m + (1-dec_m) * gmegabuf(1);\\nlev2 = lev2 * dec_m + (1-dec_m) * gmegabuf(20);\\nlev3 = lev3 * dec_m + (1-dec_m) * gmegabuf(50);\\nlev4 = lev4 * dec_m + (1-dec_m) * gmegabuf(100);\\nsw1 = sw1 + (lev1-gmegabuf(1)>0)/fps;\\nsw2 = sw2 + (lev2-gmegabuf(20)>0)/fps;\\nsw3 = sw3 + (lev3-gmegabuf(50)>0)/fps;\\nsw4 = sw4 + (lev4-gmegabuf(100)>0)/fps;\\n\\ndif = (1+sin(sw3/4))*16+2;\\nofs = sin(sw2/3)*8;\\nn = 0; k1 = frame*0; \\nloop (SLen,\\n      m1 = (n)%SLen;\\n      m2 = (n+ofs)%SLen;\\n\\n      k = (m1+dif)%SLen;\\n      i = (SLen+m2-dif)%SLen;\\n\\n      in1 = (gmegabuf(m1)-gmegabuf(k))/pow(vol_+.03,.8)*1.2;\\n      in2 = (gmegabuf(m2)-gmegabuf(i))/pow(vol_+.03,.8)*1.2;\\n\\n      dec = if (pow(gmegabuf(2000+n),2) + pow(gmegabuf(2000+FLen+n),2)> in1*in1+in2*in2,.8,.94) ;\\n      dec = pow (dec, 30/fps); \\n\\n      gmegabuf(2000+n) =       gmegabuf(2000+n)*dec      +(1-dec)* in1;\\n      gmegabuf(2000+FLen+n) =  gmegabuf(2000+FLen+n)*dec +(1-dec)* in2;\\n      n=n+1;\\n);\\n\\nq1 = (bass+treb+mid)/3;\\nq2 = (bass_att+treb_att+mid_att)/3;\\nq3 = vol_;\\nq11 = sw1;\\nq12 = sw2;\\nq13 = sw3;\\nq14 = sw4;\\n\\nrot = 0; zoom = .98; warp = .3; rot = 0;\\n\\nq32 = aspecty;\\nmonitor = dif;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * clamp (\\n    (q1 - 0.8)\\n  , 0.0, 1.0)) * 0.92);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur2, uv).xyz * scale2) + bias2));\\n  ret_1 = (ret_1 + ((0.8 * \\n    (hue_shader - 0.8)\\n  ) * (1.0 - uv.y)));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},"./presets/converted/martin - disco mix 4.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":20.944651,"wave_smoothing":0,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":0.47,"rad":0.24057,"tex_zoom":0.14057,"g":0.3,"b":0.5,"g2":0,"b2":0.3,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nx = .5; y = .5;\\na = q24; \\na2 = q24;\\n//a = 1;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.05134,"tex_zoom":0.12288,"r":0.3,"g":0.2,"b":0.2,"a":0.7,"g2":0,"border_r":0,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = .5 + .3 * sin(time);\\ng = .5 + .3 * sin(time/1.5);\\nb = .5 + .3 * sin(time/3.7);\\n\\nr2 = 0; b2 = 0; g2 = 0;\\n\\na = .05; a2 = 0;"},{"baseVals":{"x":0.503,"rad":0.01,"tex_zoom":0.609857,"r":0,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ndy = .1 * sin(time*14);;\\ndx = q1*dy;\\n\\nx = .5 + dx;\\ny = .5 + dy;\\n\\na = q25; a2 = q25;\\nrad = q21/110;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":100,"thick":1,"scaling":0.045052,"smoothing":0.1,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"t2 = .45 + rand(10)/100;","point_eqs_eel":"k1 = bnot((sample*100+time)%2);\\n\\ndy = .015*above(sin(sample*11),0) \\n    +.008*above(sin(time+sample*74),0)\\n    +.008*above(sin(time+sample*128),0);\\n \\ndx = .01*above(sin(sample*27),0) + \\n      +.01*above(sin(time+sample*134),0);\\n\\nx = .2*(sample-.5) + .5 + dx;\\ny = t2 + dy;\\n\\na = q24 * k1 * bnot(q27%4);\\n\\nr = .6; g = 0; b = .6;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.02,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"xk = 0;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.95, 30/fps);\\ndec_xlow = pow (0.995, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\nq27 = index + 1;\\n\\npeakx = above(q22,1.5*maxp);\\nmaxp = max(maxp, q22);\\nmaxp = maxp*dec_xlow;\\n\\nk1 =  is_beat*equal(index%3,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrig = q24 * bnot(index%4);\\ndir = dir + trig * q26*(rand(100)/100-.5)/2 + peakx;\\ndir_ = dir_ * dec_slow + dir*(1-dec_slow);\\ndir__ = dir__ * dec_slow + dir_*(1-dec_slow);\\n\\nq5 = cos(dir__); \\nq6 = sin(dir__);\\n\\nspeed = speed * bnot(trig) + trig*q26*5/fps ;\\nspeed_= speed_* dec_slow + speed*(1-dec_slow);\\n\\nmovx = movx + speed_*q6;\\nmovy = movy + speed_*q5;\\n\\n//movx = movx + speed;\\n//movy = movy + speed;\\n\\n\\nq7 = movx;\\nq8 = movy;\\n\\ntilt = dir - dir__;\\ntilt_ = dec_slow*tilt_ + (1-dec_slow)*tilt;\\n\\n\\nmonitor = maxp;\\nq9 = cos(tilt_*speed_);\\nq10 = sin(tilt_*speed_);\\n\\nq12 = time;","pixel_eqs_eel":"zoom = 1.3;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = ((2.0 * sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )) + (rand_frame * 64.0)).x;\\n  uv_1 = (uv + (clamp (\\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\\n  uv6_2 = (0.4 * sin((tmpvar_3 * 22.0)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (((q24 * \\n    (((texture (sampler_main, uv_1).xyz - (\\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\\n     * 0.04)) + (0.15 * (vec3(\\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\\n    ) * roam_cos.xyz))) - 0.02)\\n  ) * 0.98) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_5.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\n shader_body { \\n  vec2 uv1_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)].x = q9;\\n  tmpvar_2[uint(0)].y = -(q10);\\n  tmpvar_2[1u].x = q10;\\n  tmpvar_2[1u].y = q9;\\n  uv1_1 = (((uv_orig - 0.5) * aspect.xy) * tmpvar_2);\\n  uv1_1 = (uv1_1 * aspect.yx);\\n  float tmpvar_3;\\n  tmpvar_3 = (3.0 / abs(uv1_1.y));\\n  xlat_mutablers.x = (uv1_1.x * tmpvar_3);\\n  xlat_mutablers.y = (tmpvar_3 / 2.0);\\n  mat2 tmpvar_4;\\n  tmpvar_4[uint(0)].x = q5;\\n  tmpvar_4[uint(0)].y = -(q6);\\n  tmpvar_4[1u].x = q6;\\n  tmpvar_4[1u].y = q5;\\n  xlat_mutablers = (tmpvar_4 * xlat_mutablers);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q7;\\n  tmpvar_5.y = q8;\\n  xlat_mutablers = (xlat_mutablers + tmpvar_5);\\n  xlat_mutableret1 = ((texture (sampler_blur1, fract(\\n    (xlat_mutablers / 12.0)\\n  )).xyz * scale1) + bias1);\\n  vec2 tmpvar_6;\\n  tmpvar_6.y = 0.0;\\n  tmpvar_6.x = q5;\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (((xlat_mutableret1 * 32.0) / tmpvar_3) + ((\\n    ((q22 * sqrt(tmpvar_3)) / 4.0)\\n   * \\n    sin(((uv1_1 - q12) * q27))\\n  .x) * texture (sampler_main, (\\n    (((4.0 * xlat_mutableret1) / tmpvar_3).xy + ((uv1_1 / 2.0) / (0.5 + abs(uv1_1.y))))\\n   + tmpvar_6)).xyz));\\n  ret = tmpvar_7.xyz;\\n }"}')},"./presets/converted/martin - extreme heat.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.474,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0,"ob_a":0.3,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1x":0.8,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":7,"additive":1,"num_inst":1024,"rad":0.04896,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0,"g":1,"b":1,"a":0,"g2":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"max_age = reg00;\\nn = instance*12;\\n\\nx0 = gmegabuf (n);\\ny0 = gmegabuf (n+1);\\nz0 = gmegabuf (n+2); \\nif (z0 < -100, rad = 0; gmegabuf(n+8) = max_age,\\n  rad0 = pow(1-gmegabuf(n+8)/max_age,0.2)/z0* gmegabuf(n+7) + 0.01;\\n  rad = abs(rad0)*0.032 ;\\n\\n  x = 0.5 + x0/z0;\\n  y = 0.5 + y0/z0;\\n);\\n\\na = 1; a2 = 0.2;\\n\\ng = .8; g2 = .0;\\n//b = (gmegabuf(n+7)>0)*0.04/abs(rad0); b2 = 0;\\nb = (rand(10)>3)*0.2 + 0.2*(z0<0); b2 =0;\\n\\n"},{"baseVals":{"sides":12,"thickoutline":1,"x":0.9,"y":0.7,"rad":0.02958,"tex_zoom":0.9355,"g":0.5,"b":1,"g2":0,"b2":0.4,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = 1;"},{"baseVals":{"sides":44,"textured":1,"rad":1.397,"tex_zoom":0.44799,"a":0.5,"r2":1,"g2":0,"border_r":0.5,"border_g":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":34,"thickoutline":1,"x":0.65,"y":0.8,"rad":0.14595,"tex_zoom":0.3357,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = q22;"}],"waves":[{"baseVals":{"enabled":1,"samples":160,"sep":20,"usedots":1,"additive":1,"scaling":7.858,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = rand(100)/100;\\ny =  0.5 - (1-0.7)/q32- 0.15*(rand(100)/100-0.5);\\na = 0.15;\\n\\nr= 0; b=1; g = 0;"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"max_age =  4.5; // Sekunden\\nreg00 = max_age;\\n\\nn = 0;\\nloop (12*1024, gmegabuf(n) = max_age-1 + rand(2); n+=1);\\n\\n\\nq9 = (rand(25)-10)*2;\\nq3 = rand (100)/100;\\nq4 = rand (100)/100;\\n\\n//q2 = q3 = q4 = 0;\\n//record\\n// 0 : xpos\\n// 1 : ypos\\n// 2 : zpos\\n// 3 :vx\\n// 4 :vy\\n// 5 :vz\\n\\n\\n// 8 : age","frame_eqs_eel":"dec_fast = 1 - 0.22*40/fps;\\ndec_med  = 1 - 0.15*40/fps;\\ndec_slow = 1 - 0.04* 40/fps;\\n\\nvol = (bass+med+treb)/3;\\nvol_ = vol_*dec_slow + (1-dec_slow)*vol;\\nbeat = vol;\\nis_beat = above(beat, 1+peak*4) * above (time, t0+.2);\\nt0   = if (is_beat,time,t0);\\npeak = if (is_beat, beat, peak*dec_med);\\n\\nindex = (index + is_beat) %1024;\\nind1 = ind1*dec_med + (1-dec_fast)*index;\\nind2 = ind2*dec_med + (1-dec_fast)*ind1;\\nq27 = ind2;\\nq24 = is_beat;\\n\\n//Partikel\\nran1 = if (is_beat, rand(100)/100-0.5, ran1);\\nran2 = if (is_beat, rand(100)/50+1, ran2);\\nran1_ = dec_med * ran1_ + (1-dec_med)*ran1;\\nhigh = ran2 > 2.9;\\nq5 = ran1_;\\n\\nn = 0;\\npush = max(0,vol-vol_alt)*vol_; air = 0.1*dt; \\ndt = 1/fps;\\nv00 = pow(push,0.25)+0.4; Free = 512; New = 0;\\n\\ny0 = -0.68; yobf = y0+0.1;\\nloop (512,\\n   megabuf (n) = gmegabuf (n);\\n   megabuf (n+1) = gmegabuf (n+1);\\n   megabuf (n+2) = gmegabuf (n+2);\\n  if (gmegabuf(n+8) > max_age,\\n    if (band(push >= dt*10 * !high,New < 200), \\n    Free -= 1; New +=1;\\n    // Init Neues Partikel\\n     Tht = rand (100) / 500 * (1+high*1.5);\\n     Phi   = rand (12);\\n     v0 = v00 * (1 + rand(10)/40);\\n     gmegabuf (n) = ran1*1.7;\\n     gmegabuf (n+1) = y0 + 2.2 * high;\\n     gmegabuf (n+2) = 2;\\n     gmegabuf (n+3) = v0*sin(Tht) * cos(Phi);\\n     gmegabuf (n+4) = v0*cos(4*Tht) * (1-high*1.5);\\n     gmegabuf (n+5) = v0*sin(Tht)*sin(Phi)*1.5*vol;\\n     gmegabuf (n+7) = 0;\\n     gmegabuf (n+8) = rand(100)/100;,0)\\n  ,\\n  //Integration\\n   Free -= 1;\\n   gmegabuf (n)   += gmegabuf(n+3)*dt;\\n   gmegabuf (n+1) += gmegabuf(n+4)*dt;\\n   gmegabuf (n+2) += gmegabuf(n+5)*dt;\\n\\n   gmegabuf (n+3) *= (1-air);\\n   gmegabuf (n+4) *= (1-air);\\n   gmegabuf (n+4) -= 0.8*dt;\\n   gmegabuf (n+5) *= (1-air);\\n   gmegabuf (n+7) = (gmegabuf(n+1)>yobf) * min(1,18*(gmegabuf(n+1)-yobf));\\n   if (band(gmegabuf(n+1)<yobf,gmegabuf(n+4)<0),gmegabuf(8) = max_age,0);\\n//  gmegabuf(n+7)=1;\\n   gmegabuf (n+8) += dt;);\\nn += 12);\\n  \\n//Kopien\\nn = 0;\\nloop (512,\\n  m = 511*12+n;\\n  gmegabuf (m) = (gmegabuf(n) + megabuf(n))/2;  \\n  gmegabuf (m+1) = (gmegabuf(n+1) + megabuf(n+1))/2;  \\n  gmegabuf (m+2) = (gmegabuf(n+2) + megabuf(n+2))/2;  \\n  gmegabuf (m+7) = gmegabuf(n+7);  \\n  gmegabuf (m+8) = gmegabuf(n+8);  \\nn += 12);\\n\\n\\n\\ndec = if (bass>bass1,0.5,0.9);\\nbass1 = bass1*dec + bass*(1-dec);\\nq1 = min(1,max(0,bass1-1.5) * abs(q3-0.5)*3);\\n\\nq10 = max (vol_-0.1,0.1);\\nvol_alt = vol;\\n\\n\\nq32 = aspecty;\\n\\n\\nnew1 = if (new>0,new,new1);\\n\\nmonitor = New1;","pixel_eqs_eel":"dy = -.007*y;\\nwarp =.0;\\nrot = .025*sin(q27+x*7+y*0)*0.2/(abs(y-0.7)+0.1) * q10;// * (1-2*(y>0.7));\\nzoom = 1.003 + 0.2*max(0,y-0.7);","warp":"vec2 ver;\\nfloat xlat_mutablecloud;\\nvec2 xlat_mutabledz;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablez;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.y = 0.0;\\n  tmpvar_1.x = texsize.z;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = 0.0;\\n  tmpvar_2.y = texsize.w;\\n  ver = (tmpvar_2 * 2.0);\\n  vec3 ret_3;\\n  xlat_mutabledz.x = (2.0 * dot (vec3((texture (sampler_main, \\n    (uv + tmpvar_1)\\n  ).z - texture (sampler_main, \\n    (uv - tmpvar_1)\\n  ).z)), vec3(0.32, 0.49, 0.29)));\\n  xlat_mutabledz.y = (2.0 * dot (vec3((texture (sampler_main, \\n    (uv + ver)\\n  ).z - texture (sampler_main, \\n    (uv - ver)\\n  ).z)), vec3(0.32, 0.49, 0.29)));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q3;\\n  tmpvar_4.y = (0.4 + (q4 * 0.4));\\n  xlat_mutableuv1 = (uv_orig - tmpvar_4);\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv_orig);\\n  xlat_mutablez = ((0.8 * (xlat_mutableuv1.y - 0.4)) - (mix (tmpvar_5.x, \\n    ((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1)\\n  .x, 0.5) * 0.03));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  tmpvar_6.y = xlat_mutablez;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = 0.0;\\n  tmpvar_7.y = (-(time) * 0.014);\\n  xlat_mutableuv2 = (tmpvar_6 + tmpvar_7);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = 0.0;\\n  tmpvar_8.y = (time * 0.004);\\n  vec2 uvi_9;\\n  uvi_9 = ((xlat_mutableuv2 * 1.5) + tmpvar_8);\\n  float zv_10;\\n  zv_10 = (0.002 * time);\\n  xlat_mutablecloud = (1.0 - (1.5 * abs(\\n    (texture (sampler_noise_hq, ((xlat_mutableuv2 + (0.07 * \\n      abs((((\\n        (dot (texture (sampler_noise_hq, uvi_9), vec4(0.32, 0.49, 0.29, 0.0)) + (dot (texture (sampler_noise_hq, (\\n          (uvi_9 * 2.0)\\n         + zv_10)), vec4(0.32, 0.49, 0.29, 0.0)) / 2.0))\\n       + \\n        (dot (texture (sampler_noise_hq, ((uvi_9 * 4.0) + zv_10)), vec4(0.32, 0.49, 0.29, 0.0)) / 4.0)\\n      ) + (\\n        dot (texture (sampler_noise_hq, ((uvi_9 * 8.0) + zv_10)), vec4(0.32, 0.49, 0.29, 0.0))\\n       / -8.0)) - 1.0))\\n    )) / 2.0)) - 0.5)\\n  ))).x;\\n  xlat_mutablecloud = (xlat_mutablecloud * clamp ((\\n    (texture (sampler_noise_hq, (xlat_mutableuv2 * vec2(2.0, 0.5))).x + 0.5)\\n   - \\n    (3.0 * abs(xlat_mutableuv2.x))\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = 0.0;\\n  tmpvar_11.y = ((-0.01 * time) * (0.125 * float(\\n    int((8.0 * pow (xlat_mutablecloud, 4.0)))\\n  )));\\n  float tmpvar_12;\\n  tmpvar_12 = (texture (sampler_noise_hq, (18.0 * (\\n    (xlat_mutableuv2 + (0.05 * xlat_mutablecloud))\\n   + tmpvar_11))) - 0.75).x;\\n  xlat_mutablecloud = (xlat_mutablecloud * (1.0 + (\\n    (0.2 * tmpvar_12)\\n   * \\n    (xlat_mutablecloud * xlat_mutablecloud)\\n  )));\\n  ret_3.x = ((0.3 * xlat_mutablecloud) + (0.7 * tmpvar_5.xyz)).x;\\n  xlat_mutableuv1 = (uv - vec2(0.0, 0.71));\\n  vec4 tmpvar_13;\\n  tmpvar_13 = texture (sampler_blur1, uv);\\n  float tmpvar_14;\\n  tmpvar_14 = clamp (((12.0 * \\n    (((10.0 * xlat_mutableuv1.y) + ((\\n      (tmpvar_13.xyz * scale1)\\n     + bias1).x / 2.0)) - 1.0)\\n  ) + tmpvar_12), 0.0, 1.0);\\n  xlat_mutableuv1 = (uv - 0.7);\\n  ret_3.z = (((\\n    ((((4.0 * tmpvar_14) * (1.0 - tmpvar_14)) * clamp ((tmpvar_5.x - 0.2), 0.0, 1.0)) + texture (sampler_main, (uv + (xlat_mutabledz * 0.003))).z)\\n   - \\n    (0.03 * sqrt(dot (xlat_mutabledz, xlat_mutabledz)))\\n  ) - (\\n    pow (((tmpvar_13.xyz * scale1) + bias1).z, 8.0)\\n   * 0.2)) - 0.01);\\n  ret_3.y = (texture (sampler_main, mix (uv, uv_orig, vec2(0.5, 0.5))).y * (0.85 - (0.2 * \\n    ((tmpvar_13.xyz * scale1) + bias1)\\n  .y)));\\n  ret_3.x = (ret_3.x + ((texture (sampler_noise_lq, \\n    (2.0 * xlat_mutableuv2)\\n  ) * 0.08) * clamp (\\n    (1.0 - (3.0 * ret_3.x))\\n  , 0.0, 1.0)).x);\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_3;\\n  ret = tmpvar_15.xyz;\\n }","comp":"float dunk;\\nfloat xlat_mutablenoise;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nfloat xlat_mutablesmask;\\nfloat xlat_mutablesmoke;\\nvec2 xlat_mutableuv1;\\nfloat xlat_mutablez;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.y = 0.0;\\n  tmpvar_1.x = texsize.z;\\n  dunk = ((rand_preset.x * 0.3) + 0.1);\\n  vec2 uv_2;\\n  vec3 ret_3;\\n  uv_2 = (uv + (texsize.zw / 2.0));\\n  xlat_mutableuv1 = (uv_2 - vec2(0.0, 0.7));\\n  xlat_mutablesmask = (((10.0 * xlat_mutableuv1.y) + (\\n    ((texture (sampler_blur1, uv_2).xyz * scale1) + bias1)\\n  .x / 2.0)) - 1.0);\\n  float tmpvar_4;\\n  tmpvar_4 = clamp (((2.0 * xlat_mutablesmask) + 0.3), 0.0, 1.0);\\n  xlat_mutablenoise = ((3.0 * (1.0 - tmpvar_4)) * texture (sampler_noise_lq, ((xlat_mutableuv1 * 1.5) + (rand_frame * 0.2).xy)).x);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp (((12.0 * xlat_mutablesmask) + (xlat_mutablenoise / 2.0)), 0.0, 1.0);\\n  xlat_mutablez = ((0.35 / xlat_mutableuv1.y) + (xlat_mutablenoise / 2.0));\\n  xlat_mutablers0.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  xlat_mutablers0.y = xlat_mutablez;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (xlat_mutablers0.x + (time / 4.0));\\n  tmpvar_6.y = (xlat_mutablez + (time * 0.21));\\n  xlat_mutablers = (tmpvar_6 * tmpvar_5);\\n  float t_7;\\n  t_7 = ((texture (sampler_main, uv_2).x - dunk) * (1.0 - (tmpvar_5 * \\n    pow (uv_2.y, 4.0)\\n  )));\\n  float tmpvar_8;\\n  tmpvar_8 = clamp (((1.2 * t_7) - 0.2), 0.0, 1.0);\\n  t_7 = tmpvar_8;\\n  vec3 tmpvar_9;\\n  tmpvar_9.x = tmpvar_8;\\n  tmpvar_9.y = (tmpvar_8 * tmpvar_8);\\n  tmpvar_9.z = pow (tmpvar_8, 8.0);\\n  vec3 tmpvar_10;\\n  tmpvar_10 = clamp ((tmpvar_9 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\\n  float t_11;\\n  t_11 = ((texture (sampler_blur2, (uv_2 + 0.03)).xyz * scale2) + bias2).x;\\n  float tmpvar_12;\\n  tmpvar_12 = clamp (((1.2 * t_11) - 0.2), 0.0, 1.0);\\n  t_11 = tmpvar_12;\\n  vec3 tmpvar_13;\\n  tmpvar_13.x = tmpvar_12;\\n  tmpvar_13.y = (tmpvar_12 * tmpvar_12);\\n  tmpvar_13.z = pow (tmpvar_12, 8.0);\\n  vec3 tmpvar_14;\\n  tmpvar_14 = clamp ((tmpvar_13 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\\n  ret_3 = ((tmpvar_10 * (tmpvar_10 * \\n    (3.0 - (2.0 * tmpvar_10))\\n  )) + ((\\n    (((1.0 - texture (sampler_main, uv_2).x) * (1.0 - tmpvar_5)) * abs((texture (sampler_main, (uv_2 - tmpvar_1)).x - texture (sampler_main, (uv_2 + tmpvar_1)).x)))\\n   * \\n    (tmpvar_14 * (tmpvar_14 * (3.0 - (2.0 * tmpvar_14))))\\n  ) * q9));\\n  xlat_mutablesmoke = ((texture (sampler_blur1, uv_2).xyz * scale1) + bias1).z;\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = uv_2.x;\\n  tmpvar_15.y = ((0.85 - xlat_mutableuv1.y) + ((\\n    ((texture (sampler_noise_hq, xlat_mutablers) + texture (sampler_noise_hq, ((xlat_mutablers / 4.0) - (time / 8.0)))) - 1.0)\\n  .x * 0.2) * q10));\\n  float t_16;\\n  t_16 = ((texture (sampler_main, tmpvar_15).x + texture (sampler_main, tmpvar_15).y) - dunk);\\n  float tmpvar_17;\\n  tmpvar_17 = clamp (((1.2 * t_16) - 0.2), 0.0, 1.0);\\n  t_16 = tmpvar_17;\\n  vec3 tmpvar_18;\\n  tmpvar_18.x = tmpvar_17;\\n  tmpvar_18.y = (tmpvar_17 * tmpvar_17);\\n  tmpvar_18.z = pow (tmpvar_17, 8.0);\\n  vec3 tmpvar_19;\\n  tmpvar_19 = clamp ((tmpvar_18 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\\n  ret_3 = (ret_3 + ((\\n    (tmpvar_19 * (tmpvar_19 * (3.0 - (2.0 * tmpvar_19))))\\n   * tmpvar_5) * 0.85));\\n  float tmpvar_20;\\n  tmpvar_20 = ((3.6 * tmpvar_4) * (1.0 - tmpvar_4));\\n  ret_3 = (ret_3 * (clamp (\\n    (1.0 - (xlat_mutablesmoke * (1.0 - tmpvar_20)))\\n  , 0.0, 1.0) * clamp (\\n    (1.0 - (tmpvar_20 * float((rand_preset.x > 0.5))))\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_21;\\n  tmpvar_21.z = 0.0;\\n  tmpvar_21.xy = (((texture (sampler_blur3, uv_2).xyz * scale3) + bias3).xy * vec2(3.0, 5.0));\\n  ret_3 = (ret_3 + ((xlat_mutablesmoke * \\n    dot (tmpvar_21, vec3(0.32, 0.49, 0.29))\\n  ) * vec3(1.0, 0.84, 0.62)));\\n  float tmpvar_22;\\n  tmpvar_22 = clamp (((1.2 * \\n    clamp (texture (sampler_main, uv_2).y, 0.0, 1.0)\\n  ) - 0.2), 0.0, 1.0);\\n  vec3 tmpvar_23;\\n  tmpvar_23.x = tmpvar_22;\\n  tmpvar_23.y = (tmpvar_22 * tmpvar_22);\\n  tmpvar_23.z = pow (tmpvar_22, 8.0);\\n  vec3 tmpvar_24;\\n  tmpvar_24 = clamp ((tmpvar_23 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\\n  ret_3 = (ret_3 + (tmpvar_24 * (tmpvar_24 * \\n    (3.0 - (2.0 * tmpvar_24))\\n  )));\\n  float tmpvar_25;\\n  tmpvar_25 = clamp (0.52, 0.0, 1.0);\\n  vec3 tmpvar_26;\\n  tmpvar_26.x = tmpvar_25;\\n  tmpvar_26.y = (tmpvar_25 * tmpvar_25);\\n  tmpvar_26.z = pow (tmpvar_25, 8.0);\\n  vec3 tmpvar_27;\\n  tmpvar_27 = clamp ((tmpvar_26 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\\n  vec3 tmpvar_28;\\n  tmpvar_28 = mix (clamp (ret_3, 0.0, 1.0), (tmpvar_27 * (tmpvar_27 * \\n    (3.0 - (2.0 * tmpvar_27))\\n  )), vec3((pow (\\n    ((1.0 - uv_2.y) - ((uv_2.x - 0.5) * (q3 - 0.5)))\\n  , 4.0) * q1)));\\n  ret_3 = tmpvar_28;\\n  vec4 tmpvar_29;\\n  tmpvar_29.w = 1.0;\\n  tmpvar_29.xyz = tmpvar_28;\\n  ret = tmpvar_29.xyz;\\n }"}')},"./presets/converted/martin - frosty caves 2.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.698,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":25.6,"mv_y":9.6,"mv_l":5,"mv_g":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.09,"y":0.9,"rad":0.22437,"tex_zoom":1.76002,"r2":1,"g2":0,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":6.19589,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"additive":1,"x":0.803,"rad":0.314,"tex_zoom":1.49332,"g":1,"b":1,"a":0,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.49981,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":132,"sep":20,"thick":1,"additive":1,"scaling":0.48454,"smoothing":0.1,"g":0,"b":0.2,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"n = 0; loop (20000, megabuf(n)=0; gmegabuf(n)=0; n +=1; );\\n\\nMINBPM = 30; MAXBPM = 230; num_res = 100;\\nindex = 0;\\nloop (num_res,\\n  n = 12*index;\\n  BPM      = minbpm * pow(maxbpm/minbpm,index/num_res);\\n  gmegabuf(n) = BPM;\\n  index += 1;);\\npi = 3.1416;\\nOCTAVE = (num_res) * log(2) / log (MAXBPM / MINBPM);\\n\\nq7 = .15; //MyZoom\\nq8 =  0.2 + rand(1); //fractal modifier\\nq16 = 1.6; //#fish eye\\nstart = 1; travel = 0; RotZ = 0; t0 = time+3;\\ncran0 = rand(1);\\ntrelx = 0;  trely = 0; trelz = 0;\\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\\n\\n//Find random starting point\\nwhile (exec2(\\n  ran1 = rand(8); ran2 = rand(8); ran3 = rand(8);\\n  PosX = rand(8); PosY = rand(8); PosZ = rand(8); \\n\\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); \\n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\\n\\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.001;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 1+2*((uvx/4+30.5 - int(uvx/4+30.5))-.5);\\n    uvy = 2+2*((uvy/4+30.5 - int(uvy/4+30.5))-.5);\\n    uvz = 3+2*((uvz/4+30.5 - int(uvz/4+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.05;\\n  ,(dist < 0.6)*(len > 30)));\\n,(dist < .06))); //end while","frame_eqs_eel":"dt = min (1/fps,0.1);\\ndec_f = 0.8; dec_m = 1 - 4*dt; dec_s = 1 - dt;\\nvol = (bass+mid/2+treb)/3;\\nvol_ = vol_*dec_m + (1-dec_m)*vol;\\ndec = dec_s;\\nvol2 = vol2*dec + (1-dec)*min(3,vol);\\nmaxvol = if (vol>maxvol,vol,maxvol*dec_s);\\n\\nexcite = vol-vol_;\\nindex = 0; maxind1 = 0; mean = 0;\\nloop (num_res, \\n  n = index*12;  omega=gmegabuf(n) * 2*pi/60;\\n  gmegabuf (n+1) *= 1- 0.25*dt; \\n  EC_Steps = int (10*dt*omega)+1; dt1 = dt/EC_Steps;\\n  ex = excite ;\\n  loop (EC_Steps, // Euler-Cauchy \\n    gmegabuf (n+1) += (ex - sqr(omega)*gmegabuf(n+2)) * dt1;\\n    gmegabuf (n+2) += gmegabuf(n+1) * dt1);\\n  beatcos  = gmegabuf(n+1);  beatsin = gmegabuf(n+2)*omega;\\n  quad     = sqrt (pow(beatsin,2) + pow(beatcos,2)) ;\\n   mean += quad/num_res;\\n  gmegabuf (n+3) = gmegabuf(n+3) *dec_m +  quad* (1-dec_m);\\n  if (gmegabuf(n+3) > gmegabuf(maxind1*12+3), maxind1 = index, 0); \\nindex += 1;);\\nquali = gmegabuf(maxind1*12+3)/mean;\\n\\nBPM   = minbpm * pow(maxbpm/minbpm,maxind1/num_res);\\nif (BPM>160, BPM/=2,0);\\ntrel1 += (BPM/60*pi+excite*cosb) * (maxvol>0.7)*dt;\\nq32 = trel1;\\n\\nspeed = (0.15 + dist_*0.25)* (1+avg)/q7*(0.34+vol_*0.34)*(q8+0.8);\\nds = ds * dec_s + (1-dec_s)*speed*.25*dt; \\nRotZ = 0.8*pow (sin(time/12),5);\\n\\n//Position \\nDirX= reg26; DirY= reg27; DirZ = reg28;\\nPosX += ds*DirX ; PosY += ds*DirY; PosZ += ds*DirZ; \\nq4 = PosX; q5 = PosY; q6 = PosZ;\\n\\nangchg = max(0,.4-dist_);\\nv1 = v1 * dec_m + (1-dec_m)* RotZ * ds;\\ndec = 1-3*dt;\\nv2p = v2p *dec + (1-dec)*(angchg*xslope + p2*0.02)*dt;\\nv3p = v3p *dec + (1-dec)*(angchg*yslope + p3*0.02)*dt ;\\nv2 = v2 *dec + (1-dec)* v2p;\\nv3 = v3 *dec + (1-dec)* v3p;\\np3 = sign(v3);\\np4 = sign(v2);\\n//push old RotMat\\nreg30 =reg20; reg31 =reg21; reg32 =reg22; \\nreg33 =reg23; reg34 =reg24; reg35 =reg25; \\nreg36 =reg26; reg37 =reg27; reg38 =reg28; \\n\\nn = 0; avg = 0;\\nloop (5,\\n  n = n+1;\\n  //new Rot. Mat for infinitesimal angles\\n  ran1 = rand(100)/100;\\n  ran2 = rand(100)/200-.25;\\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); \\n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\\n\\n  //pop old RotMat\\n  reg20 =reg30; reg21 =reg31; reg22 =reg32; \\n  reg23 =reg33; reg24 =reg34; reg25 =reg35; \\n  reg26 =reg36; reg27 =reg37; reg28 =reg38; \\n\\n  //Multiply new RotMat by old one\\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\\n\\n  reg20 =q20; reg21 =q21; reg22 =q22;\\n  reg23 =q23; reg24 =q24; reg25 =q25;\\n  reg26 =q26; reg27 =q27; reg28 =q28;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.002;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n//    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n//    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n//    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx = 1+2*((uvx/4+30.5 - int(uvx/4+30.5))-.5);\\n    uvy = 2+2*((uvy/4+30.5 - int(uvy/4+30.5))-.5);\\n    uvz = 3+2*((uvz/4+30.5 - int(uvz/4+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.1;\\n  ,(dist < 0.6)*(len > 30)));\\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\\n  avg = avg+abs(megabuf(n)/5);\\n); //end loop 5\\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\\n\\nxslope = min(max(8*(megabuf(1)-megabuf(3)),-2),2);\\nyslope = min(max(8*(megabuf(4)-megabuf(2)),-2),2);\\ndist_ = dist_*dec_m + (1-dec_m)*dist;\\n\\nq10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv\\nq14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + 1.0/255 + start*.0; \\nstart = start * .9;\\nreg52 = -v2; reg53 = v3;\\n//forward comp. of Rotation\\nwarp = 0.0; zoom = 1;  \\nrot = v1;\\n\\n//light ctrl\\nsinb = sin(trel1);\\ncosb = cos(trel1);\\n\\nbt1 = sinb*sinb_<0; bt2 = cosb*cosb_<0;\\n\\nif (bt1, b1x = rand(2)-1; b1y = rand(2)-1;,0);\\nif (bt2, b2x = rand(2)-1; b2y = rand(2)-1;,0);\\nsinb_=sinb; cosb_=cosb;\\n\\nbri = vol2*0.012*sqrt(100/bpm)+excite*0.01;\\nmov = sqrt (v3*v3+v2*v2)/dt; \\n\\nq1= b1x*abs(b1x);\\nq2= b1y*abs(b1y);\\n\\nq17 =b2x*0.4;\\nq18= b2y*0.4;\\n\\nlen = pow(q1,2)+ pow(q2,2);\\nq3 = pow(sinb,2)*bri * (1+len*4)* max(0,1-5*mov);\\nq19= pow(cosb,2)*bri*1.2;\\n\\nmonitor = q8;\\n//frei: q9, q11, q12, q13, q15, q29m q30, q31, q32","pixel_eqs_eel":"warp = 0.0; zoom = 1; \\ntx = tan((2*x-1)*0.9);\\nty = tan((2*y-1)*0.9);\\n\\ndx = reg52/q16* (1+0.5*abs(tx)); \\ndy = reg53/q16* (1+0.5*abs(ty)); \\n\\n\\ndx += reg53*ty*(x-0.5)*1; \\ndy += reg52*tx*(y-0.5)*1; \\n\\n//muss experimentell an tele angepasst werden; momentan 1.5 !!!","warp":"float sustain;\\nfloat pix;\\nvec3 mod1;\\nfloat xlat_mutabledist;\\nfloat xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\nvec3 xlat_mutableuv2;\\n shader_body { \\n  mat3 tmpvar_1;\\n  tmpvar_1[uint(0)].x = q20;\\n  tmpvar_1[uint(0)].y = q23;\\n  tmpvar_1[uint(0)].z = q26;\\n  tmpvar_1[1u].x = q21;\\n  tmpvar_1[1u].y = q24;\\n  tmpvar_1[1u].z = q27;\\n  tmpvar_1[2u].x = q22;\\n  tmpvar_1[2u].y = q25;\\n  tmpvar_1[2u].z = q28;\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  tmpvar_2.z = q6;\\n  sustain = (0.97 - q14);\\n  pix = (texsize.z * 2.0);\\n  mod1 = (rand_preset.xyz - 0.5);\\n  vec2 uv_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - 0.5);\\n  xlat_mutableuv1 = ((tmpvar_5 * aspect.xy) * q16);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_pw_main, uv);\\n  uv_3 = ((tmpvar_5 * (1.0 - \\n    (q10 / (1.0 - (tmpvar_6.z + (0.003921569 * tmpvar_6.y))))\\n  )) + 0.5);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\\n  xlat_mutabledist = tmpvar_7.x;\\n  if ((tmpvar_7.y > 0.16)) {\\n    vec4 nb2_8;\\n    vec4 nb_9;\\n    vec4 tmpvar_10;\\n    tmpvar_10 = texture (sampler_pw_main, (uv_3 + vec2(-(pix))));\\n    nb_9.x = (1.0 - (tmpvar_10.z + (0.003921569 * tmpvar_10.y)));\\n    vec4 tmpvar_11;\\n    tmpvar_11 = texture (sampler_pw_main, (uv_3 + (pix * vec2(1.0, -1.0))));\\n    nb_9.y = (1.0 - (tmpvar_11.z + (0.003921569 * tmpvar_11.y)));\\n    vec4 tmpvar_12;\\n    tmpvar_12 = texture (sampler_pw_main, (uv_3 + vec2(pix)));\\n    nb_9.z = (1.0 - (tmpvar_12.z + (0.003921569 * tmpvar_12.y)));\\n    vec4 tmpvar_13;\\n    tmpvar_13 = texture (sampler_pw_main, (uv_3 + (pix * vec2(-1.0, 1.0))));\\n    nb_9.w = (1.0 - (tmpvar_13.z + (0.003921569 * tmpvar_13.y)));\\n    vec4 tmpvar_14;\\n    tmpvar_14 = texture (sampler_pw_main, (uv_3 + (pix * vec2(0.0, -1.0))));\\n    nb2_8.x = (1.0 - (tmpvar_14.z + (0.003921569 * tmpvar_14.y)));\\n    vec4 tmpvar_15;\\n    tmpvar_15 = texture (sampler_pw_main, (uv_3 + (pix * vec2(1.0, 0.0))));\\n    nb2_8.y = (1.0 - (tmpvar_15.z + (0.003921569 * tmpvar_15.y)));\\n    vec4 tmpvar_16;\\n    tmpvar_16 = texture (sampler_pw_main, (uv_3 + (pix * vec2(0.0, 1.0))));\\n    nb2_8.z = (1.0 - (tmpvar_16.z + (0.003921569 * tmpvar_16.y)));\\n    vec4 tmpvar_17;\\n    tmpvar_17 = texture (sampler_pw_main, (uv_3 + (pix * vec2(-1.0, 0.0))));\\n    nb2_8.w = (1.0 - (tmpvar_17.z + (0.003921569 * tmpvar_17.y)));\\n    vec4 tmpvar_18;\\n    tmpvar_18 = min (nb_9, nb2_8);\\n    nb_9.zw = tmpvar_18.zw;\\n    nb_9.xy = min (tmpvar_18.xy, tmpvar_18.zw);\\n    xlat_mutabledist = ((min (nb_9.x, nb_9.y) + (\\n      (0.006 * (tmpvar_7.xyz - 0.5).x)\\n     * tmpvar_7.y)) - (q10 * 0.5));\\n  };\\n  float theta_19;\\n  theta_19 = (xlat_mutabledist * 1.35);\\n  float theta_20;\\n  theta_20 = (xlat_mutabledist * 1.35);\\n  vec3 tmpvar_21;\\n  tmpvar_21.xy = (xlat_mutableuv1 * ((\\n    sin(theta_19)\\n   / \\n    cos(theta_19)\\n  ) / 1.35));\\n  tmpvar_21.z = ((sin(theta_20) / cos(theta_20)) / 1.35);\\n  xlat_mutableuv2 = (((tmpvar_21 / q7) * tmpvar_1) + tmpvar_2);\\n  xlat_mutableuv2 = (((\\n    fract(((xlat_mutableuv2 / 4.0) + 0.5))\\n   - 0.5) * 2.0) + vec3(1.0, 2.0, 3.0));\\n  vec3 zz0_23;\\n  vec3 zz_24;\\n  zz_24 = xlat_mutableuv2;\\n  zz0_23 = (xlat_mutableuv2 + q8);\\n  for (int n_22 = 0; n_22 <= 8; n_22++) {\\n    zz_24 = ((2.0 * clamp (zz_24, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_24);\\n    zz_24 = (zz_24 * max ((1.0/(\\n      dot (zz_24, zz_24)\\n    )), 1.0));\\n    zz_24 = ((2.6 * zz_24) + zz0_23);\\n  };\\n  vec4 tmpvar_25;\\n  tmpvar_25.w = 0.0;\\n  tmpvar_25.xyz = zz_24;\\n  float tmpvar_26;\\n  tmpvar_26 = sqrt(dot (zz_24, zz_24));\\n  vec4 tmpvar_27;\\n  tmpvar_27.w = 0.0;\\n  tmpvar_27.xyz = mod1;\\n  xlat_mutablestruc = ((1.0 - (\\n    (1.4 * dot (tmpvar_25, tmpvar_27))\\n   / 40.0)) - (xlat_mutabledist * 0.3));\\n  if (((tmpvar_26 < 40.0) && (xlat_mutabledist > (0.04 * \\n    (1.0 - rad)\\n  )))) {\\n    ret_4.x = mix (xlat_mutablestruc, texture (sampler_main, uv_3).x, sustain);\\n    float x_28;\\n    x_28 = ((1.0 - xlat_mutabledist) * 255.0);\\n    float ip_29;\\n    ip_29 = float(int(x_28));\\n    vec2 tmpvar_30;\\n    tmpvar_30.x = (x_28 - ip_29);\\n    tmpvar_30.y = (ip_29 / 255.0);\\n    ret_4.yz = tmpvar_30;\\n  } else {\\n    ret_4 = ((texture (sampler_fc_main, uv_3) * sustain) - 0.003921569).xyz;\\n  };\\n  vec4 tmpvar_31;\\n  tmpvar_31.w = 1.0;\\n  tmpvar_31.xyz = ret_4;\\n  ret = tmpvar_31.xyz;\\n }","comp":"float xlat_mutablecross1;\\nvec2 xlat_mutabledz1;\\nfloat xlat_mutablerdist;\\nvec2 xlat_mutableuv0;\\nvec2 xlat_mutableuv4;\\nvec2 xlat_mutableuva;\\nvec2 xlat_mutableuvb;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q1;\\n  tmpvar_1.y = q2;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = q17;\\n  tmpvar_2.y = q18;\\n  vec2 uv_3;\\n  vec3 ret_4;\\n  uv_3 = (uv + (texsize.zw / 2.0));\\n  xlat_mutableuv0 = uv_3;\\n  vec2 uvi_5;\\n  uvi_5 = (uv_3 + vec2(0.002, 0.0));\\n  float tmpvar_6;\\n  tmpvar_6 = mix (((texture (sampler_blur1, uvi_5).xyz * scale1) + bias1).x, texture (sampler_main, uvi_5).x, 0.1);\\n  vec2 uvi_7;\\n  uvi_7 = (uv_3 - vec2(0.002, 0.0));\\n  float tmpvar_8;\\n  tmpvar_8 = mix (((texture (sampler_blur1, uvi_7).xyz * scale1) + bias1).x, texture (sampler_main, uvi_7).x, 0.1);\\n  xlat_mutabledz1.x = ((tmpvar_6 * float(\\n    (tmpvar_6 > 0.02)\\n  )) - (tmpvar_8 * float(\\n    (tmpvar_8 > 0.02)\\n  )));\\n  vec2 uvi_9;\\n  uvi_9 = (uv_3 + vec2(0.0, 0.002));\\n  float tmpvar_10;\\n  tmpvar_10 = mix (((texture (sampler_blur1, uvi_9).xyz * scale1) + bias1).x, texture (sampler_main, uvi_9).x, 0.1);\\n  vec2 uvi_11;\\n  uvi_11 = (uv_3 - vec2(0.0, 0.002));\\n  float tmpvar_12;\\n  tmpvar_12 = mix (((texture (sampler_blur1, uvi_11).xyz * scale1) + bias1).x, texture (sampler_main, uvi_11).x, 0.1);\\n  xlat_mutabledz1.y = ((tmpvar_10 * float(\\n    (tmpvar_10 > 0.02)\\n  )) - (tmpvar_12 * float(\\n    (tmpvar_12 > 0.02)\\n  )));\\n  uv_3 = (uv_3 + (xlat_mutabledz1 * 0.26));\\n  xlat_mutablerdist = ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1).z;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 0.0;\\n  tmpvar_13.xyz = texture (sampler_noise_hq, vec2(((xlat_mutablerdist * 0.05) + (time * 0.02)))).xyz;\\n  vec4 tmpvar_14;\\n  tmpvar_14 = mix (tmpvar_13, roam_sin, vec4(0.5, 0.5, 0.5, 0.5));\\n  xlat_mutableuv4 = (uv_3 - 0.4);\\n  xlat_mutableuva = ((xlat_mutableuv4 - tmpvar_1) - ((\\n    ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1)\\n  .x * 0.4) * float(\\n    (xlat_mutablerdist > 0.2)\\n  )));\\n  xlat_mutableuvb = ((xlat_mutableuv4 - tmpvar_2) - ((\\n    (texture (sampler_blur1, uv_3).xyz * scale1)\\n   + bias1).x * 0.4));\\n  float angle_15;\\n  float tmpvar_16;\\n  tmpvar_16 = abs(xlat_mutableuva.x);\\n  if ((xlat_mutableuva.y >= 0.0)) {\\n    angle_15 = (1.0 - ((xlat_mutableuva.y - tmpvar_16) / (xlat_mutableuva.y + tmpvar_16)));\\n  } else {\\n    angle_15 = (3.0 - ((xlat_mutableuva.y + tmpvar_16) / (tmpvar_16 - xlat_mutableuva.y)));\\n  };\\n  float tmpvar_17;\\n  if ((xlat_mutableuva.x < 0.0)) {\\n    tmpvar_17 = -(angle_15);\\n  } else {\\n    tmpvar_17 = angle_15;\\n  };\\n  xlat_mutablecross1 = ((pow (\\n    sin((3.141593 * (tmpvar_17 + (5.1 * q20))))\\n  , 1.5) + (xlat_mutablerdist / 2.0)) + 0.1);\\n  vec3 tmpvar_18;\\n  tmpvar_18 = vec3((((1.0/(\\n    dot (xlat_mutableuva, xlat_mutableuva)\\n  )) / xlat_mutablecross1) * q3));\\n  vec3 tmpvar_19;\\n  tmpvar_19 = vec3(((1.0/(dot (xlat_mutableuvb, xlat_mutableuvb))) * q19));\\n  ret_4 = (clamp ((1.0 - \\n    (2.0 * xlat_mutablerdist)\\n  ), 0.0, 1.0) * ((\\n    (tmpvar_18 * tmpvar_14.xyz)\\n   + \\n    (tmpvar_19 * (1.0 - tmpvar_14.xyz))\\n  ) + 0.1));\\n  ret_4 = (ret_4 + (clamp (\\n    (2.0 * xlat_mutablerdist)\\n  , 0.0, 1.0) * (\\n    (tmpvar_18 * tmpvar_14.zyx)\\n   + \\n    (tmpvar_19 * (1.0 - tmpvar_14.zyx))\\n  )));\\n  ret_4 = (ret_4 + ((\\n    (texture (sampler_blur1, xlat_mutableuv0).xyz * scale1)\\n   + bias1).x * 0.05));\\n  ret_4 = (1.0 - exp(-(ret_4)));\\n  vec4 tmpvar_20;\\n  tmpvar_20.w = 1.0;\\n  tmpvar_20.xyz = ret_4;\\n  ret = tmpvar_20.xyz;\\n }"}')},"./presets/converted/martin - fruit machine.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.169162,"wave_smoothing":0,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b2x":0.3,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":53,"rad":0.05408,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.2,"g":0.7,"g2":0,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nx = .5;\\ny = .5;\\na = q24; \\na2 = 0;\\n//a = 1; \\na = 0;\\nrad0 = bnot(q24) * rad0 + rand(10)/50*q24;\\nrad = rad0;\\nb = 0; r = rand(10)/10; g = 1;\\na2 = q24;"},{"baseVals":{"enabled":1,"sides":44,"textured":1,"x":0.7,"rad":0.2173,"tex_zoom":3.277448,"g":1,"b":0.5,"r2":1,"b2":1,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0},"init_eqs_eel":"","frame_eqs_eel":"textured = 1;\\nrot0 = rot0 + 1/fps * q1;\\n\\n\\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/300);\\nrad = rad0;\\n\\n\\nx =  posx;\\ny =  posy;\\nang = rot0;"},{"baseVals":{"enabled":1,"sides":63,"x":0.503,"rad":0.038857,"tex_zoom":2.2233,"g":0.1,"r2":1,"b2":1,"a2":0.7,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"textured = 1;\\nrot0 = rot0 + .1/fps * q2;\\n\\n\\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/400);\\nrad = rad0;\\n\\n\\nx =  posx+q26;\\ny =  posy;\\nang = rot0;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"usedots":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\\nk2 = bnot (k1);\\nxi = value1*k2 + xi*(1-k2);\\nyi = value2*(1-k2) + yi*k2;\\n\\ndx = dx*.99 + xi;\\ndy = dy*.99 + yi;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\na = q22/8; \\na = min(a,.4);"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.02,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\n\\nbeat = bass+mid+treb;\\nbeat = beat*beat;\\n\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2*avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att + 3;\\nq27 = index + 1;\\nq28 = index2;\\nq29 = index2;\\nmonitor = q29;\\nk1 =  is_\\nbeat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq5 = cos(time/17);\\nq6 = sin(time/17);\\nq7 = -q2;\\nq8 = q1;\\n\\n\\nds = ds*dec_med + q24*(1-dec_med);\\nq25 = q24;\\n//q25 = above(ds,.5);\\n\\nq10 = q22+3;\\n\\nt_rel = time*8;\\n//q25 = below((t_rel)-int(t_rel),.2);\\n\\n\\np3 = p3*dec_med + (1-dec_med) * (100*index + .0*q26);\\nq30 = p3 ;\\n\\np4 = dec_med*p4 + (1-dec_med)*q27;\\nq31 = p4;\\n\\n\\nzoom = 1.1 + q1*.2;\\nwarp =0;\\nob_size = .01;\\nob_r = .9;\\nob_g = 1;\\nob_b = 0;\\nob_a = .2*sin(time/7);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_3;\\n  tmpvar_3 = (sqrt(dot (tmpvar_2, tmpvar_2)) + (rand_frame * 13.0)).x;\\n  uv_1 = (uv + (clamp (\\n    ((sin(tmpvar_3) / cos(tmpvar_3)) / normalize(tmpvar_2))\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 16.0));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ((q24 * (\\n    ((texture (sampler_main, uv_1).xyz + ((0.1 * vec3(\\n      ((q1 * cos((uv_1.x * 44.0))) - cos((uv_1.y * 82.0)))\\n    )) * (1.0 + texture (sampler_noise_lq, \\n      ((uv_1 / 16.0) + (time / 100.0))\\n    )).xyz)) * 0.98)\\n   - 0.025)) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_4.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv2_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_2)).xyz - texture (sampler_main, (uv - tmpvar_2)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\\n  uv2_1 = (uv - 0.5);\\n  vec2 tmpvar_4;\\n  tmpvar_4.y = 0.0;\\n  float tmpvar_5;\\n  tmpvar_5 = (time / 8.0);\\n  tmpvar_4.x = tmpvar_5;\\n  float tmpvar_6;\\n  tmpvar_6 = (q27 * 2.0);\\n  xlat_mutableuv3 = (((tmpvar_6 * uv2_1) * 0.1) + tmpvar_4);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_7;\\n  tmpvar_7 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  vec4 tmpvar_8;\\n  tmpvar_8 = (1.0 + roam_cos);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_7)) + ((0.45 * \\n    dot (vec3(tmpvar_7), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_8).xyz);\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\\n  vec2 tmpvar_9;\\n  tmpvar_9.y = 0.0;\\n  tmpvar_9.x = tmpvar_5;\\n  xlat_mutableuv3 = (((tmpvar_6 * uv2_1) * 0.1) + tmpvar_9);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_10;\\n  tmpvar_10 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_10)) + ((0.45 * \\n    dot (vec3(tmpvar_10), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_8).xyz);\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = (xlat_mutableret1 + clamp ((\\n    (texture (sampler_main, uv).xyz * 4.0)\\n   * \\n    (0.2 + xlat_mutableret1)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_11.xyz;\\n }"}')},"./presets/converted/martin - glass corridor.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_dots":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":1.740724,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0.99,"ob_size":0,"ob_r":1,"ob_b":1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.71,"rad":0.657209,"tex_zoom":0.391734,"g":1,"b":1,"a":0.8,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":1.264578,"tex_ang":1.4451,"tex_zoom":1.493308,"r":0.7,"g":0.4,"a":0.01,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"r2":1,"b2":1,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\\ny = rand(10)/10;\\n\\nr = 0;\\ng = 0;\\nb = 0;\\n\\nr2= .5;\\nb2 = 0;\\ng2 = 0;\\na = 0; a2 = 1;\\nrad = bass_att/30;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"thick":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.5,"a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%2;\\n\\nxi = value1*k1 + xi*(1-k1);\\nyi = value2*(1-k1) + yi*k1;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\n\\na = bass + mid + treb ;\\na = a/10 * sqrt(xi*xi+yi*yi);"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x0 = .5 + (-1) * q1/1;\\ny0 = .0 - (-1)* .5;\\n\\n//x0 = .5; y0 = .5;\\n\\nk1 = int(100.0*sample);\\nk2 = int(100.0*sample+1);\\nk1 = k1%2;\\nf1 = rand(100)/200-.25;\\nf2 = rand(100)/200-.25;\\n\\nx = x0 + k1* f1;;\\ny = y0 + k1* f2;\\na = k2%2 /4;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"p3 = 0;\\nt_rel = 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att+1;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3 * 3.14159265359/2;\\n\\n\\nq27 = 8-index;\\nq28 = index2+1;\\n\\n//q28 = sin(time)+1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nt_rel = t_rel + .02*30/fps*q1*q1;\\n\\nq5 = cos(t_rel);\\nq6 = sin(t_rel);\\nq7 = -q6;\\nq8 = q5;\\n\\nmovez = movez + .02*30/fps / ((1.4-q5)*(1.4-q5));\\nq30 = movez;\\n\\n\\nzoom = 1.0;","pixel_eqs_eel":"dx = 0*q28/8;","warp":"vec3 xlat_mutablenoise;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\n shader_body { \\n  float z_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qb.xy;\\n  tmpvar_2[1u] = _qb.zw;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv * tmpvar_2) - 0.5);\\n  float tmpvar_4;\\n  tmpvar_4 = (0.4 / abs(tmpvar_3.y));\\n  xlat_mutablers.x = (tmpvar_3.x * tmpvar_4);\\n  xlat_mutablers.y = (tmpvar_4 + q30);\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_5.xyz * vec3(greaterThanEqual (tmpvar_5.xyz, vec3(0.9, 0.9, 0.9))));\\n  xlat_mutablenoise = (xlat_mutablenoise * (1.0 + (0.5 * \\n    (dot (texture (sampler_noise_hq, (16.0 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)\\n  )));\\n  xlat_mutableret1 = xlat_mutablenoise;\\n  z_1 = (1.2 / abs(tmpvar_3.y));\\n  xlat_mutablers.x = (tmpvar_3.x * z_1);\\n  xlat_mutablers.y = (z_1 + q30);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_6.xyz * vec3(greaterThanEqual (tmpvar_6.xyz, vec3(0.9, 0.9, 0.9))));\\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\\n  z_1 = (0.4 / abs(tmpvar_3.x));\\n  xlat_mutablers.y = (tmpvar_3.y * z_1);\\n  xlat_mutablers.x = (z_1 + q30);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_7.xyz * vec3(greaterThanEqual (tmpvar_7.xyz, vec3(0.9, 0.9, 0.9))));\\n  xlat_mutablenoise = (xlat_mutablenoise * (1.0 + (0.5 * \\n    (dot (texture (sampler_noise_hq, (16.0 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)\\n  )));\\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\\n  z_1 = (1.2 / abs(tmpvar_3.x));\\n  xlat_mutablers.y = (tmpvar_3.y * z_1);\\n  xlat_mutablers.x = (z_1 + q30);\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_8.xyz * vec3(greaterThanEqual (tmpvar_8.xyz, vec3(0.9, 0.9, 0.9))));\\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = xlat_mutableret1;\\n  ret = tmpvar_9.xyz;\\n }","comp":"uniform sampler2D sampler_clouds2;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 uv1_2;\\n  uv_1 = (uv * aspect.xy);\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (dot (texture (sampler_main, (uv_1 - tmpvar_3)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv_1 + tmpvar_3)).xyz, vec3(0.32, 0.49, 0.29)));\\n  tmpvar_5.y = (dot (texture (sampler_main, (uv_1 - tmpvar_4)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv_1 + tmpvar_4)).xyz, vec3(0.32, 0.49, 0.29)));\\n  uv1_2 = ((0.3 * sin(\\n    ((uv_1 + (0.02 * time)) * 6.0)\\n  )) + (0.2 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_clouds2, (uv_orig + tmpvar_5));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (((-2.0 * \\n    (0.1 * texture (sampler_main, uv_1))\\n  .xyz) + (\\n    clamp (((0.004 * q26) / sqrt(dot (uv1_2, uv1_2))), 0.0, 1.0)\\n   * vec3(1.0, 0.8, 0.4))) + (0.4 * (tmpvar_6.xyz + \\n    (dot (tmpvar_6.xyz, vec3(0.32, 0.49, 0.29)) - 0.7)\\n  )));\\n  ret = tmpvar_7.xyz;\\n }"}')},"./presets/converted/martin - mandelbox explorer - high speed demo version.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.958,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.05,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":25.6,"mv_y":9.6,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.09,"y":0.9,"rad":0.22437,"tex_zoom":1.76002,"r2":1,"g2":0,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":6.19589,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"additive":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.49981,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"thick":1,"additive":1,"scaling":3.91581,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//******** INITIALIZATION *********\\n//---------- some global vars, do not change -------------\\navg = 0.01;\\nq7 = .25; //MyZoom\\nq8 =  rand(2.0)-1.0; //fractal modifier\\n//q8 = 1; //#\\nq16 = 1 + rand(2); //Tele ; rather fish eye\\n//q16 = 1; //#\\nq18 = rand(0.8)+.1; //brightness balance back/front\\nq30 = 1; //logarithmic Z-Dist storage; unused\\nq31 =128;\\nstart = 1; travel = 0; RotZ = 0; look = 0; slow = 0; t0 = time+3; lampx = .5; lampy = .5;\\ncran0 = rand(1);\\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; );\\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; );\\ntrelx = 0;  trely = 0; trelz = 0;\\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\\n\\n//Find random starting point\\nwhile (exec2(\\n  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;\\n  PosX = rand(5)-2;   PosY = rand(5)-2;   PosZ = rand(5)-2;\\n\\n//  PosX = 3.3; PosY = 2; PosZ = -2; ran1 = 0; ran2 = 0; ran3 = 0; //#\\n\\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3);\\n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\\n\\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.001;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0;\\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0;\\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0;\\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.05;\\n  ,(dist < 0.6)*(len > 30)));\\n,(dist < .06))); //end while","frame_eqs_eel":"fps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25));\\ndec_s = 1-.06*30/fps_;\\nbeat = (time >  t0+3); t0 = if(beat, time, t0);\\n\\nspeed = min(0.2,dist_-.02) * (1+2*avg) *(1-slow*.0)*.7/q7; //#\\nds = ds * dec_s + (1-dec_s)*speed*.25/fps_;\\nRotZ = if (RotZ==0,beat*(rand(100)<20*travel)*(rand(10)/10-.3),\\n                   bnot(beat*(rand(100)<30))*RotZ);\\nslow = if (bnot(slow), beat*(rand(1000*avg)<6), bnot(beat*(rand(100)<50)));\\nlook = if (bnot(look), beat*(rand(1000*speed)<12), bnot(beat*(rand(100)<50)));\\n\\n//Lamp View\\nlx = if (beat,rand(150)/200+.15,lx);\\nly = if (beat,rand(150)/200+.15,ly);\\nlampx = lampx * dec_s + (1-dec_s)*if (look,lx,0.5);\\nlampy = lampy * dec_s + (1-dec_s)*if (look,ly,0.5);\\nq1 = lampx; q2 = lampy;\\n\\n//Position\\nDirX= reg26; DirY= reg27; DirZ = reg28;\\nPosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ;\\nq4 = PosX; q5 = PosY; q6 = PosZ;\\n\\nangchg = (.2-dist_)*(dist_ < .2)*2;\\ntravel = if (angchg > 0,0,travel+ds);\\nv1 = v1 * dec_s + (1-dec_s)* RotZ * ds;\\nv2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;\\nv3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + 2*v1*sin(time*.1));\\n//v2 = .008;\\n//push old RotMat\\nreg30 =reg20; reg31 =reg21; reg32 =reg22;\\nreg33 =reg23; reg34 =reg24; reg35 =reg25;\\nreg36 =reg26; reg37 =reg27; reg38 =reg28;\\n\\nn = 0; avg = 0;\\nloop (5,\\n  n = n+1;\\n  //new Rot. Mat for infinitesimal angles\\n  ran1 = rand(100)/100;\\n  ran2 = rand(100)/200-.25;\\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx);\\n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\\n\\n  //pop old RotMat\\n  reg20 =reg30; reg21 =reg31; reg22 =reg32;\\n  reg23 =reg33; reg24 =reg34; reg25 =reg35;\\n  reg26 =reg36; reg27 =reg37; reg28 =reg38;\\n\\n  //Multiply new RotMat by old one\\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\\n\\n  reg20 =q20; reg21 =q21; reg22 =q22;\\n  reg23 =q23; reg24 =q24; reg25 =q25;\\n  reg26 =q26; reg27 =q27; reg28 =q28;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.002;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0;\\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0;\\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0;\\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.1;\\n  ,(dist < 0.6)*(len > 30)));\\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\\n  avg = avg+abs(megabuf(n)/5);\\n); //end loop 5\\n\\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\\n\\nxslope = min(max(2/avg*(megabuf(1)-megabuf(3)),-3),3);\\nyslope = min(max(2/avg*(megabuf(4)-megabuf(2)),-3),3);\\nmonitor = avg;\\ndist_ = dist_*dec_s + (1-dec_s)*dist;\\n\\nq10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv\\nq14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + 1.0/255 + start*.05;\\nq19 = .6 + .4*sin(time*.02+cran0*6); //brightness backgd\\nstart = start * .9;\\nq11 = v1; q12 = v2; q13 = v3;\\n//forward comp. of Rotation\\nmonitor = q16;","pixel_eqs_eel":"warp = 0.0; zoom = 1; dx = -q12/q16*(1+0*pow(x-.5,2)); dy = q13/q16*(1+0*pow(y-.5,2)); rot =q11;","warp":"float sustain;\\nfloat xlat_mutabledist;\\nfloat xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\nvec3 xlat_mutableuv2;\\n shader_body { \\n  mat3 tmpvar_1;\\n  tmpvar_1[uint(0)].x = q20;\\n  tmpvar_1[uint(0)].y = q23;\\n  tmpvar_1[uint(0)].z = q26;\\n  tmpvar_1[1u].x = q21;\\n  tmpvar_1[1u].y = q24;\\n  tmpvar_1[1u].z = q27;\\n  tmpvar_1[2u].x = q22;\\n  tmpvar_1[2u].y = q25;\\n  tmpvar_1[2u].z = q28;\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  tmpvar_2.z = q6;\\n  sustain = (0.98 - q14);\\n  vec2 uv_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - 0.5);\\n  xlat_mutableuv1 = ((tmpvar_5 * aspect.xy) * q16);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_pc_main, uv);\\n  uv_3 = ((tmpvar_5 * (1.0 - \\n    (q10 / (1.0 - ((tmpvar_6.z + \\n      (0.003921569 * tmpvar_6.y)\\n    ) + (q10 * 0.7))))\\n  )) + 0.5);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\\n  xlat_mutabledist = tmpvar_7.x;\\n  if ((tmpvar_7.y > 0.2)) {\\n    vec3 tmpvar_8;\\n    tmpvar_8 = (tmpvar_7.xyz - vec3(0.4, 0.5, 0.5));\\n    vec2 uvi_9;\\n    uvi_9 = ((tmpvar_8.zy * 0.003) + uv_3);\\n    vec2 pix_10;\\n    vec4 nb2_11;\\n    vec4 nb_12;\\n    vec2 x_13;\\n    x_13 = (uvi_9 - 0.5);\\n    pix_10 = (texsize.zw * (1.0 + (\\n      sqrt(dot (x_13, x_13))\\n     * 8.0)));\\n    float tmpvar_14;\\n    tmpvar_14 = (q10 * 0.7);\\n    vec4 tmpvar_15;\\n    tmpvar_15 = texture (sampler_pc_main, (uvi_9 - pix_10));\\n    nb_12.x = (1.0 - ((tmpvar_15.z + \\n      (0.003921569 * tmpvar_15.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_16;\\n    tmpvar_16 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(1.0, -1.0))));\\n    nb_12.y = (1.0 - ((tmpvar_16.z + \\n      (0.003921569 * tmpvar_16.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_17;\\n    tmpvar_17 = texture (sampler_pc_main, (uvi_9 + pix_10));\\n    nb_12.z = (1.0 - ((tmpvar_17.z + \\n      (0.003921569 * tmpvar_17.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_18;\\n    tmpvar_18 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(-1.0, 1.0))));\\n    nb_12.w = (1.0 - ((tmpvar_18.z + \\n      (0.003921569 * tmpvar_18.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_19;\\n    tmpvar_19 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(0.0, -1.0))));\\n    nb2_11.x = (1.0 - ((tmpvar_19.z + \\n      (0.003921569 * tmpvar_19.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_20;\\n    tmpvar_20 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(1.0, 0.0))));\\n    nb2_11.y = (1.0 - ((tmpvar_20.z + \\n      (0.003921569 * tmpvar_20.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_21;\\n    tmpvar_21 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(0.0, 1.0))));\\n    nb2_11.z = (1.0 - ((tmpvar_21.z + \\n      (0.003921569 * tmpvar_21.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_22;\\n    tmpvar_22 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(-1.0, 0.0))));\\n    nb2_11.w = (1.0 - ((tmpvar_22.z + \\n      (0.003921569 * tmpvar_22.y)\\n    ) + tmpvar_14));\\n    vec4 tmpvar_23;\\n    tmpvar_23 = min (nb_12, nb2_11);\\n    nb_12.zw = tmpvar_23.zw;\\n    nb_12.xy = min (tmpvar_23.xy, tmpvar_23.zw);\\n    xlat_mutabledist = (min (nb_12.x, nb_12.y) + ((0.008 * tmpvar_8.x) * abs(tmpvar_8.y)));\\n  };\\n  vec4 tmpvar_24;\\n  tmpvar_24 = texture (sampler_pc_main, uv_3);\\n  float tmpvar_25;\\n  tmpvar_25 = min (xlat_mutabledist, (1.0 - (\\n    (tmpvar_24.z + (0.003921569 * tmpvar_24.y))\\n   + \\n    (q10 * 0.7)\\n  )));\\n  xlat_mutabledist = tmpvar_25;\\n  float tmpvar_26;\\n  tmpvar_26 = (tmpvar_25 + pow (tmpvar_25, 3.0));\\n  vec3 tmpvar_27;\\n  tmpvar_27.xy = (xlat_mutableuv1 * tmpvar_26);\\n  tmpvar_27.z = tmpvar_26;\\n  xlat_mutableuv2 = (((tmpvar_27 / q7) * tmpvar_1) + tmpvar_2);\\n  xlat_mutableuv2 = ((fract(\\n    ((xlat_mutableuv2 / 8.0) + 0.5)\\n  ) - 0.5) * 8.0);\\n  float li_28;\\n  vec3 zz0_29;\\n  vec3 zz_30;\\n  zz0_29 = (xlat_mutableuv2 + q8);\\n  li_28 = 0.0;\\n  zz_30 = ((2.0 * clamp (xlat_mutableuv2, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - xlat_mutableuv2);\\n  float tmpvar_31;\\n  tmpvar_31 = dot (zz_30, zz_30);\\n  if ((tmpvar_31 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_31 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_31);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_32;\\n  tmpvar_32 = dot (zz_30, zz_30);\\n  if ((tmpvar_32 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_32 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_32);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_33;\\n  tmpvar_33 = dot (zz_30, zz_30);\\n  if ((tmpvar_33 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_33 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_33);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_34;\\n  tmpvar_34 = dot (zz_30, zz_30);\\n  if ((tmpvar_34 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_34 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_34);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_35;\\n  tmpvar_35 = dot (zz_30, zz_30);\\n  if ((tmpvar_35 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_35 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_35);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_36;\\n  tmpvar_36 = dot (zz_30, zz_30);\\n  if ((tmpvar_36 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_36 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_36);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_37;\\n  tmpvar_37 = dot (zz_30, zz_30);\\n  if ((tmpvar_37 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_37 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_37);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\\n  float tmpvar_38;\\n  tmpvar_38 = dot (zz_30, zz_30);\\n  if ((tmpvar_38 <= 0.25)) {\\n    zz_30 = (zz_30 * 4.0);\\n    li_28 = 24.0;\\n  } else {\\n    if ((tmpvar_38 <= 1.0)) {\\n      zz_30 = (zz_30 / tmpvar_38);\\n    };\\n  };\\n  zz_30 = ((2.6 * zz_30) + zz0_29);\\n  vec4 tmpvar_39;\\n  tmpvar_39.xyz = zz_30;\\n  tmpvar_39.w = li_28;\\n  float tmpvar_40;\\n  tmpvar_40 = sqrt(dot (zz_30, zz_30));\\n  xlat_mutablestruc = (sqrt(dot (tmpvar_39.xyw, tmpvar_39.xyw)) / 24.0);\\n  vec4 tmpvar_41;\\n  tmpvar_41 = texture (sampler_pc_main, uv_3);\\n  float tmpvar_42;\\n  float tmpvar_43;\\n  tmpvar_43 = (q10 * 0.7);\\n  tmpvar_42 = ((log(\\n    (1.0 + (tmpvar_40 / 24.0))\\n  ) * 0.02) * (1.0 - (1.0 - \\n    ((tmpvar_41.z + (0.003921569 * tmpvar_41.y)) + tmpvar_43)\\n  )));\\n  float tmpvar_44;\\n  vec4 tmpvar_45;\\n  tmpvar_45 = texture (sampler_pc_main, uv_3);\\n  tmpvar_44 = (1.0 - ((tmpvar_45.z + \\n    (0.003921569 * tmpvar_45.y)\\n  ) + tmpvar_43));\\n  if ((((tmpvar_25 <= tmpvar_44) && (tmpvar_40 < 24.0)) && (tmpvar_25 > 0.005))) {\\n    ret_4.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * mix (texture (sampler_main, uv_3).xyz, \\n      ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1)\\n    , vec3(\\n      (q14 * 4.0)\\n    )).x));\\n    float x_46;\\n    x_46 = ((1.0 - tmpvar_25) * 255.0);\\n    float ip_47;\\n    ip_47 = float(int(x_46));\\n    vec2 tmpvar_48;\\n    tmpvar_48.x = (x_46 - ip_47);\\n    tmpvar_48.y = (ip_47 / 255.0);\\n    ret_4.yz = tmpvar_48;\\n  } else {\\n    vec3 tmpvar_49;\\n    tmpvar_49.y = 0.0;\\n    tmpvar_49.x = sustain;\\n    tmpvar_49.z = (1.0 - tmpvar_42);\\n    vec3 tmpvar_50;\\n    tmpvar_50.xy = vec2(0.003921569, 0.0);\\n    tmpvar_50.z = (q14 / 6.0);\\n    ret_4 = ((texture (sampler_fc_main, uv_3).xyz * tmpvar_49) - tmpvar_50);\\n  };\\n  vec4 tmpvar_51;\\n  tmpvar_51.w = 1.0;\\n  tmpvar_51.xyz = ret_4;\\n  ret = tmpvar_51.xyz;\\n }","comp":" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1.x = q4;\\n  tmpvar_1.y = q5;\\n  tmpvar_1.z = q6;\\n  mat3 tmpvar_2;\\n  tmpvar_2[uint(0)].x = q20;\\n  tmpvar_2[uint(0)].y = q23;\\n  tmpvar_2[uint(0)].z = q26;\\n  tmpvar_2[1u].x = q21;\\n  tmpvar_2[1u].y = q24;\\n  tmpvar_2[1u].z = q27;\\n  tmpvar_2[2u].x = q22;\\n  tmpvar_2[2u].y = q25;\\n  tmpvar_2[2u].z = q28;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q1;\\n  tmpvar_3.y = q2;\\n  vec2 uv_4;\\n  vec3 ret_5;\\n  uv_4 = (((uv - 0.5) * 0.9) + 0.5);\\n  vec3 tmpvar_6;\\n  tmpvar_6.xy = ((uv_4 - 0.5) * min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - \\n    ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2)\\n  .z)));\\n  tmpvar_6.z = min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - (\\n    (texture (sampler_blur2, uv_4).xyz * scale2)\\n   + bias2).z));\\n  float tmpvar_7;\\n  tmpvar_7 = clamp ((abs(\\n    ((1.0 - ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2).z) - clamp ((1.0 - (\\n      (texture (sampler_blur2, tmpvar_3).xyz * scale2)\\n     + bias2).z), 0.1, 0.4))\\n  ) + 0.2), 0.0, 1.0);\\n  float tmpvar_8;\\n  tmpvar_8 = clamp (((1.0 - \\n    exp(-(((texture (sampler_blur1, uv_4).xyz * scale1) + bias1).x))\\n  ) - 0.2), 0.0, 1.0);\\n  ret_5 = ((mix (texture (sampler_main, uv_4).xyz, \\n    ((texture (sampler_blur1, uv_4).xyz * scale1) + bias1)\\n  , vec3(tmpvar_7)).x * (0.2 + \\n    ((1.0 - tmpvar_7) * (1.0 - min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - \\n      ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2)\\n    .z))))\\n  )) * (1.0 + (0.5 * \\n    sin((((tmpvar_6 / q7) * tmpvar_2) + tmpvar_1))\\n  )));\\n  vec3 tmpvar_9;\\n  tmpvar_9.xy = vec2(0.0, 1.0);\\n  tmpvar_9.z = (tmpvar_8 * 3.0);\\n  ret_5 = (mix (ret_5, tmpvar_9, vec3(tmpvar_8)) + ((\\n    pow ((1.0 - mix (texture (sampler_main, uv_4).xyz, (\\n      (texture (sampler_blur1, uv_4).xyz * scale1)\\n     + bias1), vec3(0.8, 0.8, 0.8)).z), 3.0)\\n   * \\n    (0.5 + (0.5 * slow_roam_cos))\\n  ) * q19).xyz);\\n  ret_5 = (1.0 - exp((-2.0 * ret_5)));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_5;\\n  ret = tmpvar_10.xyz;\\n }"}')},"./presets/converted/martin - mucus cervix.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.958178,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"ob_r":0.3999,"ob_a":0.2,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.5,"g":1,"b":0.9,"r2":0.83,"g2":0.93,"b2":0.8,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/3;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3);\\n\\n\\n\\ncent = sqrt((x-.5)*(x-.5)+(y-.5)*(y-.5));\\n\\nrad = .1*cent;\\na = .8;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24;\\n\\n\\nx0 = x0*bnot(trig) + trig*(.5+ rand(100)/200); \\ny0 = y0*bnot(trig) + trig*(.5+ rand(100)/200); \\n\\n\\nx0 = x0 + .1*q1*(3+q26)/fps;\\ny0 = y0 + .1*q2*(3+q26)/fps;\\n\\nx0 = x0 - int(x0);\\ny0 = y0 - int(y0);\\n\\ntex_ang = time;\\ntex_zoom = q1;\\nang = time/100*q2;\\nx = x0; y = y0;\\nrad0 = rad0*bnot(trig) + trig*(.04+rand(100)/1000);\\nrad = rad0;\\n\\n\\nr0 = bnot(trig)*r0 + trig * rand(10)/10;\\ng0 = bnot(trig)*g0 + trig * rand(10)/10;\\nb0 = bnot(trig)*b0 + trig * rand(10)/10;\\n\\nr = r0; b = b0; g = g0;\\nr2 = 0; b2 = 0; g2 = 0;\\na= 1; a2 = .3; "},{"baseVals":{"sides":44,"additive":1,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(50)/50;\\ny = .5 - 0*rand(15)/200;\\n\\nr = .4;\\ng = .6;\\nb = 1;\\nr2 = r;\\ng2 = g;\\nb2 = b;\\n\\na = min(q21/2 ,.9);\\nrad = a * (.1+abs(x-.5))/2 ;"},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.499805,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"rad = q2+.02\\n;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"thick":1,"additive":1,"scaling":3.915805,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"\\nx = sample;\\ny = value1 * rand(50)/100 * abs(sample-.5)+ .49;\\n\\na = q26/4 * (.2 + abs(sample-.5)); "},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq11 = min(q22,3);\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = 8-index;\\nq28 = index2;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nzoom = 1.0 + .02*q1;\\nrot = .01*q2;\\ndx = .0*index;\\n\\nwave_a = 0;","pixel_eqs_eel":"","warp":"float xlat_mutabledx;\\nfloat xlat_mutabledy;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutablezz;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 crisp_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.w;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.z;\\n  xlat_mutablezz = ((uv * texsize.xy) * 0.01);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (cos((xlat_mutablezz.y * q1)) * sin(-(xlat_mutablezz.y)));\\n  tmpvar_5.y = (sin(xlat_mutablezz.x) * cos((xlat_mutablezz.y * q2)));\\n  uv_1 = (uv - ((tmpvar_5 * texsize.zw) * (8.0 + \\n    (6.0 * q11)\\n  )));\\n  xlat_mutableuv2 = (((uv_1 / 2.0) * q27) / 4.0);\\n  xlat_mutabledx = dot ((texture (sampler_main, (xlat_mutableuv2 + tmpvar_3)).xyz - texture (sampler_main, (xlat_mutableuv2 - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledy = dot ((texture (sampler_main, (xlat_mutableuv2 + tmpvar_4)).xyz - texture (sampler_main, (xlat_mutableuv2 - tmpvar_4)).xyz), vec3(0.32, 0.49, 0.29));\\n  float tmpvar_6;\\n  tmpvar_6 = (0.15 + (0.1 * q28));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (xlat_mutableuv2 + (time / 100.0));\\n  xlat_mutabledx = (xlat_mutabledx + (tmpvar_6 * (texture (sampler_noise_hq, tmpvar_7).x - 0.5)));\\n  xlat_mutabledy = (xlat_mutabledy + (tmpvar_6 * (texture (sampler_noise_hq, tmpvar_7).y - 0.5)));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = xlat_mutabledx;\\n  tmpvar_8.y = xlat_mutabledy;\\n  xlat_mutablezz = tmpvar_8;\\n  crisp_2 = (texture (sampler_main, (uv_1 + (tmpvar_8 * 0.04))).xyz + texture (sampler_main, uv_1).xyz);\\n  crisp_2 = (crisp_2 * 0.5);\\n  crisp_2 = (crisp_2 + ((0.05 * \\n    (0.9 + (0.1 * roam_cos))\\n  .xyz) - (\\n    sqrt(dot (tmpvar_8, tmpvar_8))\\n   * 0.3)));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ((crisp_2 * 0.97) - 0.015);\\n  ret = tmpvar_9.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv2_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_2)).xyz - texture (sampler_main, (uv - tmpvar_2)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\\n  uv2_1 = (uv - 0.5);\\n  xlat_mutableuv3 = ((0.2 * uv2_1) + 0.5);\\n  float tmpvar_4;\\n  tmpvar_4 = (time / 2.0);\\n  xlat_mutableuv3 = ((0.2 * cos(\\n    ((42.0 * fract(xlat_mutableuv3)) + tmpvar_4)\\n  )) + (99.0 * xlat_mutabledz));\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((0.01 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_5)) + (0.9 * dot (vec3(tmpvar_5), vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\\n  xlat_mutableuv3 = ((0.2 * uv2_1) + 0.5);\\n  xlat_mutableuv3 = ((0.2 * cos(\\n    ((42.0 * fract(xlat_mutableuv3)) + tmpvar_4)\\n  )) + (99.0 * xlat_mutabledz));\\n  float tmpvar_6;\\n  tmpvar_6 = clamp ((0.01 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_6)) + (0.9 * dot (vec3(tmpvar_6), vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (xlat_mutableret1 + clamp ((\\n    (16.0 * ((0.5 * texture (sampler_main, (uv + \\n      (0.1 * xlat_mutabledz)\\n    )).xyz) + 0.01))\\n   * \\n    (0.1 + xlat_mutableret1)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_7.xyz;\\n }"}')},"./presets/converted/martin - reflections on black tiles.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":10.437056,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.5,"g":1,"b":0.9,"r2":0.83,"g2":0.93,"b2":0.8,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/2+q20;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3 +q28/3);\\n\\na = q26/4+.2; \\n//a = 1;"},{"baseVals":{"thickoutline":1,"x":0.4,"rad":2.366958,"tex_ang":3.455753,"tex_zoom":0.993053,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a2 =0;a = 0;\\na = q24/2;"},{"baseVals":{"enabled":1,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\\ny = rand(10)/10;\\n\\nr = rand(4)/3;\\ng = rand(4)/3;\\nb = rand(4)/3;\\n\\n\\nis_beat = above(time, t0+.03);\\nt0 = is_beat*time + (1-is_beat)*t0;\\n\\n \\na = min(q21/2 ,.9) * is_beat;\\nrad = a*a/3 ;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"sep":120,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\\nk2 = bnot (k1);\\nxi = value1*k2 + xi*(1-k2);\\nyi = value2*(1-k2) + yi*k2;\\n\\ndx = dx*.99 + xi;\\ndy = dy*.99 + yi;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\na = q22/8; \\na = min(a,.2);"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"fade = .5;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265358/2;\\nq27 = index + 1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nzoom = 1.0;\\nrot = -0.00 * index;\\n\\nfade = fade*dec_med + pow(0.996, 30/fps) * (1-dec_med);\\nq32 = fade;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 zz_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qa.xy;\\n  tmpvar_2[1u] = _qa.zw;\\n  zz_1 = (((\\n    (uv - vec2(0.5, 0.5))\\n   * texsize.xy) * (0.015 * q27)) * tmpvar_2);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((q32 * texture (sampler_main, \\n    (uv + ((clamp (\\n      (sin(zz_1) / cos(zz_1))\\n    , vec2(-20.0, -20.0), vec2(20.0, 20.0)) * texsize.zw) * 8.0))\\n  ).xyz) + (\\n    (0.03 * texture (sampler_noise_lq, ((uv * 0.3) + (0.01 * rand_frame).xy)))\\n  .xyz * \\n    (1.0 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  )) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((tmpvar_1.xyz + clamp (\\n    (3.0 * (((texture (sampler_blur1, \\n      (uv - (0.01 * tmpvar_1.xyz).xy)\\n    ).xyz * scale1) + bias1) - vec3(0.1, 0.1, 0.2)))\\n  , 0.0, 1.0)) * 1.3);\\n  ret = tmpvar_2.xyz;\\n }"}')},"./presets/converted/martin - stormy sea (2010 update).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"thickoutline":1,"textured":1,"num_inst":3,"x":0.73,"rad":0.29466,"tex_zoom":1.87511,"r":0.7,"g":0.7,"b":1,"g2":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q25;\\na = trig*.8; a2 = 0;\\n\\nx0 = x0 *bnot(trig) + trig*rand(100)/100;\\ny0 = y0 *bnot(trig) + trig*rand(100)/100;\\ntex_ang = rand(20);\\nrad = .1+rand(10)/8;\\n\\nx = x0; y = y0;\\nr = .7+.3*sin(time/12);\\nb = .7+.3*sin(time/15);\\ng = .7+.3*sin(time/8);\\nr2 = r; b2 = b; g2 = g;"},{"baseVals":{"enabled":1,"sides":36,"thickoutline":1,"textured":1,"num_inst":4,"x":0.3,"rad":0.05429,"ang":1.25664,"tex_ang":0.37699,"tex_zoom":1.02841,"g":0.7,"b":0.5,"r2":1,"g2":0,"border_g":0.59,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q31; y = q32;\\nrad = .06;\\ntex_ang = time;\\na = q30;"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":24,"textured":1,"x":0.7,"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":1,"b":0.99,"a":0,"g2":0,"a2":1,"border_r":0,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"scaling":0.04505,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":100,"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"t0a = time; t0 = time+.5;\\nspb_ = .5; ;\\nvolb = .5; volx = .5;\\nvol_= 1; index = 0; mov1 = 0;\\nsdev = .1; wamp_ = .1;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps); dec_slow = pow (0.95, 30/fps);\\nvol = (bass+med+treb)/1.5; vol_ = vol_*dec_slow + (1-dec_slow)*vol;\\n\\nis_beat = above(vol, vol_+2*peak) * above (time, t0+spb_*.45);\\nt0a  = if(is_beat,t0,t0a); t0 = if(is_beat,time,t0);\\npeak = if(is_beat,vol,peak*dec_med);\\nindex = (index + is_beat) %128;\\n\\nspb = min(t0-t0a + .01,2);\\nspb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);\\n\\n\\nq20 = vol_;\\nq21 = above(vol,2.7*vol_);\\nq22 = max(0,peak-.0)+.01;\\nhpeak = hpeak*dec_med + (1-dec_med)*q21;\\nq23 = hpeak * (1+rand(8));\\nq24 = is_beat;\\nq25 = q22*(1+rand(8))/8;\\n\\nmindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));\\nsdev = if(is_beat,sdev * .8 + .2*pow(mindev+.02,2),sdev);\\n\\nspeed = 1/fps/spb_;\\ntrel = trel + speed;\\nq10 = trel;\\n\\nwamp =  min(.001/sdev,.15);\\nwamp_ = wamp_*dec_slow + (1-dec_slow)*wamp;\\nq11 = sin(trel/2)*wamp_;\\nq12 = wamp_/2;\\n\\nrota = 2*wamp_*sin(trel/3);\\n//rota = .2*sin(wamp_*32);\\nq5 = cos(rota);\\nq6 = sin(rota);\\nq7 = -q6;\\nq8 = q5;\\n\\nq15 = -sin(trel*.5)*.05;\\nq16 = cos(trel)*wamp_/2;\\n\\nq19 = .1*sin(trel/12);\\n\\n//ODD PLANET MOVEMENT\\ntrig1 = bnot(vis)*bnot(rand(100*fps));\\nvis = if (trig1,1,vis*below(mov1,1));\\nq30 = vis;\\nmov1 = if (vis,mov1+2*speed/fps,-1);\\ndir = if(trig1,rand(100),dir); \\nq31 = .5+.5*cos(dir)*mov1;\\nq32 = .5+.5*sin(dir)*mov1;\\n\\nq29 = (2+sin(time/17)); //reflection water\\n\\nmonitor = wamp;","pixel_eqs_eel":"zoom = 1+.02*rad*q20;\\ndy = -.00;\\nwarp =.1; dx = .0;","warp":"mat2 ofs;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablezv;\\n shader_body { \\n  mat2 tmpvar_1;\\n  tmpvar_1[uint(0)].x = texsize.z;\\n  tmpvar_1[uint(0)].y = 0.0;\\n  tmpvar_1[1u].x = 0.0;\\n  tmpvar_1[1u].y = texsize.w;\\n  ofs = (tmpvar_1 * 4.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = ((uv.x - 0.5) + q19);\\n  tmpvar_2.y = (uv.y - 0.5);\\n  vec2 v_3;\\n  v_3.x = ofs[0].x;\\n  v_3.y = ofs[1].x;\\n  vec2 v_4;\\n  v_4.x = ofs[0].x;\\n  v_4.y = ofs[1].x;\\n  vec2 v_5;\\n  v_5.x = ofs[0].y;\\n  v_5.y = ofs[1].y;\\n  vec2 v_6;\\n  v_6.x = ofs[0].y;\\n  v_6.y = ofs[1].y;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (texture (sampler_main, (uv + v_3)) - texture (sampler_main, (uv - v_4))).z;\\n  tmpvar_7.y = (texture (sampler_main, (uv + v_5)) - texture (sampler_main, (uv - v_6))).z;\\n  xlat_mutablezv = (time * 0.08);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (0.02 * time);\\n  tmpvar_8.y = (-0.05 * time);\\n  xlat_mutableuv2 = ((3.0 * tmpvar_2) + tmpvar_8);\\n  vec3 tmpvar_9;\\n  tmpvar_9.xy = xlat_mutableuv2;\\n  tmpvar_9.z = xlat_mutablezv;\\n  vec3 tmpvar_10;\\n  tmpvar_10.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\\n  tmpvar_10.z = (xlat_mutablezv * 2.0);\\n  vec3 tmpvar_11;\\n  tmpvar_11.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\\n  tmpvar_11.z = (xlat_mutablezv * 3.0);\\n  vec3 tmpvar_12;\\n  tmpvar_12.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\\n  tmpvar_12.z = (xlat_mutablezv * 7.0);\\n  xlat_mutableuv2 = (tmpvar_2 + ((\\n    (((texture (sampler_noisevol_hq, tmpvar_9).z + (texture (sampler_noisevol_hq, tmpvar_10).z / 2.0)) + (texture (sampler_noisevol_hq, tmpvar_11).z / 4.0)) + (texture (sampler_noisevol_hq, tmpvar_12).z / 8.0))\\n   - 1.0) * 0.1));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = (((\\n    (((0.2 + (\\n      (((1.0 + bass_att) * 0.01) / sqrt(dot (xlat_mutableuv2, xlat_mutableuv2)))\\n     * \\n      (1.0 + normalize(slow_roam_cos))\\n    .xyz)) + ((rand_preset.z - 0.5) * xlat_mutableuv2.y)) * 0.1)\\n   / 2.0) + (texture (sampler_main, \\n    (uv - (0.02 * tmpvar_7))\\n  ).xyz * 0.9)) - 0.01);\\n  ret = tmpvar_13.xyz;\\n }","comp":"float xlat_mutablerain;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv1;\\nfloat xlat_mutablewater;\\nfloat xlat_mutablez;\\n shader_body { \\n  vec2 uv_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qb.xy;\\n  tmpvar_2[1u] = _qb.zw;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q15;\\n  tmpvar_3.y = q16;\\n  uv_1 = (((\\n    (((uv - 0.5) * tmpvar_2) * 0.7)\\n   * aspect.xy) + 0.5) + tmpvar_3);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.5;\\n  tmpvar_4.y = ((q11 + 0.6) + (q12 * (\\n    sin(((uv_1.x * 6.0) + q10))\\n   * \\n    cos(((uv_1.y * 8.0) + (time * 0.6)))\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (uv_1.x * 4.0);\\n  tmpvar_5.y = uv_1.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (uv_1.x * 4.0);\\n  tmpvar_6.y = uv_1.y;\\n  xlat_mutablerain = (texture (sampler_noise_lq, ((tmpvar_5 * 0.2) - time)).x + texture (sampler_noise_lq, ((tmpvar_6 * 0.5) - time)).x);\\n  float tmpvar_7;\\n  tmpvar_7 = (time / 4.0);\\n  xlat_mutablerain = (xlat_mutablerain * clamp ((\\n    (q20 / 2.0)\\n   - \\n    abs(sin(((uv.x / 4.0) - tmpvar_7)))\\n  ), 0.0, 1.0));\\n  xlat_mutableuv1 = ((uv_1 - tmpvar_4) + (xlat_mutablerain * 0.01));\\n  vec3 tmpvar_8;\\n  tmpvar_8.x = xlat_mutableuv1.y;\\n  tmpvar_8.y = (xlat_mutableuv1.x * 2.0);\\n  tmpvar_8.z = (time * 0.2);\\n  xlat_mutableuv1 = (xlat_mutableuv1 + ((texture (sampler_noisevol_hq, tmpvar_8) * \\n    (0.5 - abs(xlat_mutableuv1.y))\\n  ).x * 0.05));\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((128.0 * xlat_mutableuv1.y), 0.0, 1.0);\\n  xlat_mutablez = (0.4 / xlat_mutableuv1.y);\\n  xlat_mutablers0.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  xlat_mutablers0.y = xlat_mutablez;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = (xlat_mutablers0.x + tmpvar_7);\\n  tmpvar_10.y = (xlat_mutablez + (time * 4.0));\\n  xlat_mutablers = (tmpvar_10 * tmpvar_9);\\n  xlat_mutablewater = (texture (sampler_noise_hq, xlat_mutablers) + texture (sampler_noise_hq, ((xlat_mutablers / 4.0) - (time / 8.0)))).x;\\n  xlat_mutablewater = (xlat_mutablewater - 1.0);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (xlat_mutableuv1.x + 0.5);\\n  tmpvar_11.y = abs((0.5 - xlat_mutableuv1.y));\\n  xlat_mutableret1 = (((texture (sampler_main, uv_1).xyz * \\n    (1.0 - tmpvar_9)\\n  ) + (\\n    ((texture (sampler_main, (tmpvar_11 - (0.2 * xlat_mutablewater))).xyz * tmpvar_9) * pow ((1.0/(xlat_mutablez)), 0.2))\\n   * \\n    (2.0 - rand_preset.y)\\n  )) + ((\\n    (((0.25 + rand_preset.y) * (1.0 + (rand_preset.x * xlat_mutablewater))) * tmpvar_9)\\n   / xlat_mutablez) * vec3(0.0, 0.1, 0.1)));\\n  xlat_mutableret1 = (xlat_mutableret1 + (0.06 * xlat_mutablerain));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = (1.0 - exp((\\n    (-(pow (xlat_mutableret1, vec3(1.5, 1.5, 1.5))) * 8.0)\\n   * \\n    (1.0 + (q23 * 4.0))\\n  )));\\n  ret = tmpvar_12.xyz;\\n }"}')},"./presets/converted/martin - witchcraft reloaded.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.09,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"num_inst":1024,"rad":0.03632,"tex_ang":1.00531,"tex_zoom":1.53117,"b":1,"a":0,"g2":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"fov = reg03;\\nn = instance*reg00;\\n\\n\\nx0 = gmegabuf(n);\\ny0 = gmegabuf(n+1);\\nz0 = gmegabuf(n+2)+reg02;\\n\\nx = x0/z0*fov + 0.5;\\ny = y0/z0*q32*fov + 0.5;\\n\\n\\n//k1 = reg01+t1;\\nr = gmegabuf(n+3);\\ng = gmegabuf(n+4);\\nb = gmegabuf(n+5);\\nr2 = r/2; g2 = g/2; b2 = b2/2;\\n\\na = instance/1024; a2 = a*.5;\\nrad = min(0.02/z0,.5) * (z0 > 0)*2.5*sqrt(a);\\nrad *= gmegabuf(n+6);\\n\\nt1 -= 1;\\n"},{"baseVals":{"num_inst":128,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g":1,"b":0.6,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":13,"additive":1,"num_inst":5,"x":0.65,"y":0.38,"rad":0.57049,"tex_zoom":0.73678,"a":0.7,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":14,"additive":1,"thickoutline":1,"textured":1,"x":0.6,"y":0.55,"rad":0.97237,"ang":1.25664,"tex_zoom":0.34933,"g":0.6,"g2":0,"b2":1,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"scaling":2.15542,"smoothing":0.2,"r":0,"a":0.7},"init_eqs_eel":"","frame_eqs_eel":"t1 = 1023;\\nt2 = 0;","point_eqs_eel":"fov = reg03;\\nn = t1 * reg00;\\n\\n\\nx0 = gmegabuf(n);\\ny0 = gmegabuf(n+1);\\nz0 = gmegabuf(n+2)+reg02;\\n\\nx = x0/z0*fov + 0.5;\\ny = y0/z0*fov + 0.5;\\n\\n\\na= max(0,t1/1024);\\n\\nk1 = reg01+t1;\\nr = gmegabuf(n+3);\\ng = gmegabuf(n+4);\\nb = gmegabuf(n+5);\\n\\n\\na = t1/1024 * (z0 >= 0.5)/2;\\n\\nt1 -= 1;\\ngmegabuf (10000 +t2) = abs(value1+value2);\\nt2 += 1;"},{"baseVals":{"enabled":1,"scaling":0.89152,"smoothing":0.82,"r":0,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1 = 512;","point_eqs_eel":"fov = reg03;\\nn = t1 * reg00;\\n\\n\\nx0 = gmegabuf(n);\\ny0 = gmegabuf(n+1);\\nz0 = gmegabuf(n+2)+reg02;\\n\\nx = x0/z0*fov + 0.5;\\ny = y0/z0*fov + 0.5;\\n\\nr = gmegabuf(n+3);\\ng = gmegabuf(n+4);\\nb = gmegabuf(n+5);\\n\\na= t1/1024* (z0 >= 0.5)/2;\\nt1 -= 1;\\n"},{"baseVals":{"samples":32,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"index = 0;\\nloop (100000,\\n  megabuf(index) = 0;\\n  gmegabuf(index) = 0;\\n  index = index + 1;\\n);\\n\\nrecsize = 8;\\nreg00 = recsize;\\n\\npoints = 512*2;\\n\\nreg01 = 0; //benoetigt fuer \\"new\\"\\nzofs = 1 + rand(100)/100*2; reg02 = zofs;\\n\\nfov = .3; reg03 = fov;","frame_eqs_eel":"dec_f = pow (0.3, 30/fps);\\ndec_m = pow (0.85, 30/fps);\\ndec_s = pow (0.95, 30/fps);\\nbeat = (bass + mid+ treb)-(bass_att + mid_att+ treb_att) + (bass+mid+treb);\\nbeat /= 3;\\n\\npeak = peak*dec_m + (1-dec_m)*pow(beat-1,1)*(beat>1)*4;\\nis_beat = above(beat, 1) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index)) %8;\\n\\nif (is_beat,\\n  ran1 = rand(100)/50-1;\\n  ran2 = rand(100)/50-1;\\n  ran3 = rand(100)/50-1;\\n,0);\\nran1_ = dec_m * ran1_ + (1-dec_m) * ran1;\\nran2_ = dec_m * ran2_ + (1-dec_m) * ran2;\\nran3_ = dec_m * ran3_ + (1-dec_m) * ran3;\\nrsum = sqrt(ran1_*ran1_ + ran2_*ran2_ + ran3_*ran3_);\\n\\nif (is_beat * (index==2),\\n  ran4 = (rand(100)/50-1);\\n  ran5 = (rand(100)/50-1);\\n  ran6 = (rand(100)/50-1);\\n,0;);\\nran4_ = dec_m * ran4_ + (1-dec_m) * ran4;\\nran5_ = dec_m * ran5_ + (1-dec_m) * ran5;\\nran6_ = dec_m * ran6_ + (1-dec_m) * ran6;\\n\\nif (is_beat * (index==6),\\n  ran7 = (rand(100)/50-1) ;\\n  ran8 = (rand(100)/50-1) ;\\n  ran9 = (rand(100)/50-1) ;\\n,0;);\\nran7_ = dec_m * ran7_ + (1-dec_m) * ran7;\\nran8_ = dec_m * ran8_ + (1-dec_m) * ran8;\\nran9_ = dec_m * ran9_ + (1-dec_m) * ran9;\\n\\n\\n//Neue Punkte #####################\\npk = sqrt(peak+.1);\\nNew = int(12*(ran4-ran5)*pk-12*(ran3-ran1)/pk); //##spielen\\nnew = max(min (new,20),2);\\nreg01 += new;\\n\\ndec = dec_m;\\n\\n//Neue Punkte oberhalb des Arrays\\nn = recsize*points; m = 0;\\ndt1 = (if (ran1>0,4*pk,4/pk))/fps*new/6;\\nvol = max(ran1+ran2,.2)*pk*2;\\nloop (new,\\n  trel1 = trel1 + dt1;\\n  x0 = x0 * dec + (1-dec)* (sin(trel1+ran3*6)*vol    +ran1);\\n  y0 = y0 * dec + (1-dec)* (sin(trel1+ran2*6)*vol    +ran2);\\n  z0 = z0 * dec + (1-dec)* (sin(trel1+ran1*6)*vol +ran3);\\n\\n  gmegabuf(n)   = x0;\\n  gmegabuf(n+1) = y0;\\n  gmegabuf(n+2) = z0;\\n//Farben\\n  gmegabuf(n+3) = ran1_/rsum/3+.5;\\n  gmegabuf(n+4) = ran2_/rsum/3+.5;\\n  gmegabuf(n+5) = ran3_/rsum/3+.5;\\n//Groesse\\n  gmegabuf(n+6) = gmegabuf(10000+m)*0+1;;\\n  n += recsize; m+=1;);\\n\\n//Nach unten um \\"new\\" points umkopieren\\nn = 0;\\nloop (recsize*points,\\n  gmegabuf (n) = gmegabuf(n+new*recsize) ;\\n  n += 1;);\\n\\nxang = ran4_/fps;\\nyang = ran5_/fps;\\nzang = ran6_/fps;\\nddx = min(max(ddx+yang/fps,-1),1);\\nddy = min(max(ddy+xang/fps,-1),1);\\nq1 = ddx*2;\\nq2 = ddy*2;\\n//Rotieren\\nn = 0;\\nloop (points,\\n  ox = gmegabuf (n);\\n  oy = gmegabuf (n+1);\\n  oz = gmegabuf (n+2);\\n  mx = ox*cos(zang) - oy*sin(zang);\\n  my = ox*sin(zang) + oy*cos(zang);\\n  ox = mx;  oy = my;\\n  mx = ox*cos(yang) + oz*sin(yang);\\n  mz = -ox*sin(yang) + oz*cos(yang);\\n  ox = mx;  oz = mz;\\n  my = oy*cos(xang) - oz*sin(xang);\\n  mz = oy*sin(xang) + oz*cos(xang);\\n  oy = my;  oz = mz;\\n  gmegabuf (n) = ox;\\n  gmegabuf (n+1) = oy;\\n  gmegabuf (n+2) = oz;\\nn += recsize;);\\n\\n\\n//SPIEL\\nk1 = ran7_/fps/2;\\nk2 = ran8_/fps/2;\\nk3 = abs(ran9_)/fps;\\n\\ndec = .4 + .6*ran5_; dec2 = (1-dec);\\nr1 = .5+.3*ran4_;\\nn = 0;\\nloop (points-1,\\n  m = n*recsize;\\n  left  =  ((n-1+points)%points) * recsize;\\n  right =  ((n+1+points)%points) * recsize;\\n  gmegabuf (m) =   dec*gmegabuf(m)   + dec2*(gmegabuf(left)*r1   +gmegabuf(right)*(1-r1) + k1) ;\\n  gmegabuf (m+1) = dec*gmegabuf(m+1) + dec2*(gmegabuf(left+1)*r1 +gmegabuf(right+1)*(1-r1) + k2) ;\\n//  gmegabuf (m+2) = dec*gmegabuf(m+2) + dec2*(gmegabuf(left+2)*r1 +gmegabuf(right+2)*(1-r1) + k3) ;\\n  n += 1;\\n);\\n\\n\\nm = (frame%points);\\nm = max(0,int(1024 + (t0-time)*200));\\nn = m * recsize;\\nq5 = gmegabuf(n)/(gmegabuf(n+2)+zofs)*fov;\\nq6 = -gmegabuf(n+1)/(gmegabuf(n+2)+zofs)*fov;\\n\\nq10=  sqrt(gmegabuf (n+3));\\nq11=  sqrt(gmegabuf(n+4));\\nq12=  sqrt(gmegabuf (n+5));\\n\\n\\nmonitor =   m;\\n\\nq32 = aspecty;","pixel_eqs_eel":"rot = 0; zoom = 1; warp = 0; dy = .00; dx = -.00;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = vec3(0.0, 0.0, 0.0);\\n  ret = tmpvar_1.xyz;\\n }","comp":"float xlat_mutablesmask;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv3;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  float flash_1;\\n  float dist_2;\\n  float stars_3;\\n  vec3 ret_4;\\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 * time);\\n  float tmpvar_6;\\n  tmpvar_6 = (0.2 * rad);\\n  dist_2 = ((1.0 - fract(\\n    (0.3333333 + tmpvar_5)\\n  )) * (1.0 - tmpvar_6));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = q1;\\n  tmpvar_7.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_7);\\n  xlat_mutableuv4 = ((32.0 * dist_2) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.9);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_3 = max (0.0, clamp ((\\n    (1.0 - dist_2)\\n   * \\n    ((0.1 / sqrt(dot (tmpvar_8, tmpvar_8))) * xlat_mutablesmask)\\n  ), 0.0, 1.0));\\n  dist_2 = ((1.0 - fract(\\n    (0.6666667 + tmpvar_5)\\n  )) * (1.0 - tmpvar_6));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q1;\\n  tmpvar_9.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_9);\\n  xlat_mutableuv4 = ((32.0 * dist_2) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.9);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_3 = (stars_3 + max (stars_3, clamp (\\n    ((1.0 - dist_2) * ((0.1 / sqrt(\\n      dot (tmpvar_10, tmpvar_10)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  dist_2 = ((1.0 - fract(\\n    (1.0 + tmpvar_5)\\n  )) * (1.0 - tmpvar_6));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = q1;\\n  tmpvar_11.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_11);\\n  xlat_mutableuv4 = ((32.0 * dist_2) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.9);\\n  vec2 tmpvar_12;\\n  tmpvar_12 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_3 = (stars_3 + max (stars_3, clamp (\\n    ((1.0 - dist_2) * ((0.1 / sqrt(\\n      dot (tmpvar_12, tmpvar_12)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = q5;\\n  tmpvar_13.y = q6;\\n  xlat_mutableuv2 = (xlat_mutableuv1 - tmpvar_13);\\n  float tmpvar_14;\\n  tmpvar_14 = ((0.01 / sqrt(\\n    dot (xlat_mutableuv2, xlat_mutableuv2)\\n  )) * min (3.0, (\\n    ((mid - 0.5) * float((mid > 0.5)))\\n   * 2.0)));\\n  flash_1 = tmpvar_14;\\n  float angle_15;\\n  float tmpvar_16;\\n  tmpvar_16 = abs(xlat_mutableuv2.x);\\n  if ((xlat_mutableuv2.y >= 0.0)) {\\n    angle_15 = (1.0 - ((xlat_mutableuv2.y - tmpvar_16) / (xlat_mutableuv2.y + tmpvar_16)));\\n  } else {\\n    angle_15 = (3.0 - ((xlat_mutableuv2.y + tmpvar_16) / (tmpvar_16 - xlat_mutableuv2.y)));\\n  };\\n  angle_15 = (angle_15 * 0.25);\\n  float tmpvar_17;\\n  if ((xlat_mutableuv2.x < 0.0)) {\\n    tmpvar_17 = -(angle_15);\\n  } else {\\n    tmpvar_17 = angle_15;\\n  };\\n  flash_1 = (tmpvar_14 * (tmpvar_14 / (\\n    abs((fract((\\n      (3.0 * tmpvar_17)\\n     + \\n      (time * 2.0)\\n    )) - 0.5))\\n   + 0.18)));\\n  vec3 tmpvar_18;\\n  tmpvar_18 = max ((texture (sampler_main, uv).xyz * 2.0), ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) * 2.0));\\n  vec2 tmpvar_19;\\n  tmpvar_19 = sin(xlat_mutableuv3);\\n  ret_4 = (clamp ((0.025 / \\n    sqrt(dot (tmpvar_19, tmpvar_19))\\n  ), 0.0, 1.0) * vec3(0.4, 0.1, 1.0));\\n  ret_4 = (ret_4 + clamp ((stars_3 * stars_3), 0.0, 1.0));\\n  ret_4 = (ret_4 * clamp ((1.0 - \\n    (2.0 * dot (tmpvar_18, vec3(0.32, 0.49, 0.29)))\\n  ), 0.0, 1.0));\\n  ret_4 = (ret_4 + tmpvar_18);\\n  vec3 tmpvar_20;\\n  tmpvar_20.x = q10;\\n  tmpvar_20.y = q11;\\n  tmpvar_20.z = q12;\\n  ret_4 = (ret_4 + ((2.0 * \\n    clamp (flash_1, 0.0, 1.0)\\n  ) * tmpvar_20));\\n  vec4 tmpvar_21;\\n  tmpvar_21.w = 1.0;\\n  tmpvar_21.xyz = ret_4;\\n  ret = tmpvar_21.xyz;\\n }"}')},"./presets/converted/martin [shadow harlequins shape code] - fata morgana.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":0.133,"wave_smoothing":0,"wave_mystery":-1,"modwavealphastart":1,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_a":0,"b2x":0.3,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"rad":0.06623,"tex_zoom":1.79845,"r":0,"a":0.1,"g2":0,"border_b":0,"border_a":0},"init_eqs_eel":"bob = 1.5;\\nro = 0;\\nred = rand(20);","frame_eqs_eel":"vol = 1 + 0.2*((bass_att+treb_att+mid_att)/3);\\nbob = bob*above(bob,0.01) - 0.01 + 1*(1 - above(bob,0.01));\\nbob = 0.4 + 0.4*sin(time*0.8);\\nbob = bob*vol;\\n//rad = bob;\\nborder_1 = 0.4;\\nsides = 30;\\nro = ro + 0.02;\\nang = ro;\\n//rad = 0.6;\\n\\nsp = red*0.025;\\nspi = 0.5 - sp;\\ntm = time*0.1;\\nborder_r = 0.5 + sp*sin(tm*0.6) + spi*cos(tm*1.46);\\nborder_g = 0.5 + sp*sin(tm*1.294) + spi*cos(tm*0.87);\\nborder_b = 0.5 + sp*sin(tm*1.418) + spi*cos(tm*0.76);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"num_inst":4,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.225*sin(time /instance*0.7);\\ny = 0.5 + 0.3*cos(time /instance*0.7);\\nx = x- 0.4*x*sin(time);\\ny = y- 0.4*y*cos(time);\\n\\n\\n\\nrad = rad*mid_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time + 2.09);\\ny = 0.5 + 0.3*cos(time + 2.09);\\n\\nrad = rad*bass_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"num_inst":5,"rad":0.07419,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time /instance);\\ny = 0.5 + 0.3*cos(time /instance);\\nx = x+ 0.4*x*sin(time);\\ny = y+ 0.4*y*cos(time);\\n\\n\\n//x = x+(0.1*q3)*sin((instance*2.4));\\n//y = y+(0.1*q4)*cos((instance*2.4));\\n\\n\\nrad = rad*treb_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\n\\nps = .9*ps + .1*q22;\\nq23 = ps;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\nq27 = index +1;\\nq28 = index2;\\n\\n\\nk1 =  is_\\nbeat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;","pixel_eqs_eel":"zoom = 1.05;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - vec2(0.5, 0.5));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 0.0;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur1, uv);\\n  tmpvar_3.xyz = ((tmpvar_4.xyz * scale1) + bias1);\\n  float tmpvar_5;\\n  tmpvar_5 = (dot (tmpvar_3, roam_sin) * 16.0);\\n  mat2 tmpvar_6;\\n  tmpvar_6[uint(0)].x = cos(tmpvar_5);\\n  tmpvar_6[uint(0)].y = -(sin(tmpvar_5));\\n  tmpvar_6[1u].x = sin(tmpvar_5);\\n  tmpvar_6[1u].y = cos(tmpvar_5);\\n  uv_1 = ((tmpvar_2 + (\\n    (0.2 * dot (((tmpvar_4.xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\\n   * \\n    (tmpvar_2 * tmpvar_6)\\n  )) - 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv_1 * texsize.xy) * 0.02);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (cos((tmpvar_7.y * q1)) * sin(-(tmpvar_7.y)));\\n  tmpvar_8.y = (sin(tmpvar_7.x) * cos((tmpvar_7.y * q2)));\\n  uv_1 = (uv_1 - ((tmpvar_8 * texsize.zw) * 12.0));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ((texture (sampler_main, uv_1).xyz * 0.98) - 0.02);\\n  ret = tmpvar_9.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutableuv1;\\nfloat xlat_mutablez;\\n shader_body { \\n  xlat_mutableuv1 = (uv - 0.5);\\n  xlat_mutablez = (0.2 / abs(xlat_mutableuv1.y));\\n  xlat_mutablers.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  xlat_mutablers.y = ((xlat_mutablez / 2.0) + (time * 4.0));\\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_noise_hq, xlat_mutablers);\\n  xlat_mutableret1 = ((tmpvar_1.xyz * vec3(\\n    greaterThanEqual (tmpvar_1.xyz, vec3(0.0, 0.0, 0.0))\\n  )) - 0.6);\\n  float tmpvar_2;\\n  tmpvar_2 = clamp ((128.0 * xlat_mutableuv1.y), 0.0, 1.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(((\\n    (xlat_mutableuv1 * (1.0 - abs(xlat_mutableuv1.x)))\\n   - 0.5) - (\\n    (xlat_mutableret1 * 0.05)\\n   * tmpvar_2).xy));\\n  float x_4;\\n  x_4 = (tmpvar_3.y - 0.52);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (texture (sampler_main, tmpvar_3) + ((0.02 / \\n    (0.02 + sqrt((x_4 * x_4)))\\n  ) * slow_roam_sin)).xyz;\\n  xlat_mutableret1 = tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (32.0 * ((\\n    (uv * mat2(0.6, -0.8, 0.8, 0.6))\\n   + \\n    (tmpvar_5 * 0.1)\\n  .xy) + (time / 64.0)));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = abs((fract(tmpvar_6) - 0.5));\\n  vec3 tmpvar_8;\\n  tmpvar_8 = clamp (((0.25 / \\n    sqrt(dot (tmpvar_7, tmpvar_7))\\n  ) * vec3((texture (sampler_pw_noise_lq, \\n    (tmpvar_6 / 256.0)\\n  ).y - 0.9))), 0.0, 1.0);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = (tmpvar_5 + ((\\n    (tmpvar_8.x * tmpvar_8.x)\\n   + \\n    ((rand_preset * (0.5 - uv.y)).xyz * vec3(0.0, 0.0, 1.0))\\n  ) * (1.0 - tmpvar_2)));\\n  ret = tmpvar_9.xyz;\\n }"}')},"./presets/converted/martin, flexi, fishbrain + sto - enterstate [random mashup].json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":3,"wave_thick":1,"wrap":0,"darken":1,"wave_a":100,"wave_scale":0.282,"wave_smoothing":0.9,"wave_mystery":1,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.05,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"rad":0.16446,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = if(above(bass,2.5),1,0);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"scaling":0.2248},"init_eqs_eel":"","frame_eqs_eel":"r = bass;\\ng = treb;\\nb = .5;","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"scaling":0.2743},"init_eqs_eel":"","frame_eqs_eel":"r = bass;\\ng = treb;\\nb = .5;","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\\n"},{"baseVals":{"enabled":1,"thick":1,"scaling":2.0231,"smoothing":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\n//a = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"//******** INITIALIZATION *********\\n//---------- some global vars, do not change -------------\\navg = 0.01;\\nq7 = .25; //MyZoom\\nq8 =  rand(2.0)-1.0; //fractal modifier\\n//q8 = 1; //#\\nq16 = 1 + rand(2); //Tele ; rather fish eye\\n//q16 = 1; //#\\nq18 = rand(0.8)+.1; //brightness balance back/front\\nq30 = 1; //logarithmic Z-Dist storage; unused\\nq31 =128;\\nstart = 1; travel = 0; RotZ = 0; look = 0; slow = 0; t0 = time+3; lampx = .5; lampy = .5;\\ncran0 = rand(1);\\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; ); \\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; ); \\ntrelx = 0;  trely = 0; trelz = 0;\\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\\n\\n//Find random starting point\\nwhile (exec2(\\n  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;\\n  PosX = rand(5)-2;   PosY = rand(5)-2;   PosZ = rand(5)-2; \\n\\n//  PosX = 3.3; PosY = 2; PosZ = -2; ran1 = 0; ran2 = 0; ran3 = 0; //#\\n\\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); \\n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\\n\\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.001;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.05;\\n  ,(dist < 0.6)*(len > 30)));\\n,(dist < .06))); //end while","frame_eqs_eel":"wave_a = 0;\\nfps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25)); \\ndec_s = 1-.06*30/fps_;\\nbeat = (time >  t0+3); t0 = if(beat, time, t0);\\n\\nspeed = min(0.2,dist_-.02) * (1+2*avg) *(1-slow*.0)*.7/q7; //#\\nds = ds * dec_s + (1-dec_s)*speed*.25/fps_; \\nRotZ = if (RotZ==0,beat*(rand(100)<20*travel)*(rand(10)/10-.3),\\n                   bnot(beat*(rand(100)<30))*RotZ);\\nslow = if (bnot(slow), beat*(rand(1000*avg)<6), bnot(beat*(rand(100)<50)));\\nlook = if (bnot(look), beat*(rand(1000*speed)<12), bnot(beat*(rand(100)<50)));\\n\\n//Lamp View\\nlx = if (beat,rand(150)/200+.15,lx);\\nly = if (beat,rand(150)/200+.15,ly);\\nlampx = lampx * dec_s + (1-dec_s)*if (look,lx,0.5);\\nlampy = lampy * dec_s + (1-dec_s)*if (look,ly,0.5);\\nq1 = lampx; q2 = lampy;\\n\\n//Position \\nDirX= reg26; DirY= reg27; DirZ = reg28;\\nPosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ; \\nq4 = PosX; q5 = PosY; q6 = PosZ;\\n\\nangchg = (.2-dist_)*(dist_ < .2)*2;\\ntravel = if (angchg > 0,0,travel+ds);\\nv1 = v1 * dec_s + (1-dec_s)* RotZ * ds;\\nv2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;\\nv3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + 2*v1*sin(time*.1));\\n//v2 = .008;\\n//push old RotMat\\nreg30 =reg20; reg31 =reg21; reg32 =reg22; \\nreg33 =reg23; reg34 =reg24; reg35 =reg25; \\nreg36 =reg26; reg37 =reg27; reg38 =reg28; \\n\\nn = 0; avg = 0;\\nloop (5,\\n  n = n+1;\\n  //new Rot. Mat for infinitesimal angles\\n  ran1 = rand(100)/100;\\n  ran2 = rand(100)/200-.25;\\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); \\n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\\n\\n  //pop old RotMat\\n  reg20 =reg30; reg21 =reg31; reg22 =reg32; \\n  reg23 =reg33; reg24 =reg34; reg25 =reg35; \\n  reg26 =reg36; reg27 =reg37; reg28 =reg38; \\n\\n  //Multiply new RotMat by old one\\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\\n\\n  reg20 =q20; reg21 =q21; reg22 =q22;\\n  reg23 =q23; reg24 =q24; reg25 =q25;\\n  reg26 =q26; reg27 =q27; reg28 =q28;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.002;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx+q8; uvy0 = uvy+q8; uvz0 = uvz+q8;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.1;\\n  ,(dist < 0.6)*(len > 30)));\\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\\n  avg = avg+abs(megabuf(n)/5);\\n); //end loop 5\\n\\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\\n\\nxslope = min(max(2/avg*(megabuf(1)-megabuf(3)),-3),3);\\nyslope = min(max(2/avg*(megabuf(4)-megabuf(2)),-3),3);\\nmonitor = avg;\\ndist_ = dist_*dec_s + (1-dec_s)*dist;\\n\\nq10 = ds*q7; //compensation of lin. movement in GetDist and zoom uv\\nq14 = 1*abs(ds) + 2*(abs(v1) + abs(v2) + abs(v3)) + 1.0/255 + start*.05; \\nq19 = .6 + .4*sin(time*.02+cran0*6); //brightness backgd\\nstart = start * .9;\\nq11 = v1; q12 = v2; q13 = v3;\\n//forward comp. of Rotation\\nmonitor = q16;","pixel_eqs_eel":"warp = 0.0; zoom = 1; dx = -q12/q16*(1+0*pow(x-.5,2)); dy = q13/q16*(1+0*pow(y-.5,2)); rot =q11;","warp":" shader_body { \\n  float dy_1;\\n  float dx_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv * texsize.xy) * texsize_noise_lq.zw);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 4.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_6.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  ret_3.y = texture (sampler_fw_main, clamp ((uv + (\\n    (tmpvar_6 * texsize.zw)\\n   * 4.0)), 0.0, 1.0)).y;\\n  ret_3.y = (ret_3.y + ((\\n    (ret_3 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  .y * 0.025) + -0.01));\\n  ret_3.y = (ret_3.y + ((texture (sampler_noise_lq, tmpvar_4).y - 0.5) * 0.02));\\n  dx_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  dy_1 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dx_2;\\n  tmpvar_7.y = dy_1;\\n  ret_3.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_7 * texsize.zw) * 4.0)\\n  )).z - (ret_3.y * 0.01)) + 0.004);\\n  ret_3.z = (ret_3.z + ((texture (sampler_noise_lq, tmpvar_4).y - 0.5) * 0.01));\\n  dx_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(1.0, 0.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(-1.0, 0.0)))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  dy_1 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(0.0, 1.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(0.0, -1.0)))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dx_2;\\n  tmpvar_8.y = dy_1;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (tmpvar_8 * texsize.zw);\\n  vec2 domain_10;\\n  domain_10 = (uv - (tmpvar_9 * 2.5));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 0.0;\\n  tmpvar_11.xyz = max (vec4(0.0, 0.0, 0.0, 0.0), texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(-1.0, 0.0))))).xyz;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 0.0;\\n  tmpvar_12.xyz = max (tmpvar_11, texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(0.0, -1.0))))).xyz;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 0.0;\\n  tmpvar_13.xyz = max (tmpvar_12, texture (sampler_fc_main, domain_10)).xyz;\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 0.0;\\n  tmpvar_14.xyz = max (tmpvar_13, texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(0.0, 1.0))))).xyz;\\n  ret_3.x = ((max (tmpvar_14, texture (sampler_fc_main, \\n    (domain_10 + (texsize.zw * vec2(1.0, 0.0)))\\n  )).x + (\\n    (texture (sampler_main, (uv + (tmpvar_9 * 4.0))).x - ((texture (sampler_blur1, (uv + \\n      (tmpvar_9 * 4.0)\\n    )).xyz * scale1) + bias1).x)\\n   * 0.206)) - 0.09);\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_3;\\n  ret = tmpvar_15.xyz;\\n }","comp":"float xlat_mutablelamp;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablerss;\\nvec2 xlat_mutableuv1;\\n shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1.x = q4;\\n  tmpvar_1.y = q5;\\n  tmpvar_1.z = q6;\\n  mat3 tmpvar_2;\\n  tmpvar_2[uint(0)].x = q20;\\n  tmpvar_2[uint(0)].y = q23;\\n  tmpvar_2[uint(0)].z = q26;\\n  tmpvar_2[1u].x = q21;\\n  tmpvar_2[1u].y = q24;\\n  tmpvar_2[1u].z = q27;\\n  tmpvar_2[2u].x = q22;\\n  tmpvar_2[2u].y = q25;\\n  tmpvar_2[2u].z = q28;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q1;\\n  tmpvar_3.y = q2;\\n  vec2 uv_4;\\n  vec3 dots_5;\\n  vec3 ret_6;\\n  vec2 tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv - 0.5);\\n  tmpvar_7 = (0.5 + (tmpvar_8 * vec2(1.1, 0.81)));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.5, 0.5));\\n  uv_4 = (tmpvar_8 * aspect.xy);\\n  float tmpvar_10;\\n  float tmpvar_11;\\n  tmpvar_11 = (min (abs(\\n    (uv_4.y / uv_4.x)\\n  ), 1.0) / max (abs(\\n    (uv_4.y / uv_4.x)\\n  ), 1.0));\\n  float tmpvar_12;\\n  tmpvar_12 = (tmpvar_11 * tmpvar_11);\\n  tmpvar_12 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_12) + 0.05368138) * tmpvar_12) - 0.1173503)\\n     * tmpvar_12) + 0.1938925) * tmpvar_12) - 0.3326756)\\n   * tmpvar_12) + 0.9999793) * tmpvar_11);\\n  tmpvar_12 = (tmpvar_12 + (float(\\n    (abs((uv_4.y / uv_4.x)) > 1.0)\\n  ) * (\\n    (tmpvar_12 * -2.0)\\n   + 1.570796)));\\n  tmpvar_10 = (tmpvar_12 * sign((uv_4.y / uv_4.x)));\\n  if ((abs(uv_4.x) > (1e-08 * abs(uv_4.y)))) {\\n    if ((uv_4.x < 0.0)) {\\n      if ((uv_4.y >= 0.0)) {\\n        tmpvar_10 += 3.141593;\\n      } else {\\n        tmpvar_10 = (tmpvar_10 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_10 = (sign(uv_4.y) * 1.570796);\\n  };\\n  xlat_mutablers0.x = ((tmpvar_10 / 3.1416) * 2.0);\\n  xlat_mutablers0.y = (0.02 / sqrt(dot (uv_4, uv_4)));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = xlat_mutablers0.x;\\n  tmpvar_13.y = (xlat_mutablers0.y + time);\\n  xlat_mutablerss = (tmpvar_13 * mat2(0.7, -0.7, 0.7, 0.7));\\n  vec4 tmpvar_14;\\n  tmpvar_14 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \\n    (xlat_mutablerss / 32.0)\\n  ) - 0.7), vec4(0.0, 0.0, 0.0, 0.0)));\\n  vec2 tmpvar_15;\\n  tmpvar_15 = abs((fract(\\n    (xlat_mutablerss * 8.0)\\n  ) - 0.5));\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (xlat_mutablers0.x * 2.0);\\n  tmpvar_16.y = (xlat_mutablers0.y + (time / 2.0));\\n  xlat_mutablerss = (tmpvar_16 * mat2(0.7, -0.7, 0.7, 0.7));\\n  vec4 tmpvar_17;\\n  tmpvar_17 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \\n    (xlat_mutablerss / 32.0)\\n  ) - 0.7), vec4(0.0, 0.0, 0.0, 0.0)));\\n  vec2 tmpvar_18;\\n  tmpvar_18 = abs((fract(\\n    (xlat_mutablerss * 8.0)\\n  ) - 0.5));\\n  xlat_mutablerss = tmpvar_18;\\n  dots_5 = (vec3((clamp (\\n    (0.04 / sqrt(dot (tmpvar_15, tmpvar_15)))\\n  , 0.0, 1.0) * tmpvar_14.x)) + (clamp (\\n    (0.04 / sqrt(dot (tmpvar_18, tmpvar_18)))\\n  , 0.0, 1.0) * tmpvar_17.x));\\n  dots_5 = (dots_5 * clamp ((0.04 / \\n    abs((0.01 / xlat_mutablers0.y))\\n  ), 0.0, 1.0));\\n  dots_5 = (dots_5 * (dots_5 * 2.0));\\n  vec2 tmpvar_19;\\n  tmpvar_19.x = -((tmpvar_9.y * -1024.0));\\n  tmpvar_19.y = (tmpvar_9.x * -1024.0);\\n  vec2 tmpvar_20;\\n  tmpvar_20.x = tmpvar_19.x;\\n  tmpvar_20.y = -(tmpvar_19.y);\\n  uv_4 = (vec2(-100.0, 100.0) * (tmpvar_20 / (\\n    (tmpvar_19.x * tmpvar_19.x)\\n   + \\n    (tmpvar_19.y * tmpvar_19.y)\\n  )).yx);\\n  uv_4 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((mix ((0.5 + \\n        ((tmpvar_7 - 0.5) * 2.0)\\n      ), (uv_4 + 0.5), vec2(0.5, 0.5)) * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.98));\\n  uv_4 = (((uv_4 - 0.5) * 0.9) + 0.5);\\n  xlat_mutableuv1 = ((uv_4 - tmpvar_3) * aspect.xy);\\n  float tmpvar_21;\\n  tmpvar_21 = min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - (\\n    (texture (sampler_blur2, uv_4).xyz * scale2)\\n   + bias2).z));\\n  vec3 tmpvar_22;\\n  tmpvar_22.xy = ((uv_4 - 0.5) * min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - \\n    ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2)\\n  .z)));\\n  tmpvar_22.z = min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - (\\n    (texture (sampler_blur2, uv_4).xyz * scale2)\\n   + bias2).z));\\n  float tmpvar_23;\\n  tmpvar_23 = clamp ((abs(\\n    ((1.0 - ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2).z) - clamp ((1.0 - (\\n      (texture (sampler_blur2, tmpvar_3).xyz * scale2)\\n     + bias2).z), 0.1, 0.4))\\n  ) + 0.2), 0.0, 1.0);\\n  vec3 tmpvar_24;\\n  tmpvar_24 = mix (texture (sampler_main, uv_4).xyz, ((texture (sampler_blur1, uv_4).xyz * scale1) + bias1), vec3(tmpvar_23));\\n  float tmpvar_25;\\n  tmpvar_25 = clamp (((1.0 - \\n    exp(-(((texture (sampler_blur1, uv_4).xyz * scale1) + bias1).x))\\n  ) - 0.2), 0.0, 1.0);\\n  ret_6 = ((tmpvar_24.x * (0.2 + \\n    ((1.0 - tmpvar_23) * (1.0 - tmpvar_21))\\n  )) * (1.0 + (0.5 * \\n    sin((((tmpvar_22 / q7) * tmpvar_2) + tmpvar_1))\\n  )));\\n  vec3 tmpvar_26;\\n  tmpvar_26.xy = vec2(0.0, 1.0);\\n  tmpvar_26.z = (tmpvar_25 * 3.0);\\n  vec3 tmpvar_27;\\n  tmpvar_27 = mix (ret_6, tmpvar_26, vec3(tmpvar_25));\\n  xlat_mutablelamp = (((\\n    clamp ((1.0 - (4.0 * sqrt(\\n      dot (xlat_mutableuv1, xlat_mutableuv1)\\n    ))), 0.0, 1.0)\\n   * tmpvar_24.x) * clamp (\\n    (1.0 - (2.0 * mix (tmpvar_21, (1.0 - \\n      ((texture (sampler_blur1, uv_4).xyz * scale1) + bias1)\\n    .z), 0.2)))\\n  , 0.0, 1.0)) * 1.8);\\n  ret_6 = (tmpvar_27 + ((1.0 - \\n    dot (tmpvar_27, vec3(0.32, 0.49, 0.29))\\n  ) * xlat_mutablelamp));\\n  ret_6 = (1.0 - exp((-2.0 * ret_6)));\\n  ret_6 = (ret_6 + (dots_5 * (1.0 + ret_6)));\\n  vec4 tmpvar_28;\\n  tmpvar_28.w = 1.0;\\n  tmpvar_28.xyz = ret_6;\\n  ret = tmpvar_28.xyz;\\n }"}')},"./presets/converted/sawtooth grin roam.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.49,"decay":0.5,"echo_zoom":1.002,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.157,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":16.016,"zoomexp":11.56276,"fshader":1,"zoom":1.05971,"warp":0.13126,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":512,"rad":0.1026,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/30;\\na=(above(bass+mid+treb,.8));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"enabled":1,"sides":23,"num_inst":1024,"rad":0.10262,"ang":0.43982,"tex_ang":0.62832,"a":0.5,"r2":1,"g2":0,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/25;\\na=(above(bass+mid+treb,.1));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.20269,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.22389,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"xx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.0005*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1; q2 = x2; q3 = x3; q4 = x4;\\nq5 = y1; q6 = y2; q7 = y3; q8 = y4;\\nq9 =1/ aspectX;\\nq10 = 1/aspectY;\\n\\nzoom = 1;\\nr = r*0.96 +(x1-0.5);\\nrot = (r*0.1);\\n\\nq12 = atan2(vx4,vy4);\\nq11 = sqrt(vx4*vx4 + vy4*vy4);\\n\\nzoom = 1.001;\\nrot = 0.00;\\nwarp = 0.2;\\nwave_a = 0;","pixel_eqs_eel":"dir = -q12 + asin(1);\\n\\nb1 = 0.1;\\nm1 = q11*25;\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx  -sin(dir)*b1;\\ny1 = yy  -cos(dir)*b1;\\nx2 = xx  +sin(dir)*b1;\\ny2 = yy  +cos(dir)*b1;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\n\\nsi1 = sigmoid(-d1,1000);\\nsi2 = sigmoid(-d2,1000);\\n\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2)*2;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2)*2;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.3, 0.3));\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 3.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_3.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\\n    (tmpvar_3 * texsize.zw)\\n   * 9.0))) - 0.01).xyz;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret3_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (((uv - 0.5) * vec2(-1.0, 1.0)) + 0.5);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = abs(((texture (sampler_main, uv).xyz * \\n    clamp ((((\\n      (texture (sampler_blur2, uv).xyz * scale2)\\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\\n  ) - (texture (sampler_main, tmpvar_4).xyz * \\n    clamp ((((\\n      (texture (sampler_blur2, tmpvar_4).xyz * scale2)\\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\\n  )));\\n  ret3_2 = (tmpvar_5 * sqrt(tmpvar_5));\\n  ret3_2 = (ret3_2 * vec3(0.9, 1.6, 2.3));\\n  ret3_2 = (ret3_2 * 3.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = pow (ret3_2, (1.0 - ret3_2));\\n  ret3_2 = tmpvar_6;\\n  uv_1 = (uv * 2.0);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = floor((fract(\\n    (uv_1 * 0.5)\\n  ) * 2.0));\\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_7)) + (tmpvar_7 * fract(\\n    (1.0 - uv_1)\\n  )));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = rad;\\n  tmpvar_8.y = uv_1.y;\\n  uv_1 = tmpvar_8;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((0.5 - tmpvar_8.yx) + 0.5);\\n  ret_3 = (texture (sampler_main, tmpvar_8.yx).xyz * clamp ((\\n    (((texture (sampler_blur2, tmpvar_8.yx).xyz * scale2) + bias2) * 2.8)\\n   - 0.13), 0.0, 1.0));\\n  vec3 tmpvar_10;\\n  tmpvar_10 = mix (ret_3, (texture (sampler_main, tmpvar_9).xyz * clamp (\\n    ((((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2) * 2.8) - 0.13)\\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\\n  ret_3 = (tmpvar_10 * tmpvar_10);\\n  ret_3 = (ret_3 * vec3(0.9, 1.6, 2.3));\\n  ret_3 = (ret_3 * 3.0);\\n  ret_3 = (max (tmpvar_6, (0.8 * vec3(\\n    (0.5 * dot (ret_3, vec3(0.32, 0.49, 0.29)))\\n  ))) - (roam_sin.xyz * roam_cos.zxy));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_3;\\n  ret = tmpvar_11.xyz;\\n }"}')},"./presets/converted/shifter - dark tides bdrv mix 2.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.35,"decay":1,"echo_zoom":2.144269,"echo_alpha":0.31,"echo_orient":3,"wave_mode":7,"wave_brighten":0,"wrap":0,"wave_a":4.1,"wave_scale":5.552,"wave_smoothing":0.504,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"cx":-1,"warp":0.72142,"sy":0.980296,"wave_g":0,"wave_b":0,"ob_size":0.5,"ob_r":1,"ib_size":0.5,"ib_r":1,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"y":0.9,"rad":0.15493,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":0.98608,"tex_ang":3.14159,"tex_zoom":0.999794,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"additive":1,"scaling":0.5033,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"bl = 3.8;\\nul = 7.9;\\nrate = 11.9;\\ncha = .01;\\n\\ngv = if(above(gv,bl),  if(below(gv,ul),  if(above(fps,rate),gv + cha,gv - cha),  ul-.1),bl+.1);\\n\\n\\n\\nmonitor = gv;\\n\\nwave_a = 0;\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\nra = 10;\\n\\n\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\n\\nrb = 1;\\nvav = tic*(vav*(1/tic - rb) + rb*(bass+treb+mid)*.33333);\\nq1 = treb_avg;\\nq2 = mid_avg;\\nq3 = bass_avg;\\n\\ndb = bass - bass_avg;\\n\\nit = (it + tic)*below(it,1);\\n\\nrb = .5*(1/tic);\\nbvb = tic*(bass*rb + (1/tic-rb)*bvb);\\nbd = bass - bvb;\\n\\nvm = vm - tic + swi;\\nswi = above(bd - vm,0);\\n\\nq4 = 1-swi;\\n\\ncm = if(above(iter,30) + equal(time,0),rand(3) + 1,cm);\\niter = (iter + tic)*(1-above(iter,30));\\nq5 = if(equal(cm,0),3,cm);\\n\\ncma = if(above(itar,5) + equal(time,0),int(vav*5),cma);\\nitar = (itar + tic)*(1-above(itar,5));\\n\\nq6 = int(vav*5);\\n\\n\\ndecay=0.97;\\nzoom=1.01;\\nsx=1;sy=1;","pixel_eqs_eel":"warp = bass;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = ((texture (sampler_main, uv_orig).xyz * vec3(0.97, 1.0, 0.97)) - vec3(0.03, 0.0, 0.03));\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_blur1, uv_orig);\\n  ret_1.z = (ret_1.z + ((\\n    (tmpvar_2.xyz * scale1)\\n   + bias1).z * 0.45));\\n  ret_1.x = (ret_1.x + ((\\n    ((tmpvar_2.xyz * scale1) + bias1)\\n  .z * 0.05) + (\\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\\n  .z * 0.05)));\\n  ret_1.z = (ret_1.z - ret_1.x);\\n  ret_1.y = clamp (texture (sampler_pw_main, uv_orig).y, 0.0, 1.0);\\n  ret_1 = (ret_1 * 0.98);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.z = 0.0;\\n  tmpvar_2.xy = texsize.zw;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (tmpvar_2 * 2.5);\\n  ret_1 = (texture (sampler_main, uv).xyz * 0.5);\\n  ret_1 = (ret_1 + (vec3(3.4, 2.38, 1.02) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_3.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_3.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_1 = (ret_1 + (vec3(0.68, 1.7, 2.38) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_3.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_3.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_1 = (ret_1 * 1.5);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }"}')},"./presets/converted/shifter - escape (sigur ros).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"wave_brighten":0,"wave_a":0.005,"wave_scale":0.167,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":0.107,"zoomexp":4.10046,"warp":0.01,"wave_x":0.95,"wave_y":1,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":34,"thickoutline":1,"textured":1,"x":0.75,"rad":0.30478,"tex_ang":1.5708,"tex_zoom":0.82773,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"rad = .3;\\ntex_zoom = .28;\\ntex_zoom = 1/rad*tex_zoom;\\n\\nx = .5 + sin(time*.957)*.1;"},{"baseVals":{"sides":74,"thickoutline":1,"textured":1,"x":0.25,"rad":0.45378,"tex_zoom":0.5033,"g":1,"b":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"rad = .3;\\ntex_zoom = .3;\\ntex_zoom = 1/rad*tex_zoom;\\n\\nx = .5 + sin(time)*.15;"},{"baseVals":{"enabled":1,"sides":84,"additive":1,"thickoutline":1,"num_inst":3,"rad":0.01,"tex_zoom":0.5033,"r":0,"b":0.2,"a":0.6,"g2":0,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"ti = q2 + instance*2.45;\\n\\nx = .5 + (.26*sin(ti*.95) + .14*sin(ti*2.80))*1.3;\\n//y = .5 + (.26*cos(ti*1.05) + .14*cos(ti*2.13))*.5;\\ny = .5;\\n\\nym = (q3 + instance*1.33)*.5;\\nym = ym-int(ym);\\n\\ny = y + (ym-.5)*2;\\n\\nrad = bass*bass*.25;\\nrad = q1*(.3+max(0,y)*.5);"},{"baseVals":{"sides":74,"additive":1,"rad":0.16777,"r2":1,"g2":0,"a2":1,"border_b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ti = -time*.3;\\nx = .5 + .3*sin(ti);\\ny = .5 + .3*cos(ti);\\n\\nti = -time*2.3;\\nx = x + .2*sin(ti);\\ny = y + .2*cos(ti);"}],"waves":[{"baseVals":{"enabled":1,"samples":41,"usedots":1,"additive":1,"scaling":0.01,"smoothing":0,"g":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = rand(1001)*.001;\\ny = rand(1001)*.001;\\n\\n//r = rand(1001)*.001;\\ng=above(rand(1001)*.001,.9)*.5;\\nb = 0;\\nr = 0;\\n"},{"baseVals":{"samples":61,"additive":1,"scaling":0.0124,"smoothing":0,"b":0,"enabled":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"","point_eqs_eel":"x = (sample-.5)*.02 + .2;\\ny = .5;\\nr = 1;\\ng = 1;\\nb = 1;"},{"baseVals":{"samples":31,"usedots":1,"thick":1,"scaling":0.01303,"smoothing":0,"enabled":0},"init_eqs_eel":"t8 = 1;\\nt1 = q5;","frame_eqs_eel":"t1 = q5;\\nt2 = q4;\\nt3 = q6;","point_eqs_eel":"t8 = -t8;\\nd1 = 0.15 + t8*0.01 - value1*0.1*(t8+1);\\ndir1 = t2;\\ndir2 = t2*0.5 + t1*3/2 - t3*3;\\ndir3 = sample*asin(1)*4 + t3 - t2*5/6 + t1*3/2;\\n\\nx = 0.5 + sin(dir1)*0.1 + sin(dir2)*0.05 + sin(dir3)*d1;\\ny = 0.5 + cos(dir1)*0.1 + cos(dir2)*0.05 + cos(dir3)*d1;\\ny = (y-0.5)*1.2 + 0.5;"},{"baseVals":{"samples":511,"sep":4,"thick":1,"additive":1,"scaling":0.02345,"smoothing":0,"a":0.99,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q4*0.75;\\nt2 = q5*0.75;\\nt3 = q6*0.75;\\nt4 = q4*0.75;\\nt5 = q5*0.75;\\nt6 = q6*0.75;\\nt8 = 1;","point_eqs_eel":"\\npi = asin(1);\\nn = 80;\\nt8 = -t8;\\nrd = 0.075+0.02*(t8+1)/2;\\nxx = sin(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\\nyy = cos(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\\nzz = sin(sample*pi*n)*rd;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz)*0.004;\\nd1 = 1;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\n\\n\\n\\nw1 = d*t4;\\nw2 = d*t5;\\nw3 = d*t6;\\n\\ns1 = sin(t1*1+w1);\\ns2 = sin(t2*1+w2);\\ns3 = sin(t3*1+w3);\\nc1 = cos(t1*1+w1);\\nc2 = cos(t2*1+w2);\\nc3 = cos(t3*1+w3);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 0.5;\\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*2 - time*0.8;//sample*pi*4-0*time +t4*3;\\nc=2;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = sigmoid(-z,7)+0.;\\n"}],"init_eqs_eel":"","frame_eqs_eel":"zoom = 1;\\ndecay = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\ntb = tb + tic*bass*bass*.1 + tic*.2;\\nq2 = tb;\\n\\nt2 = t2 + tic*bass*bass*.2 + tic*.1;\\nq3 = t2;\\n\\nbav = bav + (bass-bav)*tic*.01;\\n\\nq1 = bass-bav;\\nq1 = pow(q1,2);\\nq1 = bass*bass;\\nq1 = q1*.5;\\n\\nmonitor = bass - bav;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = clamp (((texture (sampler_pw_main, uv_orig).xyz * vec3(1.0, 1.0, 0.97)) - vec3(0.0, 0.0, 0.001)), 0.0, 1.0);\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_pw_main, (uv_orig + ((\\n    (texture (sampler_noise_hq, fract(((\\n      ((uv_orig * texsize.xy) * texsize_noise_lq.zw)\\n     + rand_frame.xy) * 8.0))).xy - 0.5)\\n   * 6.0) * texsize.zw)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = tmpvar_2.xyz;\\n  float tmpvar_4;\\n  vec2 x_5;\\n  x_5 = (ret_1.xy - uv_orig);\\n  tmpvar_4 = sqrt(dot (x_5, x_5));\\n  float tmpvar_6;\\n  vec2 x_7;\\n  x_7 = (tmpvar_2.xy - uv_orig);\\n  tmpvar_6 = sqrt(dot (x_7, x_7));\\n  if ((tmpvar_4 > tmpvar_6)) {\\n    ret_1.xy = tmpvar_3.xy;\\n    ret_1.z = tmpvar_3.z;\\n  };\\n  ret_1.xy = (ret_1.xy * pow (ret_1.z, 0.01));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_1;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv).zzz;\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((pow (\\n    mix (vec3((((texture (sampler_blur1, uv).xyz * scale1) + bias1).z + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).z)), tmpvar_1, tmpvar_1)\\n  , vec3(8.0, 2.0, 0.8)) * 1.25) - 0.25);\\n  ret = tmpvar_2.xyz;\\n }"}')},"./presets/converted/shifter - liquid circuitry - conjugoth.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":2,"wave_brighten":0,"wave_a":1,"wave_scale":0,"wave_smoothing":0.9,"wave_mystery":0.173,"warpscale":0.107,"zoomexp":4.10046,"warp":0.01,"wave_g":0,"wave_b":0,"wave_x":0.448,"wave_y":0.122,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":1,"mv_y":1,"mv_dx":0.087,"mv_dy":0.343,"mv_l":1.663,"mv_r":0.89,"mv_g":0.03,"mv_b":0.881,"mv_a":0.199,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":1.32775,"tex_zoom":0.57959,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"border_r = border_r + 1.5*sin(q2*1.13);\\nborder_b = border_b + 0.5*sin(q2*1.23);\\nborder_g = border_g + 0.5*sin(q2*1.33);\\n//ang = 0.503 + (bass_att * 0.04);\\nmy_ang = my_ang + (0.005 + (0.001 * bass));\\nang = my_ang;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//begin beat code\\nvolume = 0.3*(bass+mid);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.05*(meanbass_att*19 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\n//Adjust responsiveness: To increase responsiveness, set the \\"0.96 and \\"0.996\\" on the next line to slightly lower values. Higher values decrease responsiveness.\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\n//end beat code\\n\\nzoom = 1;\\ndecay = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\nq2 = 1;\\n\\nq1=1;\\nvol = vol + ((alt + bass + mid)/3-vol)*tic*1;\\nq5 = vol*vol*vol*2;\\n\\n\\nq8 = sin(time)*.5;\\nq9 = sin(time*.75)*.5;\\n\\nsw = abs(sw - beat);\\nan = an + tic*.5*(1-2*sw);\\n\\n\\nq7 = 1+(pow(q8,2) + pow(q9,2))*1;\\nq10 = sin(an);\\nq11 = cos(an);\\n\\nsp = sp + tic*vol*vol*.5;\\n\\nq12 = sp;\\n\\nmonitor = q12;\\nvol2=bass+treb+mid;\\nmtime=mtime+vol2;\\nq1=3-sin(mtime*.01)*.1;","pixel_eqs_eel":"//zoom = pow(rad,2)+.01;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\\n  tmpvar_4.y = tmpvar_3.y;\\n  ret_1 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_2 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_3 * 0.01)\\n  .xy)).xyz + (tmpvar_2 * 0.1)));\\n  float tmpvar_5;\\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\\n  ret_1 = (ret_1 - 0.04);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 uv3_1;\\n  vec2 uvm_2;\\n  vec3 ret_3;\\n  uvm_2 = (((\\n    ((uv - 0.5) * q7)\\n   * \\n    (1.0/((((1.0 - \\n      (rad * 0.1)\\n    ) + (q9 * \\n      (uv.x - 0.5)\\n    )) + (q8 * (uv.y - 0.5)))))\\n  ) + 0.5) - 0.5);\\n  uvm_2 = (((\\n    (q10 * uvm_2)\\n   + \\n    ((vec2(1.0, -1.0) * q11) * uvm_2.yx)\\n  ) * aspect.yw) + 0.5);\\n  uvm_2 = (abs((\\n    fract(((uvm_2 + q12) * 0.5))\\n   - 0.5)) * 2.0);\\n  uv3_1 = (((texture (sampler_main, uvm_2).zx - 0.37) * 0.13) + uvm_2);\\n  vec3 tmpvar_4;\\n  tmpvar_4.x = (roam_cos.x * 0.3);\\n  tmpvar_4.y = (roam_cos.z * 0.2);\\n  tmpvar_4.z = (roam_sin.y * 0.4);\\n  ret_3 = (texture (sampler_pw_main, uvm_2).yzx + tmpvar_4);\\n  ret_3 = (pow (mix (vec3(\\n    ((((texture (sampler_blur1, uv3_1).xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv3_1).xyz * scale3) + bias3).z) + (0.1 * roam_cos.y))\\n  ), ret_3, ret_3), vec3(0.3, 2.0, 1.0)) - 0.25);\\n  ret_3 = (ret_3 * ((texture (sampler_blur3, uv3_1).xyz * scale3) + bias3).y);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_3;\\n  ret = tmpvar_5.xyz;\\n }"}')},"./presets/converted/suksma - Hexcollie - Julian Carnival - shimmy dumb grid.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":0.5,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"wave_a":0.001,"wave_scale":0.64,"wave_smoothing":0.27,"warpanimspeed":0.01,"warpscale":0.01,"zoom":9.86086,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.96,"ob_size":0.015,"ob_r":0.84,"ob_g":0.7,"ob_b":1,"ob_a":0.18,"ib_size":0.5,"ib_r":0.98,"ib_g":0.27,"ib_b":0.24,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"rad":0.2,"b":0.4,"a":0.5,"a2":0.2,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang = time*0.4;;\\nx = 0.5 + 0.3*cos(time*1.23) + 0.03*cos(time*0.7);\\ny = 0.5 + 0.3*sin(time*1.43) + 0.03*sin(time*0.7);\\nr =0.5 + 0.5*sin(q8*0.613 + 1);\\ng = 0.5 + 0.5*sin(q8*0.763 + 2);\\nb = 0.5 + 0.5*sin(q8*0.771 + 5);\\nr2 = 0.5 + 0.5*sin(q8*0.635 + 4);\\ng2 = 0.5 + 0.5*sin(q8*0.616+ 1);\\nb2 = 0.5 + 0.5*sin(q8*0.538 + 3);"},{"baseVals":{"enabled":1,"sides":32,"rad":0.2,"a":0.5,"a2":0.2},"init_eqs_eel":"","frame_eqs_eel":"ang = time*0.4;;\\nx = 0.5 + 0.3*cos(time*1.104) + 0.03*cos(time*0.7);\\ny = 0.5 + 0.3*sin(time*1.27) + 0.03*sin(time*0.7);\\nr =0.5 + 0.5*sin(q8*0.613 + 1);\\ng = 0.5 + 0.5*sin(q8*0.763 + 2);\\nb = 0.5 + 0.5*sin(q8*0.771 + 5);\\nr2 = 0.5 + 0.5*sin(q8*0.635 + 4);\\ng2 = 0.5 + 0.5*sin(q8*0.616+ 1);\\nb2 = 0.5 + 0.5*sin(q8*0.538 + 3);"},{"baseVals":{"enabled":1,"rad":0.2,"a":0.5,"a2":0.2},"init_eqs_eel":"","frame_eqs_eel":"ang = time*0.4;;\\nx = 0.5 + 0.3*cos(time*1.23) + 0.03*cos(time*0.9);\\ny = 0.5 + 0.3*sin(time*1.18) + 0.03*sin(time*0.9);\\nr =0.5 + 0.5*sin(q8*0.413 + 1);\\ng = 0.5 + 0.5*sin(q8*0.363 + 2);\\nb = 0.5 + 0.5*sin(q8*0.871 + 5);\\nr2 = 0.5 + 0.5*sin(q8*0.835 + 4);\\ng2 = 0.5 + 0.5*sin(q8*0.686+ 1);\\nb2 = 0.5 + 0.5*sin(q8*0.938 + 3);\\nsides = 360;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1 = vvb*2;//0.5 + vb - vvb;\\nq2 = vvm*2;//0.5 + vm - vvm;\\nq3 = vvt*2;//0.5 + vt - vvt;\\nv=2;\\nbb = bb - vvb*v;\\nmm = mm - vvm*v;\\ntt = tt - vvt*v;\\nq4 = -bb;\\nq5 = -mm;\\nq6 = -tt;\\nq4=(q1+q2+q3)*5;\\nq5=(q1+q2+q3)*5;\\nq6=(q1+q2+q3)*5;\\nq7=(q1+q2+q3)*1;\\nq8=(q1+q2+q3)*5;\\nq9=(q1+q2+q3)*5;\\nq10=(q1+q2+q3)*5;\\nq11=(q1+q2+q3)*5;\\nq12=(q1+q2+q3)*5;\\nq13=(q1+q2+q3)*5;\\nq14=(q1+q2+q3)*5;\\nq15=(q1+q2+q3)*5;\\nq16=(q1+q2+q3)*5;\\nq17=(q1+q2+q3)*5;\\nq18=(q1+q2+q3)*5;\\nq19=(q1+q2+q3)*5;\\nq20=(q1+q2+q3)*5;\\nq21=(q1+q2+q3)*5;\\nq22=(q1+q2+q3)*5;\\nq23=(q1+q2+q3)*5;\\nq24=(q1+q2+q3)*5;\\nq25=(q1+q2+q3)*5;\\nq26=(q1+q2+q3)*5;\\nq27=(q1+q2+q3)*5;\\nq28=(q1+q2+q3)*5;\\nq29=(q1+q2+q3)*5;\\nq30=(q1+q2+q3)*5;\\nq31=(q1+q2+q3)*5;\\nq32=(q1+q2+q3)*5;\\n\\necho_orient=1 + above(sin(time/2), 0 );\\nwrap=above(sin(time/1), 0 );\\nwarp=0.0;\\nzoom=1.00 + sin(time/1)/30;\\nmv_x=sin(time/10)*12 + 52;\\nmv_y=cos(time/10)*8 + 40;\\nsparkadv=sparkadv-0.03 + below(sparkadv, 1);\\ngamma=1 + bass*bass_att","pixel_eqs_eel":"","warp":" shader_body { \\n  float conway_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_3.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_2.y = texture (sampler_pc_main, (uv - (tmpvar_3 * 0.004))).y;\\n  ret_2.y = (ret_2.y + ((\\n    ((ret_2.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y) - 0.1)\\n   * 0.1) + 0.02));\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (vec2(0.0, 1.0) * texsize.zw);\\n  ret_2.z = (texture (sampler_fc_main, (uv - tmpvar_4)).z - 0.004);\\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).x + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + tmpvar_4)).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).x);\\n  conway_1 = (conway_1 - fract(conway_1));\\n  float tmpvar_5;\\n  tmpvar_5 = clamp (texture (sampler_pc_main, uv_orig).x, 0.0, 1.0);\\n  ret_2.x = (clamp ((1.0 - \\n    abs((conway_1 - 3.0))\\n  ), 0.0, 1.0) * (1.0 - tmpvar_5));\\n  ret_2.x = (ret_2.x + (clamp (\\n    max ((1.0 - abs((conway_1 - 2.0))), (1.0 - abs((conway_1 - 3.0))))\\n  , 0.0, 1.0) * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 moebius_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q11;\\n  tmpvar_3.y = q12;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q17;\\n  tmpvar_4.y = q18;\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  tmpvar_5 = (tmpvar_6 * aspect.xy);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((tmpvar_5.x * q15) - (tmpvar_5.y * q16));\\n  tmpvar_7.y = ((tmpvar_5.x * q16) - (tmpvar_5.y * q15));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 + tmpvar_4);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = ((q13 * tmpvar_8.x) + (q14 * tmpvar_8.y));\\n  tmpvar_9.y = ((q14 * tmpvar_8.x) - (q13 * tmpvar_8.y));\\n  moebius_1 = (((tmpvar_9 / \\n    ((tmpvar_8.x * tmpvar_8.x) + (tmpvar_8.y * tmpvar_8.y))\\n  ) + tmpvar_3) * 0.5);\\n  float tmpvar_10;\\n  tmpvar_10 = sqrt(dot (moebius_1, moebius_1));\\n  moebius_1 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((moebius_1 * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.95));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (0.5 + (tmpvar_6 * 0.2));\\n  ret_2 = (texture (sampler_main, tmpvar_11).z * vec3(0.4, 0.0, 0.7));\\n  ret_2 = (mix (ret_2, vec3(0.0, 1.0, 1.0), vec3(clamp (texture (sampler_fc_main, moebius_1).y, 0.0, 1.0))) * (1.4 - pow (\\n    (tmpvar_10 * 0.8)\\n  , 0.3)));\\n  ret_2 = (mix (mix (\\n    mix (ret_2, vec3(4.0, 1.0, 0.0), vec3(((clamp (\\n      (texture (sampler_fc_main, tmpvar_11).y - texture (sampler_pc_main, tmpvar_11).y)\\n    , 0.0, 1.0) * 4.0) * (tmpvar_10 * tmpvar_10))))\\n  , vec3(-4.0, -4.0, -4.0), texture (sampler_main, tmpvar_11).xxx), vec3(2.0, 2.0, 2.0), vec3((texture (sampler_pc_main, tmpvar_11).x * 0.75))) - (roam_sin.zyx * roam_cos.ywx));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_2;\\n  ret = tmpvar_12.xyz;\\n }"}')},"./presets/converted/suksma - Rovastar - Sunflower Passion (Enlightment Mix)_Phat_edit + flexi und martin shaders - circumflex in character classes in regular expression.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.98,"echo_zoom":2.448,"echo_alpha":0.5,"wave_thick":1,"wrap":0,"wave_a":3.645,"wave_scale":1.951,"wave_smoothing":0.5,"wave_mystery":-0.5,"warpscale":2.853,"zoomexp":2.1,"zoom":1.025,"warp":1.29077,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.13518,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = 0.3 + 0.05*sin(0.89*q8);\\ny = 0.4 - 0.05*cos(0.77*q8);\\n\\nr = 0.25+0.25*sin(time*0.7679);\\ng = 0.25+0.25*sin(time*0.8079);\\nb = 0.25+0.25*sin(time*0.7339);\\nr2 = 0.25+0.25*sin(time*0.6979);\\ng2 = 0.25+0.25*sin(time*0.849);\\nb2 = 0.25+0.25*sin(time*0.8079);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.06623,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = 0.3 - 0.05*sin(0.7089*q8);\\ny = 0.4 + 0.05*cos(0.5077*q8);\\n\\nr = 0.25+0.25*sin(time*0.6479);\\ng = 0.25+0.25*sin(time*0.5079);\\nb = 0.25+0.25*sin(time*0.9339);\\nr2 = 0.25+0.25*sin(time*0.779);\\ng2 = 0.25+0.25*sin(time*0.707);\\nb2 = 0.25+0.25*sin(time*0.747);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.03646,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = 0.3 + 0.05*sin(0.679*q8);\\ny = 0.4 - 0.05*cos(0.877*q8);\\n\\nr = 0.25+0.25*sin(time*0.5679);\\ng = 0.25+0.25*sin(time*0.4079);\\nb = 0.25+0.25*sin(time*1.1339);\\nr2 = 0.25+0.25*sin(time*0.9979);\\ng2 = 0.25+0.25*sin(time*0.891);\\nb2 = 0.25+0.25*sin(time*0.713);"},{"baseVals":{"enabled":1,"sides":100,"rad":0.0122,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = 0.3 + 0.05*sin(0.916*q8);\\ny = 0.4 - 0.05*cos(0.977*q8);\\n\\nr = 0.25+0.25*sin(time*1.1679);\\ng = 0.25+0.25*sin(time*1.18079);\\nb = 0.25+0.25*sin(time*1.17339);\\nr2 = 0.25+0.25*sin(time*1.16979);\\ng2 = 0.25+0.25*sin(time*1.1849);\\nb2 = 0.25+0.25*sin(time*1.81079);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1 = vvb*2;//0.5 + vb - vvb;\\nq2 = vvm*2;//0.5 + vm - vvm;\\nq3 = vvt*2;//0.5 + vt - vvt;\\nq4=(q1+q2+q3)*5;\\nq5=(q1+q2+q3)*5;\\nq6=(q1+q2+q3)*5;\\nq7=(q1+q2+q3)*5;\\nq8=(q1+q2+q3)*5;\\nq9=(q1+q2+q3)*5;\\nq10=(q1+q2+q3)*5;\\nq11=(q1+q2+q3)*5;\\nq12=(q1+q2+q3)*5;\\nq13=(q1+q2+q3)*5;\\nq14=(q1+q2+q3)*5;\\nq15=(q1+q2+q3)*5;\\nq16=(q1+q2+q3)*5;\\nq17=(q1+q2+q3)*5;\\nq18=(q1+q2+q3)*5;\\nq19=(q1+q2+q3)*5;\\nq20=(q1+q2+q3)*5;\\nq21=(q1+q2+q3)*5;\\nq22=(q1+q2+q3)*5;\\nq23=(q1+q2+q3)*5;\\nq24=(q1+q2+q3)*5;\\nq25=(q1+q2+q3)*5;\\nq26=(q1+q2+q3)*5;\\nq27=(q1+q2+q3)*5;\\nq28=(q1+q2+q3)*5;\\nq29=(q1+q2+q3)*5;\\nq30=(q1+q2+q3)*5;\\nq31=(q1+q2+q3)*5;\\nq32=(q1+q2+q3)*5;\\n\\n//wave_r = 0.0 + 0.000*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\n//wave_g = 0.0 + 0.000*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\n//wave_b = 0.0 + 0.000*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\n//zoom = zoom + 0.01*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\n//rot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\n//decay = decay - 0.01*equal(frame%6,0);\\nwarp=0;\\n//zoom =1;\\nrot =0;\\ncx=0.5;\\ncy=0.5;\\nq1 = 0.5 + 0.1*sin(time);\\nq2 = 0.5 - 0.1*cos(time);\\nwave_a =0;\\ndecay=.95;\\nq1=0.5 +0.1*sin(q8);\\nq2=0.5;\\n\\n\\nq8 = oldq8+ 0.003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 =q8;\\nmybass  = mybass + 0.01*(bass + bass_att);\\n\\n//rot =1 + 0.15*sin(mybass*0.1789);\\n//zoom = 1.6 + 0.1*sin(mybass*0.786);\\nzoom = 1.09;\\n//rot =0.12;\\n//cx = 0.4;\\n//cy = 0.4;\\nq1=0.5 +0.00*sin(0.12*q8);\\nq2=0.5 -0.00*cos(0.177*q8);","pixel_eqs_eel":"myx = (x-q1)*1.1;\\nmyy= (y-q2)*1.1;\\nmyrad = (myx*myx) + (myy*myy);\\ndx = (0.5+0.02*sin(q8))*(myy/(myrad+1));\\ndy = -(0.5+0.02*sin(q8*0.897))*(myx/(myrad+1));\\nrd=bass*rad;\\nrot=rd/10;\\n\\nsy=1.02+(rad/10);\\nsx=sy-myrad;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv_orig - 0.5) * vec2(1.81, 1.81));\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = ((tmpvar_1.x * tmpvar_1.x) - (tmpvar_1.y * tmpvar_1.y));\\n  tmpvar_2.y = ((2.0 * tmpvar_1.x) * tmpvar_1.y);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (texture (sampler_fc_main, (tmpvar_2 + vec2(0.448, 0.701))) - 0.004).xyz;\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec2 uv2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (time / 2.0);\\n  dist_3 = (1.0 - fract(tmpvar_5));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 8.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = q1;\\n  tmpvar_6.y = q2;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = fract(((\\n    ((3.0 * uv_1) * dist_3)\\n   + 0.5) + (tmpvar_6 * 0.05)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_7).xyz - ((texture (sampler_blur1, \\n    (tmpvar_7 + 0.003)\\n  ).xyz * scale1) + bias1));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\\n  uv2_4.x = ((uv_1.x * -0.4990803) - (uv_1.y * 0.8665558));\\n  uv2_4.y = ((uv_1.x * 0.8665558) + (uv_1.y * -0.4990803));\\n  dist_3 = (1.0 - fract((0.3333333 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 8.0);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = q1;\\n  tmpvar_8.y = q2;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = fract(((\\n    ((3.0 * uv2_4) * dist_3)\\n   + 0.5) + (tmpvar_8 * 0.05)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_9).xyz - ((texture (sampler_blur1, \\n    (tmpvar_9 + 0.003)\\n  ).xyz * scale1) + bias1));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  uv2_4.x = ((uv_1.x * -0.5018377) - (uv_1.y * -0.8649619));\\n  uv2_4.y = ((uv_1.x * -0.8649619) + (uv_1.y * -0.5018377));\\n  dist_3 = (1.0 - fract((0.6666667 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 8.0);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q1;\\n  tmpvar_10.y = q2;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = fract(((\\n    ((3.0 * uv2_4) * dist_3)\\n   + 0.5) + (tmpvar_10 * 0.05)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_11).xyz - ((texture (sampler_blur1, \\n    (tmpvar_11 + 0.003)\\n  ).xyz * scale1) + bias1));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  uv2_4.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\\n  uv2_4.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\\n  dist_3 = (1.0 - fract((1.0 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 8.0);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = q1;\\n  tmpvar_12.y = q2;\\n  vec2 tmpvar_13;\\n  tmpvar_13 = fract(((\\n    ((3.0 * uv2_4) * dist_3)\\n   + 0.5) + (tmpvar_12 * 0.05)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_13).xyz - ((texture (sampler_blur1, \\n    (tmpvar_13 + 0.003)\\n  ).xyz * scale1) + bias1));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = (xlat_mutableret1 * 4.0);\\n  ret = tmpvar_14.xyz;\\n }"}')},"./presets/converted/suksma - ed geining hateops - squeakers.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":1,"echo_zoom":2.221,"echo_alpha":0.6,"wave_mode":3,"additivewave":1,"wave_thick":1,"darken":1,"wave_a":0.001,"wave_scale":0.625,"wave_smoothing":0.9,"modwavealphastart":0.88,"modwavealphaend":1.98,"warpanimspeed":0.01,"warpscale":0.01,"fshader":1,"dx":0.005,"warp":0.01,"sx":0.9999,"sy":1.0018,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":0.8,"ob_b":0.7,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0.3,"mv_x":0,"mv_y":0,"mv_l":1,"mv_r":0.39,"mv_g":0.44,"mv_b":0.9},"shapes":[{"baseVals":{"sides":16,"thickoutline":1,"textured":1,"rad":0.97235,"ang":0.1884,"tex_ang":0.62832,"tex_zoom":0.77829,"g":1,"b":1,"a":0.9,"r2":1,"b2":1,"a2":0.5,"border_r":0.59,"border_g":0.81,"border_b":0.69,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//DMT=1-below((bass_att+mid_att+treb_att)/3,0.7);\\n//a=DMT;\\n//a2=.5*DMT;\\n//border_a=0.4*DMT;\\n//atime=atime+(above( sin(time),0 )*0.02 );\\n//ang=0.188+((sin(atime/5)*0.5+0.5)*2.39);\\n//x=(sin(atime*0.3)*0.07)+0.5;\\n//y=(cos(atime*0.1)*0.07)+0.5;\\n//rad=((bass+mid+treb)/6)*1.4+0.2;\\n//sides=bass*16"},{"baseVals":{"enabled":1,"sides":5,"thickoutline":1,"rad":0.4149,"tex_ang":0.25133,"tex_zoom":1.136,"r":0.36,"g2":0,"b2":0.2,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nadv=adv+(bass*bass)/15;\\n\\nr=int(rand(10))*0.1*0.5+0.5;\\ng=r;\\nb=r;\\n\\nx=int(rand(100))*0.01*0.5 + 0.25;\\ny=int(rand(100))*0.01*0.5 + 0.25;\\nrad=int(rand(100))*0.01*0.4+0.1;\\nang=rad"},{"baseVals":{"sides":24,"textured":1,"x":0.2,"y":0.8,"rad":0.59958,"tex_ang":1.25664,"tex_zoom":0.49831,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"x":0.86,"y":0.2,"rad":0.80814,"tex_zoom":0.45112,"g":1,"b":1,"r2":1,"b2":0.9,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"thick":1,"additive":1,"scaling":100,"smoothing":0.9,"r":0,"g":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x=cos(time)*0.1;\\ny=sin(time)*0.1"},{"baseVals":{"scaling":81.95444,"smoothing":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"wave_x=1;","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\n\\ndecay=1.0;\\nzoom=1.009;\\ndx=0;dy=0;sx=1.000001;sy=0.999999;\\n\\nmv_r=.360+(((cos(time/5)*0.3)+0.5*0.5)*0.1);\\nmv_g=.390+(((sin(time/7)*0.3)+0.5*0.5)*0.1);\\nmv_b=.500+((sin((time/7)+0.9)+0.5*0.5)*0.1);\\n\\n\\ncx=-1;cy=2;rot=-treb*0.002;\\n\\ncx=sin(time*0.1)*1.5 + 0.5;\\ncy=cos(time*0.2)*1.5 + 0.5","pixel_eqs_eel":"//adv=min( (bass*bass*bass), 1);\\n//warp=1*((( atan(time/3) *0.5+0.5)*3)* (x*rad)*2 )+( (y*ang)*2 )*rad;\\n//warp=warp*adv;\\n\\n//dx=cos(y)*0.005*(rad+2)*treb ;\\n//dy=sin(x)*0.005*(rad+2)*treb\\n\\n//Do people that don\'t do drugs make shit like this??\\n//flexi per vertex\\ncx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\ndir = bass;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\nx1 = if( above(d,0.3),0,  sin(y-cy1)*0.05*dir);\\ny1 = if( above(d,0.3),0, -sin(x-cx1)*0.05*dir);\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\ndir = -mid*2;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\nx2 = if( above(d,0.2),0,  sin(y-cy1)*0.05*dir);\\ny2 = if( above(d,0.2),0, -sin(x-cx1)*0.05*dir);\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\ndir = treb*3;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\nx3 = if( above(d,0.1),0,  sin(y-cy1)*0.05*dir);\\ny3 = if( above(d,0.1),0, -sin(x-cx1)*0.05*dir);\\ndx = dx+x1+x2+x3;\\ndy = dy+y1+y2+y3;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  uv_1 = (mix (uv_orig, uv, vec2((\\n    (dot (texture (sampler_main, mix (uv_orig, uv, vec2(4.0, 4.0))).xyz, vec3(0.32, 0.49, 0.29)) - dot (((texture (sampler_blur1, \\n      mix (uv_orig, uv, vec2(-8.0, -8.0))\\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\\n   * 8.0))) + ((\\n    (texture (sampler_noise_lq, tmpvar_3) - 0.5)\\n  .xy * texsize.zw) * 0.3));\\n  ret_2 = ((texture (sampler_main, uv_1).xyz + (\\n    (texture (sampler_noise_lq, tmpvar_3) - 0.5)\\n   * 0.004).xyz) + -0.001);\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\\n    ret_2.y = (ret_2.y + (tmpvar_4.x * 0.5));\\n  };\\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\\n    ret_2.z = (ret_2.z + (tmpvar_4.y * 0.5));\\n  };\\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\\n    ret_2.x = (ret_2.x + (tmpvar_4.z * 0.5));\\n  };\\n  ret_2 = (ret_2 - ((roam_sin.xyz * slow_roam_cos.wzy) * 0.5));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * d_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * d_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  dy_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * d_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * d_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   * 2.0) + (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .y * 2.0))) * vec3(0.2, 0.3, 0.6));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q19;\\n  tmpvar_10.y = q20;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = fract(((0.5 + \\n    (uv - 0.5)\\n  ) + (tmpvar_10 * vec2(-1.0, 1.0))));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = dx_3.y;\\n  tmpvar_12.y = dy_2.y;\\n  vec3 tmpvar_13;\\n  tmpvar_13 = ((mix (ret_5, vec3(3.0, 2.0, 1.0), \\n    ((texture (sampler_blur3, (tmpvar_11 - tmpvar_12)).xyz * scale3) + bias3)\\n  .xxx) * (vec3(1.0, 1.0, 1.0) - \\n    ((texture (sampler_blur2, (tmpvar_11 - dz_1)).xyz * scale2) + bias2)\\n  .xxx)) * (vec3(1.0, 1.0, 1.0) - vec3((0.75 * texture (sampler_main, tmpvar_11).x))));\\n  ret_5 = tmpvar_13;\\n  vec4 tmpvar_14;\\n  tmpvar_14 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * dz_1.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_13.x > (q26 * q13)) && (tmpvar_13.x <= (q23 * q11)))) {\\n    ret_5.z = (tmpvar_13.z - (tmpvar_14.x * 0.5));\\n  };\\n  if (((tmpvar_13.y > (q25 * q11)) && (tmpvar_13.y <= (q22 * q12)))) {\\n    ret_5.x = (tmpvar_13.x - (tmpvar_14.y * 0.5));\\n  };\\n  if (((ret_5.z > (q24 * q12)) && (ret_5.z <= (q21 * q13)))) {\\n    ret_5.y = (tmpvar_13.y - (tmpvar_14.z * 0.5));\\n  };\\n  vec3 tmpvar_15;\\n  tmpvar_15 = mix ((ret_5 * (vec3(1.0, 1.0, 1.0) - vec3(\\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 4.0)\\n  ))), vec3(2.0, 2.0, 2.0), texture (sampler_main, uv).zzz);\\n  ret_5 = tmpvar_15;\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = tmpvar_15;\\n  ret = tmpvar_16.xyz;\\n }"}')},"./presets/converted/suksma - heretical crosscut playpen.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":2.05,"decay":0.99,"echo_zoom":1.008,"echo_alpha":0.5,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.625,"wave_scale":1.187,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"fshader":0.19,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0.5},"shapes":[{"baseVals":{"enabled":1,"sides":9,"thickoutline":1,"textured":1,"rad":0.12566,"ang":3.39292,"tex_ang":0.3768,"tex_zoom":0.32473,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0.03,"border_g":0.67,"border_b":0.79,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x=x+sin(time*0.9)*.13;\\ny=y+sin(time*0.5)*.16;\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"rad":0.12572,"a2":1,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"//: Aderrasi was here too\\nrad = rad -0.2 + 0.2*bass_att;;\\nr = r + 0.25*sin(1.1*time) + 0.2*sin(0.25*time);\\ng = g + 0.25*cos(1.5*time) + 0.22*cos(0.24*time);\\nb = b + 0.25*sin(0.6*time) + 0.27*cos(0.7*time);\\nr2 = 1-abs(r);\\ng2 = 1-abs(g);\\nb2 = 1-abs(b);\\nang = ang + 3*abs(tan(1*time));\\nx = x + 0.14*cos(time) + 0.2*sin(0.42*time);\\ny = y + 0.16*sin(1.2*time) + 0.15*sin(0.8*time) + 0.21*cos(0.45*time);\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;"},{"baseVals":{"enabled":1,"ang":0.03,"r":0.21,"g":0.44,"b":0.23,"r2":0.18,"b2":0.11,"a2":1,"border_r":0.15,"border_g":0.4,"border_b":0.48,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"ang = time*2.4;\\nx = 0.5 + 0.22*cos(time*3.3) + 0.14*cos(time*1.2);\\ny = 0.5 + 0.26*sin(time*3.1) + 0.13*sin(time*1.7);\\nr = 0.5 + 0.5*sin(time*1.013 + 5);\\ng = 0.5 + 0.5*sin(time*1.063 + 2);\\nb = 0.5 + 0.5*sin(time*1.054 + 1);\\nr2 = 0.5 + 0.5*sin(time*1.085 + 3);\\ng2 = 0.5 + 0.5*sin(time*1.056+ 1);\\nb2 = 0.5 + 0.5*sin(time*1.038 + 4);\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;"},{"baseVals":{"enabled":1,"sides":5,"x":0.51,"y":0.49,"rad":0.09986,"ang":0.06283,"a2":1,"border_r":0.46,"border_g":0.28,"border_b":0.54,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.07*cos(q4*0.5) + 0.31*sin(time*3.5);\\ny = 0.5 + 0.07*sin(q4*0.5) + 0.31*cos(time*3.5);\\nr = 0.5 + 0.5*sin(time*1.013 + 2);\\ng = 0.5 + 0.5*sin(time*0.863 + 3);\\nb = 0.5 + 0.5*sin(time*1.054 + 1);\\nr2 = 0.5 + 0.5*sin(time*1.185 + 3);\\ng2 = 0.5 + 0.5*sin(time*1.356+ 2);\\nb2 = 0.5 + 0.5*sin(time*0.738 + 4);\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"vol = 0; p1 = 0;\\nvx = .2; vy = -0.1;\\nkx = 0; ky = 0;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.999, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\n\\nvol = bass_att + treb_att;\\nv2 = v2 * dec_med + vol * (1-dec_med) ;\\nq26 = max(atan (vol - v2),0);\\nq27 = index + 1;\\n\\nsw = sw*dec_med + (1-dec_med)*(index2%2);\\nq28 = sw;\\nkiss = kiss*dec_med \\n      +(1-dec_med)*bnot(index2)*below(index,4);\\nq29 = kiss;\\n\\nk1 =  is_beat*bnot(index);\\nk2 =  is_beat*bnot(index);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/2;\\nmonitor = k1;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq5 = cos(time/4);\\nq6 = -sin(time/4);\\nq7 = -q6;\\nq8 = q5;\\n\\nzoom = 1;\\nrot = -0;\\n\\n\\n//KUGEL-POS\\ndt = .1*30/fps;\\nm = 1; //Masse\\n//Gravitationszentrum\\nx0 = .0; y0 = 0;\\n\\nax = -(xk-x0)/m + sign(vx+.001)*dt*bass/40; \\nay = -(yk-y0)/m + sign(vy+.001)*dt*treb/40;\\nmonitor = index3;\\nvx = vx*dec_slow + ax * dt; \\nvy = vy*dec_slow + ay * dt;\\n\\nxk = xk + vx*dt; \\nyk = yk + vy*dt;\\n\\nq9 = xk; q10 = yk;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, (uv - (\\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \\n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((mix (tmpvar_2, \\n    (1.0 - tmpvar_2.zyx)\\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\\n    (1.0 - rad)\\n  , 18.0)));\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = cos(((uv.y * texsize.y) / 2.0));\\n  tmpvar_2.y = sin(((uv.x * texsize.x) / 2.0));\\n  uv_1 = (uv + ((2.0 * texsize.zw) * tmpvar_2));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (1.4 * pow ((\\n    clamp (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), 0.0, 1.0)\\n   * \\n    (texture (sampler_pc_main, uv_1).xyz - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3))\\n  ), vec3(0.5, 0.5, 0.5)));\\n  ret = tmpvar_3.xyz;\\n }"}')},"./presets/converted/suksma - uninitialized variabowl (hydroponic chronic).json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"brighten":1,"wave_a":0.401,"wave_scale":3.177,"wave_smoothing":0,"wave_mystery":-0.4,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":2.289,"warpscale":5.472,"zoomexp":0.01,"zoom":0.9901,"warp":1.8566,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":512,"y":0.55,"rad":0.034,"tex_zoom":0.7874,"g":0.45,"g2":0,"border_a":0},"init_eqs_eel":"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;","frame_eqs_eel":"\\nrnd1 = if(equal(instance,0),t1,rnd1);\\nrnd2 = if(equal(instance,0),t2,rnd2);\\nrnd3 = if(equal(instance,0),t3,rnd3);\\nrnd4 = if(equal(instance,0),t4,rnd4);\\nrnd1 = 4*rnd1*(1-rnd1);\\nrnd2 = 4*rnd2*(1-rnd2);\\nrnd3 = 4*rnd3*(1-rnd3);\\nrnd4 = 4*rnd4*(1-rnd4);\\nt = .6;\\nt =  (rnd1+time*t) - int(rnd1+time*t);\\nt = t + rnd2*0.1;\\nwh = rnd4*asin(1)*4;\\nwv = 0.25 + rnd3*0.1;\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 1;\\nl = 1;\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = t *(cos(wh)*sin(wv)*l);\\nmy_y = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l;\\nmy_z = t*(sin(wh)*sin(wv)*l);\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.52,"y":0.41,"rad":0.5216,"ang":0.1885,"tex_zoom":0.73458,"g":1,"b":1,"r2":1,"b2":1,"a2":0.75,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.48,"y":0.41,"rad":0.61162,"ang":5.96903,"tex_zoom":0.73458,"g":1,"b":1,"r2":1,"b2":1,"a2":0.75,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"additive":1,"r":0.2,"g":0,"b":0,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=time*0.4 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n//a=(1-sample)*flip;\\n\\n//b=b+pow(1-sample,2)*0.3;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2 + 0.1;"},{"baseVals":{"additive":1,"r":0.2,"g":0,"b":0,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=time*0.4 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n//a=(1-sample)*flip;\\n\\n\\n//b=b+pow(1-sample,2)*0.3;\\n\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2 + 0.1;\\n"},{"baseVals":{"samples":61,"thick":1,"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;"},{"baseVals":{"samples":61,"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;"}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\nq1 =aspectx;\\nq2 = aspecty;\\n\\n\\nb = b + bass*bass*0.85;\\nm = m + mid*mid*0.85;\\nt = t + treb*treb*0.85;\\n\\nq3 = b*0.012;\\nq4 = m*0.012;\\nq5 = t*0.012;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * 2.0) + 1.7)\\n  )) - (2.0 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (-0.08 + tmpvar_2)));\\n  ret = tmpvar_6.xyz;\\n }"}')},"./presets/converted/suksma - vector exp 1 - couldn′t not.json":e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"decay":0.99,"wave_brighten":0,"wave_a":1,"wave_scale":0.01,"wave_mystery":-0.2,"warpanimspeed":3.434,"warpscale":1.295,"zoom":1.025,"warp":0.11284,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_b":1,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_g":0,"mv_b":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"rad":0.53742,"tex_zoom":1.72509,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1   = (vvb+vvm+vvt)*10;\\nq2   = (vvb+vvm+vvt)*10;\\nq3   = (vvb+vvm+vvt)*10;\\nq4   = (vvb+vvm+vvt)*10;\\nq5   = (vvb+vvm+vvt)*10;\\nq6   = (vvb+vvm+vvt)*10;\\nq7   = (vvb+vvm+vvt)*10;\\nq8   = (vvb+vvm+vvt)*10;\\nq9   = (vvb+vvm+vvt)*10;\\nq10  = (vvb+vvm+vvt)*10;\\nq11  = (vvb+vvm+vvt)*10;\\nq12  = (vvb+vvm+vvt)*10;\\nq13  = (vvb+vvm+vvt)*10;\\nq14  = (vvb+vvm+vvt)*10;\\nq15  = (vvb+vvm+vvt)*10;\\nq16  = (vvb+vvm+vvt)*10;\\nq17  = (vvb+vvm+vvt)*10;\\nq18  = (vvb+vvm+vvt)*10;\\nq19  = (vvb+vvm+vvt)*10;\\nq20  = (vvb+vvm+vvt)*10;\\nq21  = (vvb+vvm+vvt)*10;\\nq22  = (vvb+vvm+vvt)*10;\\nq23  = (vvb+vvm+vvt)*10;\\nq24  = (vvb+vvm+vvt)*10;\\nq25  = (vvb+vvm+vvt)*10;\\nq26  = (vvb+vvm+vvt)*10;\\nq27  = (vvb+vvm+vvt)*10;\\nq28  = (vvb+vvm+vvt)*10;\\nq29  = (vvb+vvm+vvt)*10;\\nq30  = (vvb+vvm+vvt)*10;\\nq31  = (vvb+vvm+vvt)*10;\\nq32  = (vvb+vvm+vvt)*10;\\n\\nzoom = .995;\\nwave_a = 0;\\nmv_g = 0.45 + 0.3*sin(time*1.33)+0.25*sin(treb);\\nmv_r = 0.45 + 0.3*sin(time*1.13)+0.25*(0.33*(bass+treb+mid));\\nmv_b = 0.45 + 0.3*sin(time*1.23)+0.25*sin(bass);\\nmv_dx=.1*sin(time*.1);\\nmv_dy=.13*cos(time*.084);\\nmv_x=64-int((sin(time*1.5)+1)*32);\\nmv_y=48-int((cos(time*1.5)+1)*22);\\nmonitor=mv_y;","pixel_eqs_eel":"//flexi per vertex\\ncx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\ndir = bass;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\nx1 = if( above(d,0.3),0,  sin(y-cy1)*0.05*dir);\\ny1 = if( above(d,0.3),0, -sin(x-cx1)*0.05*dir);\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\ndir = -mid*2;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\nx2 = if( above(d,0.2),0,  sin(y-cy1)*0.05*dir);\\ny2 = if( above(d,0.2),0, -sin(x-cx1)*0.05*dir);\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\ndir = treb*3;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\nx3 = if( above(d,0.1),0,  sin(y-cy1)*0.05*dir);\\ny3 = if( above(d,0.1),0, -sin(x-cx1)*0.05*dir);\\ndx = dx+x1+x2+x3;\\ndy = dy+y1+y2+y3;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.3, 0.3));\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 3.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_3.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\\n    (tmpvar_3 * texsize.zw)\\n   * 9.0))) - 0.01).xyz;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.0;\\n  tmpvar_6.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  tmpvar_6.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\\n    ((uv_1.xyy + (tmpvar_6 * 0.5)) * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\\n  uv_1 = (uv_1 - (tmpvar_8 * 0.04));\\n  ret_2 = (abs((\\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\\n   - \\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\\n  )) * (dot (tmpvar_7, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = pow (ret_2, vec3(0.5, 0.5, 0.5));\\n  ret_2 = tmpvar_9;\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = tmpvar_9;\\n  ret = tmpvar_10.xyz;\\n }"}')},"./presets/converted/yin - 191 - Temporal singularities.json":e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":4.990001,"decay":1,"echo_zoom":10.784553,"wave_mode":7,"additivewave":1,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":0.997938,"wave_scale":1.990516,"wave_smoothing":0,"wave_mystery":-1,"modwavealphastart":0.5,"modwavealphaend":1,"warpscale":0.999998,"zoomexp":0.999985,"fshader":1,"zoom":0.9999,"dy":0.00001,"warp":0.01,"wave_r":0.400001,"wave_g":0.4,"wave_y":1,"ob_size":0,"ob_r":0.300001,"ob_g":1,"ob_b":0.3,"ob_a":0.100001,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.5,"mv_x":8.960042,"mv_y":12.960033,"mv_dx":-0.26,"mv_dy":0.44,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"flip=-1;","frame_eqs_eel":"warp=0;decay=1;\\nvol = (.75*(bass_att+mid_att+treb_att)/3+.25*prevVol);\\nprevAvgBass=avgBass;\\navgBass=avgBass + (bass-AvgBass)*0.01;\\nq4=max(avgBass*1.001-.999*prevAvgBass,0);\\nq4=min(q4,.006);\\n// -------------------------------- Beat Detective 007 ----------------------------------\\nsure=if(equal(sure,0),.6,sure);\\ninterval=if(equal(interval,0),40,interval);\\nlastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);\\ndbass=(bass-pbass)/FPS;\\nbeat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);\\nsure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),\\nmin(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);\\nsure=max(.5,sure);\\ncheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);\\nbeat=if(cheat,1,beat);\\nsure=if(cheat,.95*sure,sure);\\nmaxdbass=max(maxdbass*.999,dbass);\\nmaxdbass=max(.012,maxdbass);\\nmaxdbass=min(.02,maxdbass);\\ninterval=if(beat, frame-lastbeat,interval);\\nlastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);\\ncheat=0;\\npbass=bass;\\n// ----------------------------------------------------------------------------------------------\\nlastFlip=if( above(bass/avgBass,2)*above(frame-lastFlip,100)*beat, frame,lastFlip );\\nflip = if(equal(frame,lastFlip),abs(flip)-1, flip);\\nwave_mystery=flip;\\nob_size = below(frame-lastBeat,FPS/8)*.08*(frame-lastBeat)/FPS;\\nf=abs(cos(time/8+.54+sin(time/3+1.075)));\\nob_r=1*f + 1*(1-f);\\nob_g=.3*f + 1*(1-f);\\nob_b=.3*f + .3*(1-f);\\nf=(frame-lastbeat)/interval;\\nf=above(f,.8)*below(f,1)*f; f=max(0,f); f=min(f,1);\\n\\nwave_g=.4+.6*(f);\\nwave_b=.4+.6*(1-f);\\n\\nq1= 3.1416*(wave_mystery+1)/2;\\nq2=.25*cos(time+abs(2*sin(time*2+2.311)*( vol-amt))*sin(time*7.45+.876));\\nq3=-q2;\\n\\namt=amt+ .05*(vol-amt);\\nprevVol=vol;\\nBPM = BPM + .01*(60*FPS/interval - BPM);\\nmonitor = 0*pctg+1*BPM;","pixel_eqs_eel":"x=x-.5;\\ny=-(y-.5);\\nttan1 = tan(q1+1.5708)*(x-q3)-y+q2;\\nttan2 = tan(q1+1.5708);\\nIsLeftYtonosY = above(ttan1*(sign(3.1416-q1)),0);\\n\\ndist = abs(ttan1)/sqrt(ttan2*ttan2 + 1);\\ntotX=.5*cos(q1)*sign(IsLeftYtonosY-.5)*sqr(dist)/(.5-q2);\\ntotY=-.5*sin(q1)*sign(IsLeftYtonosY-.5)*sqr(dist)/(.5-q2);\\n\\ndx=dx+totX;\\ndy=dy+totY;\\nprevRot=q1;\\nzoom = 1-25*q4*sqrt(pow(.5-dist,3))/abs(.5-q2);","warp":"","comp":""}')},"./presets/converted/yin - 393 - Artificial Inspiration (music driven - outward).json":e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":1,"gammaadj":1,"decay":0.898999,"echo_zoom":0.999993,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.411715,"wave_smoothing":0.9,"wave_mystery":-0.18,"fshader":0.3,"zoom":0.999999,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":0.92,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":1.773681,"tex_ang":3.141593,"tex_zoom":1.244713,"r":0,"a":0,"r2":1,"b2":1,"a2":0.5},"init_eqs_eel":"","frame_eqs_eel":"/////////// new hue2rgb algorithm ////////////\\nt=time;\\nr2=max(min(-1+.955*acos(cos(t)),1),0);\\ng2=max(min(-1+.955*acos(cos(t+2.0942)),1),0);\\nb2=max(min(-1+.955*acos(cos(t+4.1883)),1),0);\\n//////////////////////////////////////////////\\n\\nr=r2;\\ng=g2;\\nb=b2;\\n\\na2=.25*(1-.5*above(q1,1)*min(q1-1,2));\\na=below(q1,1)*sqrt(q1)*.07*a2;"}],"waves":[{"baseVals":{"enabled":1,"additive":1,"g":0.25,"b":0.12},"init_eqs_eel":"","frame_eqs_eel":"bt=bt+(.5+2*above(bass-pbass,0)*(bass-pbass))/FPS;\\npbass=bass;\\n\\nt1=bt; //mytime\\nt2=q1;\\nt3=.3*q1;","point_eqs_eel":"t=t1+t2*(1-sample);\\n\\nox=.5+(.3+.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\noy=.5+(.3+.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\n\\nang=atan2( (py-oy),(px-ox) );\\nl=tan(ang);\\nx2=.5+(.3-.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\ny2=.5+(.3-.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\nsum = (l*x2-y2+oy-l*ox)*sign(ang)*sign(l);\\ndir=-1+2*above(sum,-.001);\\n\\nxtrudx=(1-counter%2)*t3*sample*cos(ang+dir*1.5707)*abs(value1+value2);\\nxtrudy=(1-counter%2)*t3*sample*sin(ang+dir*1.5707)*abs(value1+value2);\\n\\nx=ox+xtrudx;\\ny=oy+xtrudy;\\n\\npx=ox;\\npy=oy;\\n\\ncounter=1-counter;\\na=sqr(sample);"},{"baseVals":{"enabled":1,"additive":1,"g":0.25,"b":0.12},"init_eqs_eel":"","frame_eqs_eel":"bt=bt+(.5+2*above(bass-pbass,0)*(bass-pbass))/FPS;\\npbass=bass;\\n\\nt1=bt; //mytime\\nt2=q1;\\nt3=.3*q1;","point_eqs_eel":"t=t1+t2*(1-sample);\\n\\nox=.5+(.3-.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\noy=.5+(.3-.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\n\\nang=atan2( (py-oy),(px-ox) );\\nl=tan(ang);\\nx2=.5+(.3+.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\ny2=.5+(.3+.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\nsum = (l*x2-y2+oy-l*ox)*sign(ang)*sign(l);\\ndir=-1+2*above(sum,-.001);\\n\\nxtrudx=(counter%2)*t3*sample*cos(ang+dir*1.5707)*abs(value1+value2);\\nxtrudy=(counter%2)*t3*sample*sin(ang+dir*1.5707)*abs(value1+value2);\\n\\nx=ox+xtrudx;\\ny=oy+xtrudy;\\n\\npx=ox;\\npy=oy;\\n\\ncounter=1-counter;\\na=sqr(sample);"},{"baseVals":{"enabled":1,"additive":1,"r":0.12,"g":0.25},"init_eqs_eel":"","frame_eqs_eel":"tt=tt+(.5+2*above(treb-ptreb,0)*(treb-ptreb))/FPS;\\nptreb=treb;\\n\\nt1=tt;\\nt2=q1;\\nt3=.3*q1;","point_eqs_eel":"t=t1+t2*(1-sample);\\n\\nox=.5+(.3+.05*sample)*cos(.78*t+2.09+3.1415*sin(1.39*t+.91))*sin(1.72*t+1.43);\\noy=.5+(.3+.05*sample)*1.25*sin(1.41*t+.43)*cos(1.29*t+2.9+3.1415*sin(.93*t+2.6));\\n\\n\\nang=atan( (py-oy)/(px-ox) );\\n\\nl=tan(ang);\\nx2=.5+(.3-.05*sample)*cos(.78*t+2.09+3.1415*sin(1.39*t+.91))*sin(1.72*t+1.43);\\ny2=.5+(.3-.05*sample)*1.25*sin(1.41*t+.43)*cos(1.29*t+2.9+3.1415*sin(.93*t+2.6));\\nsum = (l*x2-y2+oy-l*ox)*sign(ang)*sign(l);\\ndir=-1+2*above(sum,-.001);\\n\\nxtrudx=(1-counter%2)*t3*sample*cos(ang+dir*1.5707)*abs(value1+value2);\\nxtrudy=(1-counter%2)*t3*sample*sin(ang+dir*1.5707)*abs(value1+value2);\\n\\nx=ox+xtrudx;\\ny=oy+xtrudy;\\n\\npx=ox;\\npy=oy;\\n\\ncounter=1-counter;\\na=sqr(sample);"},{"baseVals":{"enabled":1,"additive":1,"r":0.12,"g":0.25},"init_eqs_eel":"","frame_eqs_eel":"tt=tt+(.5+2*above(treb-ptreb,0)*(treb-ptreb))/FPS;\\nptreb=treb;\\n\\nt1=tt;\\nt2=q1;\\nt3=.3*q1;","point_eqs_eel":"t=t1+t2*(1-sample);\\n\\nox=.5+(.3-.05*sample)*cos(.78*t+2.09+3.1415*sin(1.39*t+.91))*sin(1.72*t+1.43);\\noy=.5+(.3-.05*sample)*1.25*sin(1.41*t+.43)*cos(1.29*t+2.9+3.1415*sin(.93*t+2.6));\\n\\n\\nang=atan( (py-oy)/(px-ox) );\\nl=tan(ang);\\nx2=.5+(.3+.05*sample)*cos(.78*t+2.09+3.1415*sin(1.39*t+.91))*sin(1.72*t+1.43);\\ny2=.5+(.3+.05*sample)*1.25*sin(1.41*t+.43)*cos(1.29*t+2.9+3.1415*sin(.93*t+2.6));\\nsum = (l*x2-y2+oy-l*ox)*sign(ang)*sign(l);\\ndir=-1+2*above(sum,-.001);\\n\\nxtrudx=(1-counter%2)*t3*sample*cos(ang+dir*1.5707)*abs(value1+value2);\\nxtrudy=(1-counter%2)*t3*sample*sin(ang+dir*1.5707)*abs(value1+value2);\\n\\nx=ox+xtrudx;\\ny=oy+xtrudy;\\n\\npx=ox;\\npy=oy;\\n\\ncounter=1-counter;\\na=sqr(sample);"}],"init_eqs_eel":"","frame_eqs_eel":"// -------------------------------- Beat Detective v0.07 ----------------------------------\\nsure=if(equal(sure,0),.6,sure);\\ninterval=if(equal(interval,0),40,interval);\\nlastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);\\ndbass=(bass-pbass)/FPS;\\nbeat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);\\nsure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),\\nmin(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);\\nsure=max(.5,sure);\\ncheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);\\nbeat=if(cheat,1,beat);\\nsure=if(cheat,.95*sure,sure);\\nmaxdbass=max(maxdbass*.999,dbass);\\nmaxdbass=max(.012,maxdbass);\\nmaxdbass=min(.02,maxdbass);\\ninterval=if(beat, frame-lastbeat,interval);\\nlastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);\\ncheat=0;\\npbass=bass;\\n// ----------------------------------------------------------------------------------------------\\n\\nwarp=0;\\ngamma=1.1;\\ndt=1/FPS;\\n\\nmytime=mytime+dt;\\ncontvol=min( max(.5, (1-.5*dt)*contvol+.5*dt*(bass+mid+treb)*.333 ) ,2 ) ;\\nq1=contvol;\\nq2=mytime;\\nq8=beat;\\n\\ndecay=.935-above(q1,1.5)*(q1-1.5)*.03;\\nmonitor=q1;","pixel_eqs_eel":"zoom=1+ .1*(rad-.5)*abs(rad-.5);","warp":"","comp":""}')}},n={};function a(t){if(n[t])return n[t].exports;var r=n[t]={exports:{}};return e[t](r,r.exports,a),r.exports}return a.d=(e,n)=>{for(var t in n)a.o(n,t)&&!a.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},a.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a("./base.js")})()},e.exports=n()}}]);