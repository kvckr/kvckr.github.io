"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1619],{1619:function(r,n,t){t.r(n),t.d(n,{extractExeIcon:function(){return o}});var e=t(8764).Buffer;const i=(r,n)=>{let{bitCount:t,colors:e,dataSize:i,height:o,planes:a,width:c}=r;return Uint8Array.from([c,32===t&&o===2*c?c:o,e,0,...new Uint8Array(Uint16Array.from([a]).buffer),...new Uint8Array(Uint16Array.from([t]).buffer),...new Uint8Array(Uint32Array.from([i]).buffer),...new Uint8Array(Uint32Array.from([n]).buffer)])},o=async r=>{const n=await t.e(4543).then(t.bind(t,4543));let o,a;try{({entries:a}=n.NtExecutableResource.from(n.NtExecutable.from(r,{ignoreCert:!0}),!0)),[o]=n.Resource.IconGroupEntry.fromEntries(a)}catch(n){if(n.message.includes("Binary with symbols is not supported now")){const{unarchive:n}=await t.e(54).then(t.bind(t,54));try{const{"/.rsrc/ICON/1.ico":t}=await n("data.exe",r)||{};return e.from(t)}catch{}}return}if(!o?.icons)return;let c=6+16*o.icons.length;const f=o.icons.map((r=>{let{iconID:n}=r;return a.find((r=>{let{id:t,type:e}=r;return 3===e&&t===n}))})),u=o.icons.reduce(((r,n,t)=>(c+=t?f[t-1]?.bin.byteLength??0:0,e.concat([r,i(n,c)]))),(s=o.icons.length,Uint8Array.from([0,0,...new Uint8Array(Uint16Array.from([1]).buffer),...new Uint8Array(Uint16Array.from([s]).buffer)])));var s;return e.from(f.reduce(((r,n)=>e.concat([r,e.from(n.bin)])),u))}}}]);