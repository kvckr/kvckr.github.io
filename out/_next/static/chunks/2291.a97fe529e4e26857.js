"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2291,3201],{2858:function(e,t,r){r.d(t,{P:function(){return i},w:function(){return n}});const n={0:{name:"Black",rgb:[12,12,12]},1:{name:"Blue",rgb:[0,55,218]},2:{name:"Green",rgb:[19,161,14]},3:{name:"Aqua",rgb:[58,150,221]},4:{name:"Red",rgb:[197,15,31]},5:{name:"Purple",rgb:[136,23,152]},6:{name:"Yellow",rgb:[193,156,0]},7:{name:"White",rgb:[204,204,204]},8:{name:"Gray",rgb:[118,118,118]},9:{name:"Light Blue",rgb:[59,120,255]},A:{name:"Light Green",rgb:[22,198,12]},B:{name:"Light Aqua",rgb:[97,214,214]},C:{name:"Light Red",rgb:[231,72,86]},D:{name:"Light Purple",rgb:[180,0,158]},E:{name:"Light Yellow",rgb:[249,241,165]},F:{name:"Bright White",rgb:[242,242,242]}},i=function(e,t,r){return`[${arguments.length>3&&void 0!==arguments[3]&&arguments[3]?"48":"38"};2;${e};${t};${r}m`}},1127:function(e,t,r){r.d(t,{$4:function(){return p},CN:function(){return c},JF:function(){return u},R_:function(){return s},hR:function(){return g},j3:function(){return l},j5:function(){return h},lO:function(){return d},vR:function(){return w},xy:function(){return f}});var n=r(2858),i=r(2794),o=r(3989),a=r(8680);const s=(e,t,r)=>{Object.entries(t).forEach((t=>{let[r,n]=t;e?.println(`${r.padEnd(14)} ${n}`)})),r&&(e?.println("\r\nAliases:\r\n"),Object.entries(r).forEach((r=>{let[n,i]=r;i.forEach((r=>{e?.println(`${r.padEnd(14)} ${t[n]}`)}))})))},c={cd:"Changes the current directory.",clear:"Clears the screen.",color:"Specifies color attribute of console output.",copy:"Copies a file to another location.",date:"Displays the date.",del:"Deletes a file.",dir:"Displays list of entries in current directory.",echo:"Displays messages that are passed to it.",exit:"Quits the command interpreter.",ffmpeg:"Convert audio or video file to another format.",file:"Detects the MIME type of the file.",find:"Searches for a text string in a file or files.",git:"Read from git repositories.",help:"Provides Help information for commands.",history:"Displays command history list.",imagemagick:"Convert an image file to another format.",ipconfig:"Displays current IP.",license:"Displays license.",md:"Creates a directory.",mount:"Mounts a local file system directory.",move:"Moves file or directory.",neofetch:"Displays system information.",pwd:"Prints the working directory.",python:"Run code through Python interpreter.",rd:"Removes a directory.",ren:"Renames a file or directory.",rm:"Removes a file or directory.",sheep:"Spawn a new sheep",shutdown:"Allows proper local shutdown of machine.",taskkill:"Kill or stop a running process or application.",tasklist:"Displays all currently running processes.",time:"Displays the system time.",title:"Sets the window title for the command interpreter.",touch:"Create empty file.",type:"Displays the contents of a file.",uptime:"Display the current uptime of the local system.",ver:"Displays the system version.",wapm:"Run universal Wasm binaries.",weather:"Weather forecast service",whoami:"Displays user information.",xlsx:"Convert a spreadsheet file to another format."},l={cd:["chdir"],clear:["cls"],copy:["cp"],del:["erase"],dir:["ls"],exit:["quit"],find:["search"],git:["isogit"],ipconfig:["ifconfig","whatsmyip"],md:["mkdir"],move:["mv"],neofetch:["systeminfo"],python:["py"],rd:["rmdir"],ren:["rename"],sheep:["esheep"],shutdown:["logout","restart"],taskkill:["kill"],tasklist:["ps"],type:["cat"],ver:["version"],wapm:["wax"],weather:["wttr"]},m=new Set(["cat","cd","chdir","copy","cp","del","dir","erase","ffmpeg","file","imagemagick","ls","md","mkdir","move","mv","rd","ren","rename","rm","rmdir","touch","type","vim","xlsx"]),f=e=>`'${e}' is not recognized as an internal or external command, operable program or batch file.`,u=(e,t)=>{const{_autocompleteHandlers:r}=t;r.forEach((e=>{let{fn:r}=e;return t.removeAutocompleteHandler(r)})),t.addAutocompleteHandler(((t,r)=>{let[n]=r;if(0===t)return[...Object.keys(c),...e];if(1===t){const t=n.toLowerCase();if("git"===t)return Object.keys(i.C);if(m.has(t))return e;if(Object.keys(o.Z).map((e=>e.toLowerCase())).includes(t))return e}return[]}))},p=e=>{let t=!1,r="";const n=e=>{r&&e.push(r),r=""},i=[...e].reduce(((e,i)=>(" "!==i||t?'"'===i?(t=!t,t||n(e)):r+=i:n(e),e)),[]);return r?[...i,r]:i},h=function(e,t,r,n){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"=";if(!n){const t=e.map((e=>{let[t,r]=e;return t.padEnd(r," ")})).join(" "),n=e.map((e=>{let[,t]=e;return i.repeat(t)})).join(" ");r?.println(t),r?.println(n)}const o=t.map((t=>t.map(((r,n)=>{const[,i,o,a]=e[n];let s=n===t.length-1?r:r.slice(0,i);return a&&(s=a(s)),o?s.padStart(i," "):s.padEnd(i," ")})).join(" ")));o.length>0&&o.forEach((e=>r?.println(e)))},d=async()=>{const{quota:e=0,usage:t=0}=await(navigator.storage?.estimate?.())||{};return 0===e?"":`  ${(e-t).toLocaleString()} bytes`},g=function(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(window.performance){const[{duration:t}]=window.performance.getEntriesByType("navigation"),r=window.performance.timeOrigin+t,n=Math.ceil(Date.now()-r),i=Math.floor(n/a.y8),o=new Date(n),s=o.getUTCHours(),c=o.getUTCMinutes(),l=o.getUTCSeconds();return[...i?[`${i} day${1===i?"":"s"}`]:[],...s?[`${s} hour${1===s?"":"s"}`]:[],...c?[`${c} ${e?"min":"minute"}${1===c?"":"s"}`]:[],...l?[`${l} ${e?"sec":"second"}${1===l?"":"s"}`]:[]].join(", ")}return"Unknown"},w=(e,t)=>`${(0,n.P)(...n.w[e].rgb,!0)}${(0,n.P)(...n.w[e].rgb)}|||${t?.join("")||`${(0,n.P)(...n.w[0].rgb,!0)}${(0,n.P)(...n.w[7].rgb)}`}`},2794:function(e,t,r){r.d(t,{C:function(){return a}});var n=r(1127),i=r(1864);const o=new Set(["checkout","clone","fetch","init","merge","pull"]),a={add:"Add a file to the git index (aka staging area)",branch:"Create a branch",checkout:"Checkout a branch",clone:"Clone a repository",commit:"Create a new commit",fetch:"Fetch commits from a remote repository",init:"Initialize a new repository",log:"Get commit descriptions from the git history",merge:"Merge two branches",pull:"Fetch and merge commits from a remote repository",push:"Push a branch or tag",status:"Tell whether a file has been changed",tag:"Create a lightweight tag",version:"Return the version number of isomorphic-git"};t.Z=async(e,t,s,c,l)=>{let[m,...f]=e;const u=await Promise.all([r.e(8375),r.e(9591),r.e(7368)]).then(r.bind(r,764));if(m in u){const e=await r.e(246).then(r.bind(r,246)),{default:n}=await r.e(6562).then(r.t.bind(r,6562,23)),{username:a,password:p,...h}=n(f),d=()=>({password:p,username:a}),g=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return s.println(`remote: ${e.trim()}`)},w=[],y=e=>{let{phase:t}=e;w[w.length-1]!==t&&(s.println(t),w.push(t))},b={...h,corsProxy:"https://cors.isomorphic-git.org",dir:t,fs:c,http:e,onAuth:d,onMessage:g,onProgress:y};if("clone"===m){const e=h.url?.split("/").pop()?.replace(/\.git$/,"")||"";e&&(s.println(`Cloning into '${e}'...`),b.dir=(0,i.join)(t,e))}try{const e=await(u[m]?.(b));"string"==typeof e&&s.println(e)}catch(e){s.println(e.message)}o.has(m)&&l(t)}else(0,n.R_)(s,a)}},4393:function(e,t,r){var n=r(6166),i=r(80),o=r(6050),a=r(5620),s=r(2675),c=r(6819),l=r(1864),m=r(7294),f=r(8680),u=r(9595);t.Z=e=>{let{callback:t,directory:r=f.Ll,id:p,onDragLeave:h,onDragOver:d,updatePositions:g}=e;const{url:w}=(0,s.z)(),{iconPositions:y,sortOrders:b,setIconPositions:v}=(0,c.k)(),{mkdirRecursive:$,updateFolder:k,writeFile:D}=(0,a.o)(),C=(0,m.useCallback)((async(e,t,r)=>{if(p)if(t){const n=(0,l.join)(f.Ll,e);await $(f.Ll),await D(n,t,!0)&&(r===o.v.UPDATE_URL&&w(p,n),k(f.Ll,e))}else r===o.v.UPDATE_URL&&w(p,e)}),[p,$,k,w,D]),{openTransferDialog:P}=(0,n.Z)();return{onDragLeave:h,onDragOver:e=>{d?.(e),(0,u.nK)(e)},onDrop:e=>{if(g&&e.target instanceof HTMLElement){const{files:t,text:n}=(0,i.p4)(e);if(0===t.length&&""===n)return;const o={x:e.clientX,y:e.clientY};let a=[];if(n){try{a=JSON.parse(n)}catch{}const[e]=a;if(!e)return;if(e.startsWith(r)&&(0,l.basename)(e)===(0,l.relative)(r,e))return;a=a.map((e=>(0,l.basename)(e)))}else a=t instanceof FileList?[...t].map((e=>e.name)):[...t].map((e=>e.getAsFile()?.name||"")).filter(Boolean);a=a.map((e=>{if(!y[`${r}/${e}`])return e;let t=0,n="";do{t+=1,n=`${r}/${(0,l.basename)(e,(0,l.extname)(e))} (${t})${(0,l.extname)(e)}`}while(y[n]);return(0,l.basename)(n)})),(0,u.vi)(r,e.target,y,b,o,a,v)}(0,i.WG)(e,t||C,r,P,Boolean(p))}}}},3201:function(e,t,r){r.r(t),r.d(t,{getIpfsFileName:function(){return c},getIpfsGatewayUrl:function(){return s},getIpfsResource:function(){return l}});var n=r(8680),i=r(8764).Buffer;let o="";const a=e=>new Promise((t=>{const r=window.setTimeout((()=>t(!1)),n.i2),i=new Image;i.addEventListener("load",(()=>{window.clearTimeout(r),t(!0)}),n.K7),i.addEventListener("error",(()=>{window.clearTimeout(r),t(!1)}),n.K7),i.src=`${e.replace("<CID>","bafybeibwzifw52ttrkqlikfzext5akxu7lz4xiwjgwzmqcpdzmp3n5vnbe")}?now=${Date.now()}&filename=1x1.png#x-ipfs-companion-no-redirect`})),s=async(e,t)=>{if(!o||t){const e=t?n.i6.filter((e=>e!==o)):n.i6;for(const t of e)if(await a(t)){o=t;break}if(!o)return""}const{pathname:i,protocol:s,search:c}=new URL(e);if("ipfs:"!==s)return"";const[l="",...m]=i.split("/").filter(Boolean),{CID:f}=await r.e(8060).then(r.bind(r,8060));return`${o.replace("<CID>",f.parse(l).toV1().toString())}${m.join("/")}${c}`},c=async(e,t)=>{const{pathname:n,searchParams:i}=new URL(e),o=i.get("filename");if(o)return o;const{fileTypeFromBuffer:a}=await Promise.all([r.e(8090),r.e(3545),r.e(3301)]).then(r.bind(r,3545)),{ext:s=""}=await a(t)||{};return`${n.split("/").filter(Boolean).join("_")}${s?`.${s}`:""}`},l=async e=>{let t;const r={...n.P8,cache:"no-cache",credentials:"omit",keepalive:!1,mode:"cors",referrerPolicy:"no-referrer",window:null};try{t=await fetch(await s(e),r)}catch(n){"Failed to fetch"===n.message&&(t=await fetch(await s(e,!0),r))}return t instanceof Response?i.from(await t.arrayBuffer()):i.from("")}}}]);