import{loadText,makePassFBO,makePass}from"./utils.js";const pyramidHeight=5,levelStrengths=Array(5).fill().map(((t,r)=>Math.pow(r/10+.5,1/3).toPrecision(5))).reverse(),makePyramid=(t,r,e)=>Array(r).fill().map((r=>makePassFBO(t,e))),resizePyramid=(t,r,e,a)=>t.forEach(((t,o)=>t.resize(Math.floor(r*a/2**o),Math.floor(e*a/2**o))));export default({regl:t,config:r},e)=>{const{bloomStrength:a,bloomSize:o,highPassThreshold:i}=r;if(!(o>0&&a>0))return makePass({primary:e.primary,bloom:makePassFBO(t)});const s=makePyramid(t,5,r.useHalfFloat),l=makePyramid(t,5,r.useHalfFloat),m=makePyramid(t,5,r.useHalfFloat),f=makePassFBO(t,r.useHalfFloat),n=loadText("shaders/glsl/highPass.frag.glsl"),p=t({frag:t.prop("frag"),uniforms:{highPassThreshold:i,tex:t.prop("tex")},framebuffer:t.prop("fbo")}),g=loadText("shaders/glsl/blur.frag.glsl"),d=t({frag:t.prop("frag"),uniforms:{tex:t.prop("tex"),direction:t.prop("direction"),height:t.context("viewportWidth"),width:t.context("viewportHeight")},framebuffer:t.prop("fbo")}),h=t({frag:`\n\t\t\tprecision mediump float;\n\t\t\tvarying vec2 vUV;\n\t\t\t${m.map(((t,r)=>`uniform sampler2D pyr_${r};`)).join("\n")}\n\t\t\tuniform float bloomStrength;\n\t\t\tvoid main() {\n\t\t\t\tvec4 total = vec4(0.);\n\t\t\t\t${m.map(((t,r)=>`total += texture2D(pyr_${r}, vUV) * ${levelStrengths[r]};`)).join("\n")}\n\t\t\t\tgl_FragColor = total * bloomStrength;\n\t\t\t}\n\t\t`,uniforms:{bloomStrength:a,...Object.fromEntries(m.map(((t,r)=>[`pyr_${r}`,t])))},framebuffer:f});return makePass({primary:e.primary,bloom:f},Promise.all([n.loaded,g.loaded]),((t,r)=>{resizePyramid(s,t,r,o),resizePyramid(l,t,r,o),resizePyramid(m,t,r,o),f.resize(t,r)}),(()=>{for(let t=0;t<5;t++){const r=s[t],a=l[t],o=m[t];p({fbo:r,frag:n.text(),tex:0===t?e.primary:s[t-1]}),d({fbo:a,frag:g.text(),tex:r,direction:[1,0]}),d({fbo:o,frag:g.text(),tex:a,direction:[0,1]})}h()}))};